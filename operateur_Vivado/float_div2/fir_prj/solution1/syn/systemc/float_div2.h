// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _float_div2_HH_
#define _float_div2_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct float_div2 : public sc_module {
    // Port declarations 6
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > in_r;
    sc_out< sc_lv<32> > ap_return;
    // Port declarations for the virtual clock. 
    sc_in_clk ap_virtual_clock;


    // Module declarations
    float_div2(sc_module_name name);
    SC_HAS_PROCESS(float_div2);

    ~float_div2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<32> > p_Val2_s_fu_58_p1;
    sc_signal< sc_lv<8> > new_exp_V_4_fu_70_p4;
    sc_signal< sc_lv<23> > p_Val2_1_fu_80_p1;
    sc_signal< sc_lv<1> > tmp_6_fu_90_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_84_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_108_p2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_114_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_120_p2;
    sc_signal< sc_lv<1> > tmp_fu_96_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_126_p2;
    sc_signal< sc_lv<8> > new_exp_V_1_fu_102_p2;
    sc_signal< sc_lv<8> > new_exp_V_2_fu_132_p3;
    sc_signal< sc_lv<8> > new_exp_V_3_fu_140_p3;
    sc_signal< sc_lv<7> > tmp_5_fu_162_p4;
    sc_signal< sc_lv<22> > r_V_fu_178_p4;
    sc_signal< sc_lv<1> > tmp_7_fu_192_p1;
    sc_signal< sc_lv<1> > tmp_8_fu_196_p3;
    sc_signal< sc_lv<23> > r_V_2_fu_188_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_204_p2;
    sc_signal< sc_lv<23> > new_mant_V_fu_210_p2;
    sc_signal< sc_lv<1> > icmp_fu_172_p2;
    sc_signal< sc_lv<23> > new_mant_V_2_fu_216_p3;
    sc_signal< sc_lv<23> > new_mant_V_7_fu_224_p3;
    sc_signal< sc_lv<1> > tmp_s_fu_156_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_232_p3;
    sc_signal< sc_lv<1> > sel_tmp4_fu_240_p2;
    sc_signal< sc_lv<1> > not_sel_tmp_fu_246_p2;
    sc_signal< sc_lv<23> > new_mant_V_5_fu_252_p4;
    sc_signal< sc_lv<1> > p_Repl2_2_fu_62_p3;
    sc_signal< sc_lv<8> > new_exp_V_fu_148_p3;
    sc_signal< sc_lv<23> > new_mant_V_8_fu_262_p3;
    sc_signal< sc_lv<32> > p_Result_s_fu_270_p4;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<23> ap_const_lv23_7FFFFF;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<23> ap_const_lv23_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_icmp_fu_172_p2();
    void thread_new_exp_V_1_fu_102_p2();
    void thread_new_exp_V_2_fu_132_p3();
    void thread_new_exp_V_3_fu_140_p3();
    void thread_new_exp_V_4_fu_70_p4();
    void thread_new_exp_V_fu_148_p3();
    void thread_new_mant_V_2_fu_216_p3();
    void thread_new_mant_V_5_fu_252_p4();
    void thread_new_mant_V_7_fu_224_p3();
    void thread_new_mant_V_8_fu_262_p3();
    void thread_new_mant_V_fu_210_p2();
    void thread_not_sel_tmp_fu_246_p2();
    void thread_p_Repl2_2_fu_62_p3();
    void thread_p_Result_s_fu_270_p4();
    void thread_p_Val2_1_fu_80_p1();
    void thread_p_Val2_s_fu_58_p1();
    void thread_r_V_2_fu_188_p1();
    void thread_r_V_fu_178_p4();
    void thread_sel_tmp1_fu_114_p2();
    void thread_sel_tmp2_fu_120_p2();
    void thread_sel_tmp3_fu_126_p2();
    void thread_sel_tmp4_fu_240_p2();
    void thread_sel_tmp_fu_108_p2();
    void thread_tmp_1_fu_204_p2();
    void thread_tmp_4_fu_84_p2();
    void thread_tmp_5_fu_162_p4();
    void thread_tmp_6_fu_90_p2();
    void thread_tmp_7_fu_192_p1();
    void thread_tmp_8_fu_196_p3();
    void thread_tmp_9_fu_232_p3();
    void thread_tmp_fu_96_p2();
    void thread_tmp_s_fu_156_p2();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
