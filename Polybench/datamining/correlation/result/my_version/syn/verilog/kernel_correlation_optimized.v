// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_correlation_optimized,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.404000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=12,HLS_SYN_FF=18281,HLS_SYN_LUT=14854,HLS_VERSION=2018_2}" *)

module kernel_correlation_optimized (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m,
        n,
        float_n,
        data_address0,
        data_ce0,
        data_we0,
        data_d0,
        data_q0,
        data_address1,
        data_ce1,
        data_q1,
        symmat_address0,
        symmat_ce0,
        symmat_we0,
        symmat_d0,
        mean_address0,
        mean_ce0,
        mean_we0,
        mean_d0,
        mean_q0,
        stddev_address0,
        stddev_ce0,
        stddev_we0,
        stddev_d0,
        stddev_q0
);

parameter    ap_ST_fsm_state1 = 277'd1;
parameter    ap_ST_fsm_state2 = 277'd2;
parameter    ap_ST_fsm_state3 = 277'd4;
parameter    ap_ST_fsm_state4 = 277'd8;
parameter    ap_ST_fsm_state5 = 277'd16;
parameter    ap_ST_fsm_state6 = 277'd32;
parameter    ap_ST_fsm_state7 = 277'd64;
parameter    ap_ST_fsm_state8 = 277'd128;
parameter    ap_ST_fsm_state9 = 277'd256;
parameter    ap_ST_fsm_state10 = 277'd512;
parameter    ap_ST_fsm_state11 = 277'd1024;
parameter    ap_ST_fsm_state12 = 277'd2048;
parameter    ap_ST_fsm_state13 = 277'd4096;
parameter    ap_ST_fsm_state14 = 277'd8192;
parameter    ap_ST_fsm_state15 = 277'd16384;
parameter    ap_ST_fsm_state16 = 277'd32768;
parameter    ap_ST_fsm_state17 = 277'd65536;
parameter    ap_ST_fsm_state18 = 277'd131072;
parameter    ap_ST_fsm_state19 = 277'd262144;
parameter    ap_ST_fsm_state20 = 277'd524288;
parameter    ap_ST_fsm_state21 = 277'd1048576;
parameter    ap_ST_fsm_state22 = 277'd2097152;
parameter    ap_ST_fsm_state23 = 277'd4194304;
parameter    ap_ST_fsm_state24 = 277'd8388608;
parameter    ap_ST_fsm_state25 = 277'd16777216;
parameter    ap_ST_fsm_state26 = 277'd33554432;
parameter    ap_ST_fsm_state27 = 277'd67108864;
parameter    ap_ST_fsm_state28 = 277'd134217728;
parameter    ap_ST_fsm_state29 = 277'd268435456;
parameter    ap_ST_fsm_state30 = 277'd536870912;
parameter    ap_ST_fsm_state31 = 277'd1073741824;
parameter    ap_ST_fsm_state32 = 277'd2147483648;
parameter    ap_ST_fsm_state33 = 277'd4294967296;
parameter    ap_ST_fsm_state34 = 277'd8589934592;
parameter    ap_ST_fsm_state35 = 277'd17179869184;
parameter    ap_ST_fsm_state36 = 277'd34359738368;
parameter    ap_ST_fsm_state37 = 277'd68719476736;
parameter    ap_ST_fsm_state38 = 277'd137438953472;
parameter    ap_ST_fsm_state39 = 277'd274877906944;
parameter    ap_ST_fsm_state40 = 277'd549755813888;
parameter    ap_ST_fsm_state41 = 277'd1099511627776;
parameter    ap_ST_fsm_state42 = 277'd2199023255552;
parameter    ap_ST_fsm_state43 = 277'd4398046511104;
parameter    ap_ST_fsm_state44 = 277'd8796093022208;
parameter    ap_ST_fsm_state45 = 277'd17592186044416;
parameter    ap_ST_fsm_state46 = 277'd35184372088832;
parameter    ap_ST_fsm_state47 = 277'd70368744177664;
parameter    ap_ST_fsm_state48 = 277'd140737488355328;
parameter    ap_ST_fsm_state49 = 277'd281474976710656;
parameter    ap_ST_fsm_state50 = 277'd562949953421312;
parameter    ap_ST_fsm_state51 = 277'd1125899906842624;
parameter    ap_ST_fsm_state52 = 277'd2251799813685248;
parameter    ap_ST_fsm_state53 = 277'd4503599627370496;
parameter    ap_ST_fsm_state54 = 277'd9007199254740992;
parameter    ap_ST_fsm_state55 = 277'd18014398509481984;
parameter    ap_ST_fsm_state56 = 277'd36028797018963968;
parameter    ap_ST_fsm_state57 = 277'd72057594037927936;
parameter    ap_ST_fsm_state58 = 277'd144115188075855872;
parameter    ap_ST_fsm_state59 = 277'd288230376151711744;
parameter    ap_ST_fsm_state60 = 277'd576460752303423488;
parameter    ap_ST_fsm_state61 = 277'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 277'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 277'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 277'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 277'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 277'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 277'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 277'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 277'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 277'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 277'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 277'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 277'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 277'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 277'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 277'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 277'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 277'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 277'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 277'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 277'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 277'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 277'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 277'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 277'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 277'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 277'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 277'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 277'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 277'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 277'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 277'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 277'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 277'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 277'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 277'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 277'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 277'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 277'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 277'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 277'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 277'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 277'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 277'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 277'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 277'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 277'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 277'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 277'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 277'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 277'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 277'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 277'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 277'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 277'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 277'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 277'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 277'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 277'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 277'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 277'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 277'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 277'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 277'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 277'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 277'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 277'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 277'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 277'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 277'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 277'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 277'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 277'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 277'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 277'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 277'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 277'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 277'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 277'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 277'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 277'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 277'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 277'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 277'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 277'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 277'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 277'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 277'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 277'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 277'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 277'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 277'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 277'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 277'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 277'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 277'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 277'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 277'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 277'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 277'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 277'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 277'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 277'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 277'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 277'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 277'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 277'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 277'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 277'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 277'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 277'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 277'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 277'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 277'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 277'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 277'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 277'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 277'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 277'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 277'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 277'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 277'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 277'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 277'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 277'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 277'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 277'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 277'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 277'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 277'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 277'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 277'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 277'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 277'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 277'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 277'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 277'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 277'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 277'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 277'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 277'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 277'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 277'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 277'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 277'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 277'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 277'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 277'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 277'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 277'd822752278660603021077484591278675252491367932816789931674304512;
parameter    ap_ST_fsm_state211 = 277'd1645504557321206042154969182557350504982735865633579863348609024;
parameter    ap_ST_fsm_state212 = 277'd3291009114642412084309938365114701009965471731267159726697218048;
parameter    ap_ST_fsm_state213 = 277'd6582018229284824168619876730229402019930943462534319453394436096;
parameter    ap_ST_fsm_state214 = 277'd13164036458569648337239753460458804039861886925068638906788872192;
parameter    ap_ST_fsm_state215 = 277'd26328072917139296674479506920917608079723773850137277813577744384;
parameter    ap_ST_fsm_state216 = 277'd52656145834278593348959013841835216159447547700274555627155488768;
parameter    ap_ST_fsm_state217 = 277'd105312291668557186697918027683670432318895095400549111254310977536;
parameter    ap_ST_fsm_state218 = 277'd210624583337114373395836055367340864637790190801098222508621955072;
parameter    ap_ST_fsm_state219 = 277'd421249166674228746791672110734681729275580381602196445017243910144;
parameter    ap_ST_fsm_state220 = 277'd842498333348457493583344221469363458551160763204392890034487820288;
parameter    ap_ST_fsm_state221 = 277'd1684996666696914987166688442938726917102321526408785780068975640576;
parameter    ap_ST_fsm_state222 = 277'd3369993333393829974333376885877453834204643052817571560137951281152;
parameter    ap_ST_fsm_state223 = 277'd6739986666787659948666753771754907668409286105635143120275902562304;
parameter    ap_ST_fsm_state224 = 277'd13479973333575319897333507543509815336818572211270286240551805124608;
parameter    ap_ST_fsm_state225 = 277'd26959946667150639794667015087019630673637144422540572481103610249216;
parameter    ap_ST_fsm_state226 = 277'd53919893334301279589334030174039261347274288845081144962207220498432;
parameter    ap_ST_fsm_state227 = 277'd107839786668602559178668060348078522694548577690162289924414440996864;
parameter    ap_ST_fsm_state228 = 277'd215679573337205118357336120696157045389097155380324579848828881993728;
parameter    ap_ST_fsm_state229 = 277'd431359146674410236714672241392314090778194310760649159697657763987456;
parameter    ap_ST_fsm_state230 = 277'd862718293348820473429344482784628181556388621521298319395315527974912;
parameter    ap_ST_fsm_state231 = 277'd1725436586697640946858688965569256363112777243042596638790631055949824;
parameter    ap_ST_fsm_state232 = 277'd3450873173395281893717377931138512726225554486085193277581262111899648;
parameter    ap_ST_fsm_state233 = 277'd6901746346790563787434755862277025452451108972170386555162524223799296;
parameter    ap_ST_fsm_state234 = 277'd13803492693581127574869511724554050904902217944340773110325048447598592;
parameter    ap_ST_fsm_state235 = 277'd27606985387162255149739023449108101809804435888681546220650096895197184;
parameter    ap_ST_fsm_state236 = 277'd55213970774324510299478046898216203619608871777363092441300193790394368;
parameter    ap_ST_fsm_state237 = 277'd110427941548649020598956093796432407239217743554726184882600387580788736;
parameter    ap_ST_fsm_state238 = 277'd220855883097298041197912187592864814478435487109452369765200775161577472;
parameter    ap_ST_fsm_state239 = 277'd441711766194596082395824375185729628956870974218904739530401550323154944;
parameter    ap_ST_fsm_state240 = 277'd883423532389192164791648750371459257913741948437809479060803100646309888;
parameter    ap_ST_fsm_state241 = 277'd1766847064778384329583297500742918515827483896875618958121606201292619776;
parameter    ap_ST_fsm_state242 = 277'd3533694129556768659166595001485837031654967793751237916243212402585239552;
parameter    ap_ST_fsm_state243 = 277'd7067388259113537318333190002971674063309935587502475832486424805170479104;
parameter    ap_ST_fsm_state244 = 277'd14134776518227074636666380005943348126619871175004951664972849610340958208;
parameter    ap_ST_fsm_state245 = 277'd28269553036454149273332760011886696253239742350009903329945699220681916416;
parameter    ap_ST_fsm_state246 = 277'd56539106072908298546665520023773392506479484700019806659891398441363832832;
parameter    ap_ST_fsm_state247 = 277'd113078212145816597093331040047546785012958969400039613319782796882727665664;
parameter    ap_ST_fsm_state248 = 277'd226156424291633194186662080095093570025917938800079226639565593765455331328;
parameter    ap_ST_fsm_state249 = 277'd452312848583266388373324160190187140051835877600158453279131187530910662656;
parameter    ap_ST_fsm_state250 = 277'd904625697166532776746648320380374280103671755200316906558262375061821325312;
parameter    ap_ST_fsm_state251 = 277'd1809251394333065553493296640760748560207343510400633813116524750123642650624;
parameter    ap_ST_fsm_state252 = 277'd3618502788666131106986593281521497120414687020801267626233049500247285301248;
parameter    ap_ST_fsm_state253 = 277'd7237005577332262213973186563042994240829374041602535252466099000494570602496;
parameter    ap_ST_fsm_state254 = 277'd14474011154664524427946373126085988481658748083205070504932198000989141204992;
parameter    ap_ST_fsm_state255 = 277'd28948022309329048855892746252171976963317496166410141009864396001978282409984;
parameter    ap_ST_fsm_state256 = 277'd57896044618658097711785492504343953926634992332820282019728792003956564819968;
parameter    ap_ST_fsm_state257 = 277'd115792089237316195423570985008687907853269984665640564039457584007913129639936;
parameter    ap_ST_fsm_state258 = 277'd231584178474632390847141970017375815706539969331281128078915168015826259279872;
parameter    ap_ST_fsm_state259 = 277'd463168356949264781694283940034751631413079938662562256157830336031652518559744;
parameter    ap_ST_fsm_state260 = 277'd926336713898529563388567880069503262826159877325124512315660672063305037119488;
parameter    ap_ST_fsm_state261 = 277'd1852673427797059126777135760139006525652319754650249024631321344126610074238976;
parameter    ap_ST_fsm_state262 = 277'd3705346855594118253554271520278013051304639509300498049262642688253220148477952;
parameter    ap_ST_fsm_state263 = 277'd7410693711188236507108543040556026102609279018600996098525285376506440296955904;
parameter    ap_ST_fsm_state264 = 277'd14821387422376473014217086081112052205218558037201992197050570753012880593911808;
parameter    ap_ST_fsm_state265 = 277'd29642774844752946028434172162224104410437116074403984394101141506025761187823616;
parameter    ap_ST_fsm_state266 = 277'd59285549689505892056868344324448208820874232148807968788202283012051522375647232;
parameter    ap_ST_fsm_state267 = 277'd118571099379011784113736688648896417641748464297615937576404566024103044751294464;
parameter    ap_ST_fsm_state268 = 277'd237142198758023568227473377297792835283496928595231875152809132048206089502588928;
parameter    ap_ST_fsm_state269 = 277'd474284397516047136454946754595585670566993857190463750305618264096412179005177856;
parameter    ap_ST_fsm_state270 = 277'd948568795032094272909893509191171341133987714380927500611236528192824358010355712;
parameter    ap_ST_fsm_state271 = 277'd1897137590064188545819787018382342682267975428761855001222473056385648716020711424;
parameter    ap_ST_fsm_state272 = 277'd3794275180128377091639574036764685364535950857523710002444946112771297432041422848;
parameter    ap_ST_fsm_state273 = 277'd7588550360256754183279148073529370729071901715047420004889892225542594864082845696;
parameter    ap_ST_fsm_state274 = 277'd15177100720513508366558296147058741458143803430094840009779784451085189728165691392;
parameter    ap_ST_fsm_state275 = 277'd30354201441027016733116592294117482916287606860189680019559568902170379456331382784;
parameter    ap_ST_fsm_state276 = 277'd60708402882054033466233184588234965832575213720379360039119137804340758912662765568;
parameter    ap_ST_fsm_state277 = 277'd121416805764108066932466369176469931665150427440758720078238275608681517825325531136;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] m;
input  [31:0] n;
input  [63:0] float_n;
output  [19:0] data_address0;
output   data_ce0;
output   data_we0;
output  [63:0] data_d0;
input  [63:0] data_q0;
output  [19:0] data_address1;
output   data_ce1;
input  [63:0] data_q1;
output  [19:0] symmat_address0;
output   symmat_ce0;
output   symmat_we0;
output  [63:0] symmat_d0;
output  [9:0] mean_address0;
output   mean_ce0;
output   mean_we0;
output  [63:0] mean_d0;
input  [63:0] mean_q0;
output  [9:0] stddev_address0;
output   stddev_ce0;
output   stddev_we0;
output  [63:0] stddev_d0;
input  [63:0] stddev_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[19:0] data_address0;
reg data_ce0;
reg data_we0;
reg data_ce1;
reg[19:0] symmat_address0;
reg symmat_ce0;
reg symmat_we0;
reg[63:0] symmat_d0;
reg[9:0] mean_address0;
reg mean_ce0;
reg mean_we0;
reg[9:0] stddev_address0;
reg stddev_ce0;
reg stddev_we0;

(* fsm_encoding = "none" *) reg   [276:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_494;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state154;
wire    ap_CS_fsm_state243;
wire   [63:0] grp_fu_468_p2;
reg   [63:0] reg_501;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state168;
wire    ap_CS_fsm_state275;
wire   [63:0] grp_operator_double_div5_fu_449_ap_return;
reg   [63:0] reg_510;
wire    ap_CS_fsm_state22;
wire    grp_operator_double_div5_fu_449_ap_idle;
wire    grp_operator_double_div5_fu_449_ap_ready;
wire    grp_operator_double_div5_fu_449_ap_done;
wire    ap_CS_fsm_state80;
wire   [63:0] grp_operator_double_mul6_fu_428_ap_return;
reg   [63:0] reg_515;
wire    ap_CS_fsm_state24;
wire    grp_operator_double_mul6_fu_428_ap_idle;
wire    grp_operator_double_mul6_fu_428_ap_ready;
wire    grp_operator_double_mul6_fu_428_ap_done;
wire    ap_CS_fsm_state82;
reg   [63:0] reg_521;
wire    ap_CS_fsm_state28;
wire   [63:0] grp_fu_475_p2;
reg   [63:0] reg_526;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state261;
wire   [9:0] j_3_fu_538_p2;
reg   [9:0] j_3_reg_852;
wire    ap_CS_fsm_state2;
wire   [19:0] tmp_cast_fu_549_p1;
reg   [19:0] tmp_cast_reg_857;
wire   [0:0] exitcond8_fu_532_p2;
reg   [9:0] mean_addr_reg_862;
wire   [9:0] i_4_fu_559_p2;
reg   [9:0] i_4_reg_870;
wire    ap_CS_fsm_state3;
wire   [19:0] next_mul_fu_565_p2;
reg   [19:0] next_mul_reg_875;
wire   [0:0] exitcond7_fu_553_p2;
wire   [19:0] tmp_18_fu_571_p2;
reg   [19:0] tmp_18_reg_880;
wire    ap_CS_fsm_state4;
wire   [9:0] j_4_fu_586_p2;
reg   [9:0] j_4_reg_893;
wire    ap_CS_fsm_state26;
reg   [9:0] stddev_addr_reg_898;
wire   [0:0] exitcond6_fu_580_p2;
wire   [19:0] tmp_16_cast_fu_598_p1;
reg   [19:0] tmp_16_cast_reg_908;
wire   [9:0] i_5_fu_608_p2;
reg   [9:0] i_5_reg_916;
wire    ap_CS_fsm_state29;
wire   [19:0] next_mul2_fu_614_p2;
reg   [19:0] next_mul2_reg_921;
wire   [0:0] exitcond5_fu_602_p2;
wire   [19:0] tmp_29_fu_620_p2;
reg   [19:0] tmp_29_reg_926;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state79;
wire   [63:0] grp_fu_489_p2;
reg   [63:0] tmp_23_reg_941;
wire    ap_CS_fsm_state141;
wire   [0:0] notlhs_fu_646_p2;
reg   [0:0] notlhs_reg_948;
wire    ap_CS_fsm_state145;
wire   [0:0] notrhs_fu_652_p2;
reg   [0:0] notrhs_reg_953;
wire   [0:0] grp_fu_484_p2;
reg   [0:0] tmp_26_reg_958;
wire   [19:0] next_mul4_fu_675_p2;
reg   [19:0] next_mul4_reg_963;
wire    ap_CS_fsm_state147;
wire   [9:0] i_6_fu_687_p2;
reg   [9:0] i_6_reg_971;
wire   [9:0] j_5_fu_699_p2;
reg   [9:0] j_5_reg_979;
wire    ap_CS_fsm_state148;
wire   [63:0] tmp_34_fu_705_p1;
reg   [63:0] tmp_34_reg_984;
wire   [0:0] exitcond3_fu_693_p2;
wire   [19:0] tmp_38_fu_714_p2;
reg   [19:0] tmp_38_reg_989;
reg   [63:0] stddev_load_reg_999;
wire    ap_CS_fsm_state150;
reg   [19:0] data_addr_2_reg_1004;
wire    ap_CS_fsm_state151;
wire    ap_CS_fsm_state152;
wire   [63:0] grp_fu_480_p2;
reg   [63:0] tmp_37_reg_1014;
wire    ap_CS_fsm_state227;
wire   [20:0] phi_mul7_cast_fu_724_p1;
reg   [20:0] phi_mul7_cast_reg_1019;
wire    ap_CS_fsm_state230;
wire   [19:0] next_mul8_fu_728_p2;
reg   [19:0] next_mul8_reg_1024;
wire   [31:0] j1_cast2_fu_734_p1;
reg   [31:0] j1_cast2_reg_1029;
wire   [9:0] j1_1_fu_744_p2;
reg   [9:0] j1_1_reg_1037;
wire   [19:0] tmp_24_cast_fu_750_p1;
reg   [19:0] tmp_24_cast_reg_1042;
wire   [0:0] exitcond2_fu_738_p2;
wire   [19:0] tmp_33_fu_754_p2;
reg   [19:0] tmp_33_reg_1047;
wire    ap_CS_fsm_state231;
wire   [20:0] tmp_24_cast9_fu_764_p1;
reg   [20:0] tmp_24_cast9_reg_1057;
wire    ap_CS_fsm_state232;
wire   [31:0] j2_fu_768_p2;
reg   [31:0] j2_reg_1062;
wire    ap_CS_fsm_state233;
wire  signed [20:0] tmp_63_fu_780_p1;
reg  signed [20:0] tmp_63_reg_1070;
wire   [0:0] exitcond1_fu_774_p2;
reg   [19:0] symmat_addr_2_reg_1077;
wire    ap_CS_fsm_state234;
reg   [19:0] symmat_addr_3_reg_1082;
wire    ap_CS_fsm_state237;
wire   [9:0] i_7_fu_807_p2;
reg   [9:0] i_7_reg_1090;
wire    ap_CS_fsm_state239;
wire   [19:0] next_mul6_fu_813_p2;
reg   [19:0] next_mul6_reg_1095;
wire   [0:0] exitcond_fu_801_p2;
wire   [19:0] tmp_44_fu_819_p2;
reg   [19:0] tmp_44_reg_1100;
wire   [20:0] tmp_45_fu_824_p2;
reg   [20:0] tmp_45_reg_1105;
wire    ap_CS_fsm_state240;
reg   [63:0] data_load_4_reg_1120;
wire    grp_operator_double_mul6_fu_428_ap_start;
wire    grp_operator_double_div5_fu_449_ap_start;
reg   [63:0] grp_operator_double_div5_fu_449_in_r;
reg   [9:0] j_reg_235;
wire    ap_CS_fsm_state25;
reg   [63:0] tmp_s_reg_246;
reg   [9:0] i_reg_258;
reg   [19:0] phi_mul_reg_269;
reg   [9:0] j_1_reg_280;
wire    ap_CS_fsm_state146;
reg   [63:0] tmp_19_reg_292;
reg   [9:0] i_1_reg_304;
reg   [19:0] phi_mul1_reg_315;
reg   [9:0] i_2_reg_326;
reg   [19:0] phi_mul3_reg_337;
reg   [9:0] j_2_reg_349;
wire    ap_CS_fsm_state229;
wire   [0:0] exitcond4_fu_681_p2;
reg   [9:0] j1_reg_360;
reg   [19:0] phi_mul7_reg_372;
reg   [31:0] j2_0_in_reg_383;
wire    ap_CS_fsm_state276;
wire   [63:0] ap_phi_mux_storemerge_phi_fu_397_p4;
reg   [63:0] storemerge_reg_392;
reg   [9:0] i_3_reg_406;
reg   [19:0] phi_mul5_reg_417;
reg    grp_operator_double_mul6_fu_428_ap_start_reg;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state81;
reg    grp_operator_double_div5_fu_449_ap_start_reg;
wire   [63:0] tmp_fu_544_p1;
wire   [63:0] tmp_47_cast_fu_576_p1;
wire   [63:0] tmp_15_fu_592_p1;
wire   [63:0] tmp_50_cast_fu_625_p1;
wire   [63:0] tmp_53_cast_fu_720_p1;
wire   [63:0] tmp_52_cast_fu_760_p1;
wire   [63:0] tmp_54_cast_fu_788_p1;
wire  signed [63:0] tmp_56_cast_fu_793_p1;
wire   [63:0] tmp_58_cast_fu_829_p1;
wire   [63:0] tmp_59_cast_fu_833_p1;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state153;
wire    ap_CS_fsm_state228;
wire    ap_CS_fsm_state241;
wire    ap_CS_fsm_state242;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state149;
wire    ap_CS_fsm_state277;
wire    ap_CS_fsm_state238;
reg   [63:0] grp_fu_468_p0;
reg   [63:0] grp_fu_468_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state155;
wire    ap_CS_fsm_state262;
reg   [63:0] grp_fu_475_p0;
reg   [63:0] grp_fu_475_p1;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state244;
wire    ap_CS_fsm_state169;
wire    ap_CS_fsm_state142;
wire    ap_CS_fsm_state83;
wire   [63:0] tmp_27_to_int_fu_629_p1;
wire   [10:0] tmp_24_fu_632_p4;
wire   [51:0] tmp_62_fu_642_p1;
wire   [0:0] tmp_25_fu_658_p2;
wire   [0:0] tmp_27_fu_662_p2;
wire   [19:0] tmp_34_cast_fu_710_p1;
wire   [20:0] tmp_39_fu_784_p2;
wire  signed [20:0] grp_fu_837_p3;
wire   [20:0] phi_mul5_cast_fu_797_p1;
wire   [10:0] grp_fu_837_p0;
wire   [9:0] grp_fu_837_p2;
wire    ap_CS_fsm_state236;
reg   [1:0] grp_fu_468_opcode;
reg   [276:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 277'd1;
#0 grp_operator_double_mul6_fu_428_ap_start_reg = 1'b0;
#0 grp_operator_double_div5_fu_449_ap_start_reg = 1'b0;
end

operator_double_mul6 grp_operator_double_mul6_fu_428(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_operator_double_mul6_fu_428_ap_start),
    .ap_done(grp_operator_double_mul6_fu_428_ap_done),
    .ap_idle(grp_operator_double_mul6_fu_428_ap_idle),
    .ap_ready(grp_operator_double_mul6_fu_428_ap_ready),
    .in_r(reg_510),
    .ap_return(grp_operator_double_mul6_fu_428_ap_return)
);

operator_double_div5 grp_operator_double_div5_fu_449(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_operator_double_div5_fu_449_ap_start),
    .ap_done(grp_operator_double_div5_fu_449_ap_done),
    .ap_idle(grp_operator_double_div5_fu_449_ap_idle),
    .ap_ready(grp_operator_double_div5_fu_449_ap_ready),
    .in_r(grp_operator_double_div5_fu_449_in_r),
    .ap_return(grp_operator_double_div5_fu_449_ap_return)
);

kernel_correlatiomb6 #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_correlatiomb6_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_468_p0),
    .din1(grp_fu_468_p1),
    .opcode(grp_fu_468_opcode),
    .ce(1'b1),
    .dout(grp_fu_468_p2)
);

kernel_correlationcg #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_correlationcg_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_475_p0),
    .din1(grp_fu_475_p1),
    .ce(1'b1),
    .dout(grp_fu_475_p2)
);

kernel_correlatioocq #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_correlatioocq_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_501),
    .din1(reg_526),
    .ce(1'b1),
    .dout(grp_fu_480_p2)
);

kernel_correlatiopcA #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
kernel_correlatiopcA_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_23_reg_941),
    .din1(64'd4591870180174331904),
    .ce(1'b1),
    .opcode(5'd5),
    .dout(grp_fu_484_p2)
);

kernel_correlatioqcK #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_correlatioqcK_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(reg_515),
    .ce(1'b1),
    .dout(grp_fu_489_p2)
);

kernel_correlatiorcU #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 21 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 21 ))
kernel_correlatiorcU_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_837_p0),
    .din1(tmp_63_reg_1070),
    .din2(grp_fu_837_p2),
    .ce(1'b1),
    .dout(grp_fu_837_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_operator_double_div5_fu_449_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond5_fu_602_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29)) | ((exitcond7_fu_553_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_operator_double_div5_fu_449_ap_start_reg <= 1'b1;
        end else if ((grp_operator_double_div5_fu_449_ap_ready == 1'b1)) begin
            grp_operator_double_div5_fu_449_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_operator_double_mul6_fu_428_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state23))) begin
            grp_operator_double_mul6_fu_428_ap_start_reg <= 1'b1;
        end else if ((grp_operator_double_mul6_fu_428_ap_ready == 1'b1)) begin
            grp_operator_double_mul6_fu_428_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        i_1_reg_304 <= i_5_reg_916;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        i_1_reg_304 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_580_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        i_2_reg_326 <= 10'd0;
    end else if (((exitcond3_fu_693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state148))) begin
        i_2_reg_326 <= i_6_reg_971;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state275)) begin
        i_3_reg_406 <= i_7_reg_1090;
    end else if ((1'b1 == ap_CS_fsm_state237)) begin
        i_3_reg_406 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_reg_258 <= i_4_reg_870;
    end else if (((exitcond8_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_258 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_681_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state147))) begin
        j1_reg_360 <= 10'd0;
    end else if (((exitcond1_fu_774_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state233))) begin
        j1_reg_360 <= j1_1_reg_1037;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state276)) begin
        j2_0_in_reg_383 <= j2_reg_1062;
    end else if ((1'b1 == ap_CS_fsm_state232)) begin
        j2_0_in_reg_383 <= j1_cast2_reg_1029;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_532_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_1_reg_280 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        j_1_reg_280 <= j_4_reg_893;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_681_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        j_2_reg_349 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state229)) begin
        j_2_reg_349 <= j_5_reg_979;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        j_reg_235 <= j_3_reg_852;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_235 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        phi_mul1_reg_315 <= next_mul2_reg_921;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        phi_mul1_reg_315 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_580_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        phi_mul3_reg_337 <= 20'd0;
    end else if (((exitcond3_fu_693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state148))) begin
        phi_mul3_reg_337 <= next_mul4_reg_963;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state275)) begin
        phi_mul5_reg_417 <= next_mul6_reg_1095;
    end else if ((1'b1 == ap_CS_fsm_state237)) begin
        phi_mul5_reg_417 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_681_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state147))) begin
        phi_mul7_reg_372 <= 20'd0;
    end else if (((exitcond1_fu_774_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state233))) begin
        phi_mul7_reg_372 <= next_mul8_reg_1024;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        phi_mul_reg_269 <= next_mul_reg_875;
    end else if (((exitcond8_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_269 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state275)) begin
        storemerge_reg_392 <= grp_fu_468_p2;
    end else if ((1'b1 == ap_CS_fsm_state237)) begin
        storemerge_reg_392 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        tmp_19_reg_292 <= grp_fu_468_p2;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        tmp_19_reg_292 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_s_reg_246 <= grp_fu_468_p2;
    end else if (((exitcond8_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_s_reg_246 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        data_addr_2_reg_1004 <= tmp_53_cast_fu_720_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state243)) begin
        data_load_4_reg_1120 <= data_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_4_reg_870 <= i_4_fu_559_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i_5_reg_916 <= i_5_fu_608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state147)) begin
        i_6_reg_971 <= i_6_fu_687_p2;
        next_mul4_reg_963 <= next_mul4_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state239)) begin
        i_7_reg_1090 <= i_7_fu_807_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        j1_1_reg_1037 <= j1_1_fu_744_p2;
        j1_cast2_reg_1029[9 : 0] <= j1_cast2_fu_734_p1[9 : 0];
        next_mul8_reg_1024 <= next_mul8_fu_728_p2;
        phi_mul7_cast_reg_1019[19 : 0] <= phi_mul7_cast_fu_724_p1[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state233)) begin
        j2_reg_1062 <= j2_fu_768_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        j_3_reg_852 <= j_3_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        j_4_reg_893 <= j_4_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        j_5_reg_979 <= j_5_fu_699_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        mean_addr_reg_862 <= tmp_fu_544_p1;
        tmp_cast_reg_857[9 : 0] <= tmp_cast_fu_549_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_602_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        next_mul2_reg_921 <= next_mul2_fu_614_p2;
        tmp_29_reg_926 <= tmp_29_fu_620_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_801_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state239))) begin
        next_mul6_reg_1095 <= next_mul6_fu_813_p2;
        tmp_44_reg_1100 <= tmp_44_fu_819_p2;
        tmp_45_reg_1105 <= tmp_45_fu_824_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_553_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        next_mul_reg_875 <= next_mul_fu_565_p2;
        tmp_18_reg_880 <= tmp_18_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        notlhs_reg_948 <= notlhs_fu_646_p2;
        notrhs_reg_953 <= notrhs_fu_652_p2;
        tmp_26_reg_958 <= grp_fu_484_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state243) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_494 <= data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state275) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_501 <= grp_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_operator_double_div5_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state80)) | ((grp_operator_double_div5_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22)))) begin
        reg_510 <= grp_operator_double_div5_fu_449_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_operator_double_mul6_fu_428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state82)) | ((grp_operator_double_mul6_fu_428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24)))) begin
        reg_515 <= grp_operator_double_mul6_fu_428_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state154))) begin
        reg_521 <= mean_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state261) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state168))) begin
        reg_526 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_580_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        stddev_addr_reg_898 <= tmp_15_fu_592_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        stddev_load_reg_999 <= stddev_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state234)) begin
        symmat_addr_2_reg_1077 <= tmp_54_cast_fu_788_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state237)) begin
        symmat_addr_3_reg_1082 <= tmp_56_cast_fu_793_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        tmp_16_cast_reg_908[9 : 0] <= tmp_16_cast_fu_598_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        tmp_23_reg_941 <= grp_fu_489_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state232)) begin
        tmp_24_cast9_reg_1057[9 : 0] <= tmp_24_cast9_fu_764_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_738_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state230))) begin
        tmp_24_cast_reg_1042[9 : 0] <= tmp_24_cast_fu_750_p1[9 : 0];
        tmp_33_reg_1047 <= tmp_33_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state148))) begin
        tmp_34_reg_984[9 : 0] <= tmp_34_fu_705_p1[9 : 0];
        tmp_38_reg_989 <= tmp_38_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state227)) begin
        tmp_37_reg_1014 <= grp_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_774_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state233))) begin
        tmp_63_reg_1070 <= tmp_63_fu_780_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state277)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state277)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state240)) begin
        data_address0 = tmp_58_cast_fu_829_p1;
    end else if ((1'b1 == ap_CS_fsm_state228)) begin
        data_address0 = data_addr_2_reg_1004;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        data_address0 = tmp_53_cast_fu_720_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        data_address0 = tmp_50_cast_fu_625_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        data_address0 = tmp_47_cast_fu_576_p1;
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state242) | (1'b1 == ap_CS_fsm_state241) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state240) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state243) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state7))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state242) | (1'b1 == ap_CS_fsm_state241) | (1'b1 == ap_CS_fsm_state240) | (1'b1 == ap_CS_fsm_state243))) begin
        data_ce1 = 1'b1;
    end else begin
        data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state228)) begin
        data_we0 = 1'b1;
    end else begin
        data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_468_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state262) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_468_opcode = 2'd0;
    end else begin
        grp_fu_468_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state262)) begin
        grp_fu_468_p0 = storemerge_reg_392;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_468_p0 = tmp_19_reg_292;
    end else if (((1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_468_p0 = reg_494;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_468_p0 = tmp_s_reg_246;
    end else begin
        grp_fu_468_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state262) | (1'b1 == ap_CS_fsm_state66))) begin
        grp_fu_468_p1 = reg_526;
    end else if (((1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_468_p1 = reg_521;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_468_p1 = reg_494;
    end else begin
        grp_fu_468_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state244)) begin
        grp_fu_475_p0 = reg_494;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        grp_fu_475_p0 = stddev_load_reg_999;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_475_p0 = reg_501;
    end else begin
        grp_fu_475_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state244)) begin
        grp_fu_475_p1 = data_load_4_reg_1120;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        grp_fu_475_p1 = 64'd4607612265384412274;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_475_p1 = reg_501;
    end else begin
        grp_fu_475_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_operator_double_div5_fu_449_in_r = tmp_19_reg_292;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_operator_double_div5_fu_449_in_r = tmp_s_reg_246;
    end else begin
        grp_operator_double_div5_fu_449_in_r = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        mean_address0 = tmp_34_reg_984;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        mean_address0 = tmp_15_fu_592_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        mean_address0 = mean_addr_reg_862;
    end else begin
        mean_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state154))) begin
        mean_ce0 = 1'b1;
    end else begin
        mean_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        mean_we0 = 1'b1;
    end else begin
        mean_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        stddev_address0 = tmp_34_fu_705_p1;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        stddev_address0 = stddev_addr_reg_898;
    end else begin
        stddev_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state148))) begin
        stddev_ce0 = 1'b1;
    end else begin
        stddev_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        stddev_we0 = 1'b1;
    end else begin
        stddev_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state239)) begin
        symmat_address0 = symmat_addr_3_reg_1082;
    end else if ((1'b1 == ap_CS_fsm_state238)) begin
        symmat_address0 = symmat_addr_2_reg_1077;
    end else if ((1'b1 == ap_CS_fsm_state231)) begin
        symmat_address0 = tmp_52_cast_fu_760_p1;
    end else if ((1'b1 == ap_CS_fsm_state230)) begin
        symmat_address0 = 64'd999999;
    end else begin
        symmat_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state277) | (1'b1 == ap_CS_fsm_state276) | (1'b1 == ap_CS_fsm_state239) | (1'b1 == ap_CS_fsm_state232) | (1'b1 == ap_CS_fsm_state231) | (1'b1 == ap_CS_fsm_state230) | (1'b1 == ap_CS_fsm_state238))) begin
        symmat_ce0 = 1'b1;
    end else begin
        symmat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state239)) begin
        symmat_d0 = storemerge_reg_392;
    end else if ((1'b1 == ap_CS_fsm_state238)) begin
        symmat_d0 = ap_phi_mux_storemerge_phi_fu_397_p4;
    end else if (((1'b1 == ap_CS_fsm_state231) | (1'b1 == ap_CS_fsm_state230))) begin
        symmat_d0 = 64'd4607182418800017408;
    end else begin
        symmat_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state231) | (1'b1 == ap_CS_fsm_state238) | ((exitcond_fu_801_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state239)) | ((exitcond2_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state230)))) begin
        symmat_we0 = 1'b1;
    end else begin
        symmat_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond8_fu_532_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond7_fu_553_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_operator_double_div5_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((grp_operator_double_mul6_fu_428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state26 : begin
            if (((exitcond6_fu_580_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state147;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((exitcond5_fu_602_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state80 : begin
            if (((grp_operator_double_div5_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((grp_operator_double_mul6_fu_428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state147 : begin
            if (((exitcond4_fu_681_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state147))) begin
                ap_NS_fsm = ap_ST_fsm_state230;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state148;
            end
        end
        ap_ST_fsm_state148 : begin
            if (((exitcond3_fu_693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state148))) begin
                ap_NS_fsm = ap_ST_fsm_state147;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state149;
            end
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state207;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            ap_NS_fsm = ap_ST_fsm_state210;
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state215;
        end
        ap_ST_fsm_state215 : begin
            ap_NS_fsm = ap_ST_fsm_state216;
        end
        ap_ST_fsm_state216 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state217 : begin
            ap_NS_fsm = ap_ST_fsm_state218;
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state223 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state224 : begin
            ap_NS_fsm = ap_ST_fsm_state225;
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state227 : begin
            ap_NS_fsm = ap_ST_fsm_state228;
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state230 : begin
            if (((exitcond2_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state230))) begin
                ap_NS_fsm = ap_ST_fsm_state277;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state231;
            end
        end
        ap_ST_fsm_state231 : begin
            ap_NS_fsm = ap_ST_fsm_state232;
        end
        ap_ST_fsm_state232 : begin
            ap_NS_fsm = ap_ST_fsm_state233;
        end
        ap_ST_fsm_state233 : begin
            if (((exitcond1_fu_774_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state233))) begin
                ap_NS_fsm = ap_ST_fsm_state230;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state234;
            end
        end
        ap_ST_fsm_state234 : begin
            ap_NS_fsm = ap_ST_fsm_state235;
        end
        ap_ST_fsm_state235 : begin
            ap_NS_fsm = ap_ST_fsm_state236;
        end
        ap_ST_fsm_state236 : begin
            ap_NS_fsm = ap_ST_fsm_state237;
        end
        ap_ST_fsm_state237 : begin
            ap_NS_fsm = ap_ST_fsm_state238;
        end
        ap_ST_fsm_state238 : begin
            ap_NS_fsm = ap_ST_fsm_state239;
        end
        ap_ST_fsm_state239 : begin
            if (((exitcond_fu_801_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state239))) begin
                ap_NS_fsm = ap_ST_fsm_state276;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state240;
            end
        end
        ap_ST_fsm_state240 : begin
            ap_NS_fsm = ap_ST_fsm_state241;
        end
        ap_ST_fsm_state241 : begin
            ap_NS_fsm = ap_ST_fsm_state242;
        end
        ap_ST_fsm_state242 : begin
            ap_NS_fsm = ap_ST_fsm_state243;
        end
        ap_ST_fsm_state243 : begin
            ap_NS_fsm = ap_ST_fsm_state244;
        end
        ap_ST_fsm_state244 : begin
            ap_NS_fsm = ap_ST_fsm_state245;
        end
        ap_ST_fsm_state245 : begin
            ap_NS_fsm = ap_ST_fsm_state246;
        end
        ap_ST_fsm_state246 : begin
            ap_NS_fsm = ap_ST_fsm_state247;
        end
        ap_ST_fsm_state247 : begin
            ap_NS_fsm = ap_ST_fsm_state248;
        end
        ap_ST_fsm_state248 : begin
            ap_NS_fsm = ap_ST_fsm_state249;
        end
        ap_ST_fsm_state249 : begin
            ap_NS_fsm = ap_ST_fsm_state250;
        end
        ap_ST_fsm_state250 : begin
            ap_NS_fsm = ap_ST_fsm_state251;
        end
        ap_ST_fsm_state251 : begin
            ap_NS_fsm = ap_ST_fsm_state252;
        end
        ap_ST_fsm_state252 : begin
            ap_NS_fsm = ap_ST_fsm_state253;
        end
        ap_ST_fsm_state253 : begin
            ap_NS_fsm = ap_ST_fsm_state254;
        end
        ap_ST_fsm_state254 : begin
            ap_NS_fsm = ap_ST_fsm_state255;
        end
        ap_ST_fsm_state255 : begin
            ap_NS_fsm = ap_ST_fsm_state256;
        end
        ap_ST_fsm_state256 : begin
            ap_NS_fsm = ap_ST_fsm_state257;
        end
        ap_ST_fsm_state257 : begin
            ap_NS_fsm = ap_ST_fsm_state258;
        end
        ap_ST_fsm_state258 : begin
            ap_NS_fsm = ap_ST_fsm_state259;
        end
        ap_ST_fsm_state259 : begin
            ap_NS_fsm = ap_ST_fsm_state260;
        end
        ap_ST_fsm_state260 : begin
            ap_NS_fsm = ap_ST_fsm_state261;
        end
        ap_ST_fsm_state261 : begin
            ap_NS_fsm = ap_ST_fsm_state262;
        end
        ap_ST_fsm_state262 : begin
            ap_NS_fsm = ap_ST_fsm_state263;
        end
        ap_ST_fsm_state263 : begin
            ap_NS_fsm = ap_ST_fsm_state264;
        end
        ap_ST_fsm_state264 : begin
            ap_NS_fsm = ap_ST_fsm_state265;
        end
        ap_ST_fsm_state265 : begin
            ap_NS_fsm = ap_ST_fsm_state266;
        end
        ap_ST_fsm_state266 : begin
            ap_NS_fsm = ap_ST_fsm_state267;
        end
        ap_ST_fsm_state267 : begin
            ap_NS_fsm = ap_ST_fsm_state268;
        end
        ap_ST_fsm_state268 : begin
            ap_NS_fsm = ap_ST_fsm_state269;
        end
        ap_ST_fsm_state269 : begin
            ap_NS_fsm = ap_ST_fsm_state270;
        end
        ap_ST_fsm_state270 : begin
            ap_NS_fsm = ap_ST_fsm_state271;
        end
        ap_ST_fsm_state271 : begin
            ap_NS_fsm = ap_ST_fsm_state272;
        end
        ap_ST_fsm_state272 : begin
            ap_NS_fsm = ap_ST_fsm_state273;
        end
        ap_ST_fsm_state273 : begin
            ap_NS_fsm = ap_ST_fsm_state274;
        end
        ap_ST_fsm_state274 : begin
            ap_NS_fsm = ap_ST_fsm_state275;
        end
        ap_ST_fsm_state275 : begin
            ap_NS_fsm = ap_ST_fsm_state238;
        end
        ap_ST_fsm_state276 : begin
            ap_NS_fsm = ap_ST_fsm_state233;
        end
        ap_ST_fsm_state277 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd167];

assign ap_CS_fsm_state169 = ap_CS_fsm[32'd168];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state227 = ap_CS_fsm[32'd226];

assign ap_CS_fsm_state228 = ap_CS_fsm[32'd227];

assign ap_CS_fsm_state229 = ap_CS_fsm[32'd228];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state230 = ap_CS_fsm[32'd229];

assign ap_CS_fsm_state231 = ap_CS_fsm[32'd230];

assign ap_CS_fsm_state232 = ap_CS_fsm[32'd231];

assign ap_CS_fsm_state233 = ap_CS_fsm[32'd232];

assign ap_CS_fsm_state234 = ap_CS_fsm[32'd233];

assign ap_CS_fsm_state236 = ap_CS_fsm[32'd235];

assign ap_CS_fsm_state237 = ap_CS_fsm[32'd236];

assign ap_CS_fsm_state238 = ap_CS_fsm[32'd237];

assign ap_CS_fsm_state239 = ap_CS_fsm[32'd238];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state240 = ap_CS_fsm[32'd239];

assign ap_CS_fsm_state241 = ap_CS_fsm[32'd240];

assign ap_CS_fsm_state242 = ap_CS_fsm[32'd241];

assign ap_CS_fsm_state243 = ap_CS_fsm[32'd242];

assign ap_CS_fsm_state244 = ap_CS_fsm[32'd243];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state261 = ap_CS_fsm[32'd260];

assign ap_CS_fsm_state262 = ap_CS_fsm[32'd261];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state275 = ap_CS_fsm[32'd274];

assign ap_CS_fsm_state276 = ap_CS_fsm[32'd275];

assign ap_CS_fsm_state277 = ap_CS_fsm[32'd276];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_phi_mux_storemerge_phi_fu_397_p4 = storemerge_reg_392;

assign data_address1 = tmp_59_cast_fu_833_p1;

assign data_d0 = tmp_37_reg_1014;

assign exitcond1_fu_774_p2 = ((j2_0_in_reg_383 == 32'd999) ? 1'b1 : 1'b0);

assign exitcond2_fu_738_p2 = ((j1_reg_360 == 10'd999) ? 1'b1 : 1'b0);

assign exitcond3_fu_693_p2 = ((j_2_reg_349 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond4_fu_681_p2 = ((i_2_reg_326 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond5_fu_602_p2 = ((i_1_reg_304 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond6_fu_580_p2 = ((j_1_reg_280 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond7_fu_553_p2 = ((i_reg_258 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond8_fu_532_p2 = ((j_reg_235 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond_fu_801_p2 = ((i_3_reg_406 == 10'd1000) ? 1'b1 : 1'b0);

assign grp_fu_837_p0 = 21'd1000;

assign grp_fu_837_p2 = tmp_24_cast9_reg_1057;

assign grp_operator_double_div5_fu_449_ap_start = grp_operator_double_div5_fu_449_ap_start_reg;

assign grp_operator_double_mul6_fu_428_ap_start = grp_operator_double_mul6_fu_428_ap_start_reg;

assign i_4_fu_559_p2 = (i_reg_258 + 10'd1);

assign i_5_fu_608_p2 = (i_1_reg_304 + 10'd1);

assign i_6_fu_687_p2 = (i_2_reg_326 + 10'd1);

assign i_7_fu_807_p2 = (i_3_reg_406 + 10'd1);

assign j1_1_fu_744_p2 = (j1_reg_360 + 10'd1);

assign j1_cast2_fu_734_p1 = j1_reg_360;

assign j2_fu_768_p2 = (j2_0_in_reg_383 + 32'd1);

assign j_3_fu_538_p2 = (j_reg_235 + 10'd1);

assign j_4_fu_586_p2 = (j_1_reg_280 + 10'd1);

assign j_5_fu_699_p2 = (j_2_reg_349 + 10'd1);

assign mean_d0 = reg_515;

assign next_mul2_fu_614_p2 = (phi_mul1_reg_315 + 20'd1000);

assign next_mul4_fu_675_p2 = (phi_mul3_reg_337 + 20'd1000);

assign next_mul6_fu_813_p2 = (phi_mul5_reg_417 + 20'd1000);

assign next_mul8_fu_728_p2 = (phi_mul7_reg_372 + 20'd1000);

assign next_mul_fu_565_p2 = (phi_mul_reg_269 + 20'd1000);

assign notlhs_fu_646_p2 = ((tmp_24_fu_632_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notrhs_fu_652_p2 = ((tmp_62_fu_642_p1 == 52'd0) ? 1'b1 : 1'b0);

assign phi_mul5_cast_fu_797_p1 = phi_mul5_reg_417;

assign phi_mul7_cast_fu_724_p1 = phi_mul7_reg_372;

assign stddev_d0 = ((tmp_27_fu_662_p2[0:0] === 1'b1) ? 64'd4607182418800017408 : tmp_23_reg_941);

assign tmp_15_fu_592_p1 = j_1_reg_280;

assign tmp_16_cast_fu_598_p1 = j_1_reg_280;

assign tmp_18_fu_571_p2 = (tmp_cast_reg_857 + phi_mul_reg_269);

assign tmp_24_cast9_fu_764_p1 = j1_reg_360;

assign tmp_24_cast_fu_750_p1 = j1_reg_360;

assign tmp_24_fu_632_p4 = {{tmp_27_to_int_fu_629_p1[62:52]}};

assign tmp_25_fu_658_p2 = (notrhs_reg_953 | notlhs_reg_948);

assign tmp_27_fu_662_p2 = (tmp_26_reg_958 & tmp_25_fu_658_p2);

assign tmp_27_to_int_fu_629_p1 = tmp_23_reg_941;

assign tmp_29_fu_620_p2 = (tmp_16_cast_reg_908 + phi_mul1_reg_315);

assign tmp_33_fu_754_p2 = (phi_mul7_reg_372 + tmp_24_cast_fu_750_p1);

assign tmp_34_cast_fu_710_p1 = j_2_reg_349;

assign tmp_34_fu_705_p1 = j_2_reg_349;

assign tmp_38_fu_714_p2 = (phi_mul3_reg_337 + tmp_34_cast_fu_710_p1);

assign tmp_39_fu_784_p2 = ($signed(phi_mul7_cast_reg_1019) + $signed(tmp_63_reg_1070));

assign tmp_44_fu_819_p2 = (tmp_24_cast_reg_1042 + phi_mul5_reg_417);

assign tmp_45_fu_824_p2 = ($signed(tmp_63_reg_1070) + $signed(phi_mul5_cast_fu_797_p1));

assign tmp_47_cast_fu_576_p1 = tmp_18_reg_880;

assign tmp_50_cast_fu_625_p1 = tmp_29_reg_926;

assign tmp_52_cast_fu_760_p1 = tmp_33_reg_1047;

assign tmp_53_cast_fu_720_p1 = tmp_38_reg_989;

assign tmp_54_cast_fu_788_p1 = tmp_39_fu_784_p2;

assign tmp_56_cast_fu_793_p1 = grp_fu_837_p3;

assign tmp_58_cast_fu_829_p1 = tmp_44_reg_1100;

assign tmp_59_cast_fu_833_p1 = tmp_45_reg_1105;

assign tmp_62_fu_642_p1 = tmp_27_to_int_fu_629_p1[51:0];

assign tmp_63_fu_780_p1 = j2_fu_768_p2[20:0];

assign tmp_cast_fu_549_p1 = j_reg_235;

assign tmp_fu_544_p1 = j_reg_235;

always @ (posedge ap_clk) begin
    tmp_cast_reg_857[19:10] <= 10'b0000000000;
    tmp_16_cast_reg_908[19:10] <= 10'b0000000000;
    tmp_34_reg_984[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    phi_mul7_cast_reg_1019[20] <= 1'b0;
    j1_cast2_reg_1029[31:10] <= 22'b0000000000000000000000;
    tmp_24_cast_reg_1042[19:10] <= 10'b0000000000;
    tmp_24_cast9_reg_1057[20:10] <= 11'b00000000000;
end

endmodule //kernel_correlation_optimized
