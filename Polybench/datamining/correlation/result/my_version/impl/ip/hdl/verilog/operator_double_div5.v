// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module operator_double_div5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_state4 = 28'd8;
parameter    ap_ST_fsm_state5 = 28'd16;
parameter    ap_ST_fsm_state6 = 28'd32;
parameter    ap_ST_fsm_state7 = 28'd64;
parameter    ap_ST_fsm_state8 = 28'd128;
parameter    ap_ST_fsm_state9 = 28'd256;
parameter    ap_ST_fsm_state10 = 28'd512;
parameter    ap_ST_fsm_state11 = 28'd1024;
parameter    ap_ST_fsm_state12 = 28'd2048;
parameter    ap_ST_fsm_state13 = 28'd4096;
parameter    ap_ST_fsm_state14 = 28'd8192;
parameter    ap_ST_fsm_state15 = 28'd16384;
parameter    ap_ST_fsm_state16 = 28'd32768;
parameter    ap_ST_fsm_state17 = 28'd65536;
parameter    ap_ST_fsm_state18 = 28'd131072;
parameter    ap_ST_fsm_state19 = 28'd262144;
parameter    ap_ST_fsm_state20 = 28'd524288;
parameter    ap_ST_fsm_state21 = 28'd1048576;
parameter    ap_ST_fsm_state22 = 28'd2097152;
parameter    ap_ST_fsm_state23 = 28'd4194304;
parameter    ap_ST_fsm_state24 = 28'd8388608;
parameter    ap_ST_fsm_state25 = 28'd16777216;
parameter    ap_ST_fsm_state26 = 28'd33554432;
parameter    ap_ST_fsm_state27 = 28'd67108864;
parameter    ap_ST_fsm_state28 = 28'd134217728;
parameter    ap_const_lv56_0 = 56'd0;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] in_r;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] ap_return;

(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] r0_address0;
reg    r0_ce0;
wire   [0:0] r0_q0;
reg   [5:0] r1_address0;
reg    r1_ce0;
wire   [0:0] r1_q0;
reg   [5:0] r2_address0;
reg    r2_ce0;
wire   [0:0] r2_q0;
reg   [5:0] q0_address0;
reg    q0_ce0;
wire   [0:0] q0_q0;
reg   [5:0] q1_address0;
reg    q1_ce0;
wire   [0:0] q1_q0;
wire   [5:0] q2_address0;
reg    q2_ce0;
wire   [0:0] q2_q0;
reg   [0:0] p_Repl2_6_reg_798;
reg   [10:0] new_exp_V_2_reg_803;
wire   [51:0] new_mant_V_3_fu_281_p1;
reg   [51:0] new_mant_V_3_reg_814;
wire   [10:0] shift_V_cast_cast_fu_301_p3;
reg   [10:0] shift_V_cast_cast_reg_821;
wire   [0:0] icmp4_fu_319_p2;
reg   [0:0] icmp4_reg_829;
wire   [0:0] tmp_11_fu_325_p2;
reg   [0:0] tmp_11_reg_835;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_12_fu_330_p2;
reg   [0:0] tmp_12_reg_841;
wire   [10:0] shift_V_3_fu_369_p3;
reg   [10:0] shift_V_3_reg_846;
wire   [10:0] shift_V_4_fu_387_p3;
reg   [10:0] shift_V_4_reg_851;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [51:0] grp_fu_402_p2;
reg   [51:0] r_V_21_reg_872;
wire    ap_CS_fsm_state10;
wire   [55:0] grp_fu_407_p2;
reg   [55:0] r_V_22_reg_877;
wire   [55:0] xf_V_7_fu_416_p3;
reg   [55:0] xf_V_7_reg_882;
wire    ap_CS_fsm_state11;
wire   [55:0] xf_V_8_fu_437_p2;
reg   [55:0] xf_V_8_reg_888;
wire    ap_CS_fsm_state12;
reg   [1:0] p_Result_i_i_reg_894;
wire    ap_CS_fsm_state13;
reg   [0:0] r0_load_reg_924;
wire    ap_CS_fsm_state14;
reg   [0:0] r1_load_reg_929;
reg   [0:0] r2_load_reg_934;
reg   [0:0] q0_load_reg_939;
reg   [0:0] q1_load_reg_944;
wire   [0:0] tmp_s_fu_473_p2;
reg   [0:0] tmp_s_reg_949;
wire    ap_CS_fsm_state15;
wire   [10:0] new_exp_V_fu_477_p2;
reg   [10:0] new_exp_V_reg_954;
wire   [2:0] p_Result_5_fu_481_p4;
wire   [55:0] p_Result_6_fu_494_p5;
wire   [7:0] Lo_assign_fu_534_p2;
reg   [7:0] Lo_assign_reg_972;
wire    ap_CS_fsm_state16;
wire   [0:0] tmp_29_fu_510_p3;
wire   [5:0] tmp_32_fu_540_p1;
reg   [5:0] tmp_32_reg_978;
wire   [5:0] tmp_34_fu_544_p1;
reg   [5:0] tmp_34_reg_983;
wire   [5:0] tmp_43_fu_548_p1;
reg   [5:0] tmp_43_reg_989;
wire   [5:0] i_fu_552_p2;
reg   [5:0] i_reg_997;
wire   [55:0] tmp_37_fu_626_p3;
reg   [55:0] tmp_37_reg_1002;
wire    ap_CS_fsm_state17;
wire   [5:0] tmp_38_fu_633_p3;
reg   [5:0] tmp_38_reg_1007;
wire   [0:0] tmp_42_fu_640_p2;
reg   [0:0] tmp_42_reg_1012;
wire    ap_CS_fsm_state18;
wire   [2:0] d_chunk_V_1_fu_653_p1;
reg   [2:0] d_chunk_V_1_reg_1025;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire   [5:0] tmp_44_fu_674_p2;
reg   [5:0] tmp_44_reg_1060;
wire   [2:0] p_Result_8_fu_679_p4;
reg   [2:0] p_Result_8_reg_1066;
wire    ap_CS_fsm_state26;
reg   [0:0] q0_load_1_reg_1071;
reg   [0:0] q1_load_1_reg_1076;
reg   [0:0] q2_load_reg_1081;
wire   [5:0] tmp_45_fu_689_p2;
reg   [5:0] tmp_45_reg_1086;
wire   [5:0] tmp_49_fu_699_p2;
reg   [5:0] tmp_49_reg_1091;
wire   [55:0] tmp_53_fu_737_p2;
reg   [55:0] tmp_53_reg_1096;
wire    ap_CS_fsm_state27;
wire   [55:0] p_demorgan_fu_755_p2;
reg   [55:0] p_demorgan_reg_1102;
wire   [55:0] p_Result_10_fu_792_p2;
wire    ap_CS_fsm_state28;
reg   [2:0] p_Repl2_4_reg_228;
reg   [55:0] p_Val2_5_reg_238;
reg  signed [5:0] i_i_i_reg_248;
wire   [63:0] tmp_i_i_i_fu_464_p1;
wire   [63:0] tmp_i13_i_i_fu_664_p1;
wire   [63:0] p_Val2_s_fu_259_p1;
wire   [1:0] tmp_fu_285_p4;
wire   [0:0] icmp_fu_295_p2;
wire   [9:0] tmp_27_fu_309_p4;
wire   [0:0] sel_tmp2_demorgan_fu_344_p2;
wire   [0:0] sel_tmp2_fu_350_p2;
wire   [0:0] sel_tmp3_fu_356_p2;
wire   [10:0] shift_V_fu_334_p2;
wire   [10:0] shift_V_1_fu_339_p2;
wire   [10:0] shift_V_2_fu_361_p3;
wire   [0:0] sel_tmp6_fu_377_p2;
wire   [0:0] sel_tmp7_fu_382_p2;
wire   [51:0] grp_fu_402_p1;
wire   [55:0] grp_fu_407_p0;
wire   [55:0] grp_fu_407_p1;
wire   [55:0] r_V_24_cast_fu_413_p1;
reg   [55:0] p_Result_s_fu_422_p4;
wire   [55:0] xf_V_5_fu_431_p3;
wire   [2:0] d_chunk_V_fu_453_p1;
wire   [5:0] p_Result_4_fu_456_p3;
wire   [1:0] p_Result_9_i_i_fu_488_p3;
wire   [4:0] tmp_31_fu_518_p1;
wire   [6:0] p_shl_i_i_fu_522_p3;
wire   [7:0] p_shl_i_i_cast_fu_530_p1;
wire  signed [7:0] i_i_i_cast_fu_506_p1;
wire   [0:0] tmp_14_fu_562_p2;
wire   [0:0] tmp_10_fu_575_p2;
wire   [10:0] p_s_fu_567_p3;
wire   [51:0] new_mant_V_fu_558_p1;
wire   [10:0] p_Repl2_5_fu_580_p3;
wire   [51:0] p_Repl2_3_fu_587_p3;
wire   [63:0] p_Result_11_fu_594_p4;
wire   [0:0] tmp_33_fu_607_p2;
reg   [55:0] tmp_35_fu_612_p4;
wire   [5:0] tmp_36_fu_621_p2;
wire   [55:0] grp_fu_648_p1;
wire   [55:0] grp_fu_648_p2;
wire   [5:0] p_Result_7_fu_657_p3;
wire   [5:0] tmp_46_fu_694_p3;
wire   [2:0] p_Result_9_fu_705_p4;
wire   [5:0] tmp_48_fu_721_p3;
wire   [5:0] tmp_47_fu_716_p3;
wire   [55:0] loc_V_fu_712_p1;
wire   [55:0] tmp_50_fu_726_p1;
wire   [55:0] tmp_51_fu_730_p1;
wire   [55:0] tmp_52_fu_734_p1;
wire   [55:0] tmp_56_fu_743_p2;
wire   [55:0] tmp_57_fu_749_p2;
reg   [55:0] tmp_54_fu_761_p4;
wire   [55:0] tmp_58_fu_776_p2;
wire   [55:0] tmp_55_fu_770_p3;
wire   [55:0] tmp_59_fu_781_p2;
wire   [55:0] tmp_60_fu_787_p2;
wire   [63:0] out_fu_603_p1;
reg   [63:0] ap_return_preg;
reg   [27:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
#0 ap_return_preg = 64'd0;
end

operator_double_dbkb #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
r0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(r0_address0),
    .ce0(r0_ce0),
    .q0(r0_q0)
);

operator_double_dcud #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
r1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(r1_address0),
    .ce0(r1_ce0),
    .q0(r1_q0)
);

operator_double_ddEe #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
r2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(r2_address0),
    .ce0(r2_ce0),
    .q0(r2_q0)
);

operator_double_deOg #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
q0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q0_address0),
    .ce0(q0_ce0),
    .q0(q0_q0)
);

operator_double_dfYi #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
q1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q1_address0),
    .ce0(q1_ce0),
    .q0(q1_q0)
);

operator_double_dg8j #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
q2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q2_address0),
    .ce0(q2_ce0),
    .q0(q2_q0)
);

kernel_correlatiohbi #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 52 ))
kernel_correlatiohbi_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(new_mant_V_3_reg_814),
    .din1(grp_fu_402_p1),
    .ce(1'b1),
    .dout(grp_fu_402_p2)
);

kernel_correlatioibs #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 56 ))
kernel_correlatioibs_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_407_p0),
    .din1(grp_fu_407_p1),
    .ce(1'b1),
    .dout(grp_fu_407_p2)
);

kernel_correlatiojbC #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 56 ))
kernel_correlatiojbC_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_37_reg_1002),
    .din1(grp_fu_648_p1),
    .ce(1'b1),
    .dout(grp_fu_648_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state16) & (tmp_29_fu_510_p3 == 1'd1))) begin
            ap_return_preg <= out_fu_603_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        i_i_i_reg_248 <= i_reg_997;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        i_i_i_reg_248 <= 6'd17;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        p_Repl2_4_reg_228 <= p_Result_8_reg_1066;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        p_Repl2_4_reg_228 <= p_Result_5_fu_481_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        p_Val2_5_reg_238 <= p_Result_10_fu_792_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        p_Val2_5_reg_238 <= p_Result_6_fu_494_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (tmp_29_fu_510_p3 == 1'd0))) begin
        Lo_assign_reg_972 <= Lo_assign_fu_534_p2;
        i_reg_997 <= i_fu_552_p2;
        tmp_32_reg_978 <= tmp_32_fu_540_p1;
        tmp_34_reg_983 <= tmp_34_fu_544_p1;
        tmp_43_reg_989 <= tmp_43_fu_548_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        d_chunk_V_1_reg_1025 <= d_chunk_V_1_fu_653_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp4_reg_829 <= icmp4_fu_319_p2;
        new_exp_V_2_reg_803 <= {{p_Val2_s_fu_259_p1[62:52]}};
        new_mant_V_3_reg_814 <= new_mant_V_3_fu_281_p1;
        p_Repl2_6_reg_798 <= p_Val2_s_fu_259_p1[32'd63];
        shift_V_cast_cast_reg_821[0] <= shift_V_cast_cast_fu_301_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        new_exp_V_reg_954 <= new_exp_V_fu_477_p2;
        tmp_s_reg_949 <= tmp_s_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        p_Result_8_reg_1066 <= p_Result_8_fu_679_p4;
        q0_load_1_reg_1071 <= q0_q0;
        q1_load_1_reg_1076 <= q1_q0;
        q2_load_reg_1081 <= q2_q0;
        tmp_49_reg_1091 <= tmp_49_fu_699_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_Result_i_i_reg_894 <= {{xf_V_8_fu_437_p2[55:54]}};
        xf_V_8_reg_888 <= xf_V_8_fu_437_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        p_demorgan_reg_1102 <= p_demorgan_fu_755_p2;
        tmp_53_reg_1096 <= tmp_53_fu_737_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        q0_load_reg_939 <= q0_q0;
        q1_load_reg_944 <= q1_q0;
        r0_load_reg_924 <= r0_q0;
        r1_load_reg_929 <= r1_q0;
        r2_load_reg_934 <= r2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp4_reg_829 == 1'd1))) begin
        r_V_21_reg_872 <= grp_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp4_reg_829 == 1'd0))) begin
        r_V_22_reg_877 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        shift_V_3_reg_846 <= shift_V_3_fu_369_p3;
        tmp_11_reg_835 <= tmp_11_fu_325_p2;
        tmp_12_reg_841 <= tmp_12_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        shift_V_4_reg_851 <= shift_V_4_fu_387_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_37_reg_1002 <= tmp_37_fu_626_p3;
        tmp_38_reg_1007 <= tmp_38_fu_633_p3;
        tmp_42_reg_1012 <= tmp_42_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_44_reg_1060 <= tmp_44_fu_674_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (tmp_42_reg_1012 == 1'd1))) begin
        tmp_45_reg_1086 <= tmp_45_fu_689_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        xf_V_7_reg_882 <= xf_V_7_fu_416_p3;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state16) & (tmp_29_fu_510_p3 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (tmp_29_fu_510_p3 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (tmp_29_fu_510_p3 == 1'd1))) begin
        ap_return = out_fu_603_p1;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        q0_address0 = tmp_i13_i_i_fu_664_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        q0_address0 = tmp_i_i_i_fu_464_p1;
    end else begin
        q0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state13))) begin
        q0_ce0 = 1'b1;
    end else begin
        q0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        q1_address0 = tmp_i13_i_i_fu_664_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        q1_address0 = tmp_i_i_i_fu_464_p1;
    end else begin
        q1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state13))) begin
        q1_ce0 = 1'b1;
    end else begin
        q1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        q2_ce0 = 1'b1;
    end else begin
        q2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        r0_address0 = tmp_i13_i_i_fu_664_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        r0_address0 = tmp_i_i_i_fu_464_p1;
    end else begin
        r0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state13))) begin
        r0_ce0 = 1'b1;
    end else begin
        r0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        r1_address0 = tmp_i13_i_i_fu_664_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        r1_address0 = tmp_i_i_i_fu_464_p1;
    end else begin
        r1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state13))) begin
        r1_ce0 = 1'b1;
    end else begin
        r1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        r2_address0 = tmp_i13_i_i_fu_664_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        r2_address0 = tmp_i_i_i_fu_464_p1;
    end else begin
        r2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state13))) begin
        r2_ce0 = 1'b1;
    end else begin
        r2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (tmp_29_fu_510_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Lo_assign_fu_534_p2 = ($signed(p_shl_i_i_cast_fu_530_p1) - $signed(i_i_i_cast_fu_506_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign d_chunk_V_1_fu_653_p1 = grp_fu_648_p2[2:0];

assign d_chunk_V_fu_453_p1 = p_Result_i_i_reg_894;

assign grp_fu_402_p1 = shift_V_4_reg_851;

assign grp_fu_407_p0 = new_mant_V_3_reg_814;

assign grp_fu_407_p1 = shift_V_4_reg_851;

assign grp_fu_648_p1 = tmp_38_reg_1007;

assign i_fu_552_p2 = ($signed(6'd63) + $signed(i_i_i_reg_248));

assign i_i_i_cast_fu_506_p1 = i_i_i_reg_248;

assign icmp4_fu_319_p2 = ((tmp_27_fu_309_p4 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_295_p2 = ((tmp_fu_285_p4 == 2'd0) ? 1'b1 : 1'b0);

assign loc_V_fu_712_p1 = p_Result_9_fu_705_p4;

assign new_exp_V_fu_477_p2 = (new_exp_V_2_reg_803 - shift_V_cast_cast_reg_821);

assign new_mant_V_3_fu_281_p1 = p_Val2_s_fu_259_p1[51:0];

assign new_mant_V_fu_558_p1 = p_Val2_5_reg_238[51:0];

assign out_fu_603_p1 = p_Result_11_fu_594_p4;

assign p_Repl2_3_fu_587_p3 = ((tmp_14_fu_562_p2[0:0] === 1'b1) ? new_mant_V_3_reg_814 : new_mant_V_fu_558_p1);

assign p_Repl2_5_fu_580_p3 = ((tmp_10_fu_575_p2[0:0] === 1'b1) ? p_s_fu_567_p3 : new_exp_V_reg_954);

assign p_Result_10_fu_792_p2 = (tmp_60_fu_787_p2 | tmp_59_fu_781_p2);

assign p_Result_11_fu_594_p4 = {{{p_Repl2_6_reg_798}, {p_Repl2_5_fu_580_p3}}, {p_Repl2_3_fu_587_p3}};

assign p_Result_4_fu_456_p3 = {{3'd0}, {d_chunk_V_fu_453_p1}};

assign p_Result_5_fu_481_p4 = {{{r2_load_reg_934}, {r1_load_reg_929}}, {r0_load_reg_924}};

assign p_Result_6_fu_494_p5 = {{p_Result_9_i_i_fu_488_p3}, {ap_const_lv56_0[53:0]}};

assign p_Result_7_fu_657_p3 = {{p_Repl2_4_reg_228}, {d_chunk_V_1_reg_1025}};

assign p_Result_8_fu_679_p4 = {{{r2_q0}, {r1_q0}}, {r0_q0}};

assign p_Result_9_fu_705_p4 = {{{q2_load_reg_1081}, {q1_load_1_reg_1076}}, {q0_load_1_reg_1071}};

assign p_Result_9_i_i_fu_488_p3 = {{q1_load_reg_944}, {q0_load_reg_939}};

always @ (*) begin
    p_Result_s_fu_422_p4 = xf_V_7_reg_882;
    p_Result_s_fu_422_p4[32'd52] = |(1'd1);
end

assign p_Val2_s_fu_259_p1 = in_r;

assign p_demorgan_fu_755_p2 = (tmp_57_fu_749_p2 & tmp_56_fu_743_p2);

assign p_s_fu_567_p3 = ((tmp_14_fu_562_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign p_shl_i_i_cast_fu_530_p1 = p_shl_i_i_fu_522_p3;

assign p_shl_i_i_fu_522_p3 = {{tmp_31_fu_518_p1}, {2'd0}};

assign q2_address0 = tmp_i13_i_i_fu_664_p1;

assign r_V_24_cast_fu_413_p1 = r_V_21_reg_872;

assign sel_tmp2_demorgan_fu_344_p2 = (tmp_12_fu_330_p2 | tmp_11_fu_325_p2);

assign sel_tmp2_fu_350_p2 = (sel_tmp2_demorgan_fu_344_p2 ^ 1'd1);

assign sel_tmp3_fu_356_p2 = (sel_tmp2_fu_350_p2 & icmp4_reg_829);

assign sel_tmp6_fu_377_p2 = (tmp_11_reg_835 ^ 1'd1);

assign sel_tmp7_fu_382_p2 = (tmp_12_reg_841 & sel_tmp6_fu_377_p2);

assign shift_V_1_fu_339_p2 = ($signed(11'd2047) + $signed(new_exp_V_2_reg_803));

assign shift_V_2_fu_361_p3 = ((sel_tmp3_fu_356_p2[0:0] === 1'b1) ? shift_V_fu_334_p2 : shift_V_1_fu_339_p2);

assign shift_V_3_fu_369_p3 = ((tmp_11_fu_325_p2[0:0] === 1'b1) ? 11'd0 : shift_V_2_fu_361_p3);

assign shift_V_4_fu_387_p3 = ((sel_tmp7_fu_382_p2[0:0] === 1'b1) ? shift_V_cast_cast_reg_821 : shift_V_3_reg_846);

assign shift_V_cast_cast_fu_301_p3 = ((icmp_fu_295_p2[0:0] === 1'b1) ? 11'd3 : 11'd2);

assign shift_V_fu_334_p2 = (11'd1 - new_exp_V_2_reg_803);

assign tmp_10_fu_575_p2 = (tmp_s_reg_949 | tmp_14_fu_562_p2);

assign tmp_11_fu_325_p2 = ((new_exp_V_2_reg_803 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_12_fu_330_p2 = ((shift_V_cast_cast_reg_821 < new_exp_V_2_reg_803) ? 1'b1 : 1'b0);

assign tmp_14_fu_562_p2 = ((new_exp_V_2_reg_803 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_27_fu_309_p4 = {{p_Val2_s_fu_259_p1[62:53]}};

assign tmp_29_fu_510_p3 = i_i_i_reg_248[32'd5];

assign tmp_31_fu_518_p1 = i_i_i_reg_248[4:0];

assign tmp_32_fu_540_p1 = Lo_assign_fu_534_p2[5:0];

assign tmp_33_fu_607_p2 = ((Lo_assign_reg_972 > 8'd253) ? 1'b1 : 1'b0);

assign tmp_34_fu_544_p1 = Lo_assign_fu_534_p2[5:0];

integer ap_tvar_int_0;

always @ (xf_V_8_reg_888) begin
    for (ap_tvar_int_0 = 56 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 55 - 0) begin
            tmp_35_fu_612_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_35_fu_612_p4[ap_tvar_int_0] = xf_V_8_reg_888[55 - ap_tvar_int_0];
        end
    end
end

assign tmp_36_fu_621_p2 = ($signed(6'd55) - $signed(tmp_34_reg_983));

assign tmp_37_fu_626_p3 = ((tmp_33_fu_607_p2[0:0] === 1'b1) ? tmp_35_fu_612_p4 : xf_V_8_reg_888);

assign tmp_38_fu_633_p3 = ((tmp_33_fu_607_p2[0:0] === 1'b1) ? tmp_36_fu_621_p2 : tmp_34_reg_983);

assign tmp_42_fu_640_p2 = ((Lo_assign_reg_972 > 8'd253) ? 1'b1 : 1'b0);

assign tmp_43_fu_548_p1 = Lo_assign_fu_534_p2[5:0];

assign tmp_44_fu_674_p2 = (6'd2 + tmp_32_reg_978);

assign tmp_45_fu_689_p2 = ($signed(6'd55) - $signed(tmp_43_reg_989));

assign tmp_46_fu_694_p3 = ((tmp_42_reg_1012[0:0] === 1'b1) ? tmp_43_reg_989 : tmp_44_reg_1060);

assign tmp_47_fu_716_p3 = ((tmp_42_reg_1012[0:0] === 1'b1) ? tmp_44_reg_1060 : tmp_43_reg_989);

assign tmp_48_fu_721_p3 = ((tmp_42_reg_1012[0:0] === 1'b1) ? tmp_45_reg_1086 : tmp_43_reg_989);

assign tmp_49_fu_699_p2 = ($signed(6'd55) - $signed(tmp_46_fu_694_p3));

assign tmp_50_fu_726_p1 = tmp_48_fu_721_p3;

assign tmp_51_fu_730_p1 = tmp_47_fu_716_p3;

assign tmp_52_fu_734_p1 = tmp_49_reg_1091;

assign tmp_53_fu_737_p2 = loc_V_fu_712_p1 << tmp_50_fu_726_p1;

integer ap_tvar_int_1;

always @ (tmp_53_reg_1096) begin
    for (ap_tvar_int_1 = 56 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 55 - 0) begin
            tmp_54_fu_761_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_54_fu_761_p4[ap_tvar_int_1] = tmp_53_reg_1096[55 - ap_tvar_int_1];
        end
    end
end

assign tmp_55_fu_770_p3 = ((tmp_42_reg_1012[0:0] === 1'b1) ? tmp_54_fu_761_p4 : tmp_53_reg_1096);

assign tmp_56_fu_743_p2 = 56'd72057594037927935 << tmp_51_fu_730_p1;

assign tmp_57_fu_749_p2 = 56'd72057594037927935 >> tmp_52_fu_734_p1;

assign tmp_58_fu_776_p2 = (p_demorgan_reg_1102 ^ 56'd72057594037927935);

assign tmp_59_fu_781_p2 = (tmp_58_fu_776_p2 & p_Val2_5_reg_238);

assign tmp_60_fu_787_p2 = (tmp_55_fu_770_p3 & p_demorgan_reg_1102);

assign tmp_fu_285_p4 = {{p_Val2_s_fu_259_p1[51:50]}};

assign tmp_i13_i_i_fu_664_p1 = p_Result_7_fu_657_p3;

assign tmp_i_i_i_fu_464_p1 = p_Result_4_fu_456_p3;

assign tmp_s_fu_473_p2 = ((shift_V_cast_cast_reg_821 > new_exp_V_2_reg_803) ? 1'b1 : 1'b0);

assign xf_V_5_fu_431_p3 = ((tmp_11_reg_835[0:0] === 1'b1) ? xf_V_7_reg_882 : p_Result_s_fu_422_p4);

assign xf_V_7_fu_416_p3 = ((icmp4_reg_829[0:0] === 1'b1) ? r_V_24_cast_fu_413_p1 : r_V_22_reg_877);

assign xf_V_8_fu_437_p2 = (56'd2 + xf_V_5_fu_431_p3);

always @ (posedge ap_clk) begin
    shift_V_cast_cast_reg_821[10:1] <= 10'b0000000001;
end

endmodule //operator_double_div5
