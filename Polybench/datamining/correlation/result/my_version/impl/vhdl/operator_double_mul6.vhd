-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity operator_double_mul6 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of operator_double_mul6 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (25 downto 0) := "00000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (25 downto 0) := "00000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (25 downto 0) := "00000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (25 downto 0) := "00000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (25 downto 0) := "00000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (25 downto 0) := "00000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (25 downto 0) := "00001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (25 downto 0) := "00010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (25 downto 0) := "00100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (25 downto 0) := "01000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (25 downto 0) := "10000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv11_FD : STD_LOGIC_VECTOR (10 downto 0) := "00011111101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_FF : STD_LOGIC_VECTOR (10 downto 0) := "00011111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv36_0 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    constant ap_const_lv42_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_482 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_s_reg_1148 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_488 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_494 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_lut_mul3_chunk_fu_206_ap_idle : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_206_ap_ready : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_206_ap_done : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_227_ap_idle : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_227_ap_ready : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_227_ap_done : STD_LOGIC;
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal reg_499 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_504 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_509 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_514 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_lut_mul3_chunk_fu_206_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_520 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_lut_mul3_chunk_fu_248_ap_idle : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_248_ap_ready : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_248_ap_done : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_269_ap_idle : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_269_ap_ready : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_269_ap_done : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_290_ap_idle : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_290_ap_ready : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_290_ap_done : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_311_ap_idle : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_311_ap_ready : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_311_ap_done : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_332_ap_idle : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_332_ap_ready : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_332_ap_done : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_353_ap_idle : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_353_ap_ready : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_353_ap_done : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_374_ap_idle : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_374_ap_ready : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_374_ap_done : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal grp_lut_mul3_chunk_fu_227_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_524 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_lut_mul3_chunk_fu_248_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_528 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_lut_mul3_chunk_fu_269_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_532 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_lut_mul3_chunk_fu_290_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_lut_mul3_chunk_fu_311_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_reg_1109 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Repl2_2_reg_1124 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_exp_V_fu_558_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal new_exp_V_reg_1129 : STD_LOGIC_VECTOR (10 downto 0);
    signal new_mant_V_fu_568_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal new_mant_V_reg_1135 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_reg_1140 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1144 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_24_fu_584_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_24_reg_1152 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_7_i_i1_fu_596_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_7_i_i1_reg_1157 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_lut_mul3_chunk_fu_332_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal chunk_36_41_V_1_reg_1162 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_lut_mul3_chunk_fu_353_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal chunk_42_47_V_1_reg_1167 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_601_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_25_reg_1172 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp18_fu_687_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp18_reg_1177 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp20_fu_693_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp20_reg_1182 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp21_fu_699_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp21_reg_1187 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp24_fu_714_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp24_reg_1192 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp19_fu_723_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp19_reg_1197 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp22_fu_731_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp22_reg_1202 : STD_LOGIC_VECTOR (52 downto 0);
    signal new_mant_V_1_reg_1207 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal new_exp_V_2_s_fu_769_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal new_exp_V_2_s_reg_1212 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal new_exp_V_2_cast_19_fu_777_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_13_fu_780_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_13_reg_1222 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_7_i_i_fu_784_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_7_i_i_reg_1227 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_fu_813_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_reg_1232 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp7_fu_817_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp7_reg_1237 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp6_fu_894_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp6_reg_1242 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp8_fu_900_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp8_reg_1247 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp10_fu_905_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp10_reg_1252 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp11_fu_911_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp11_reg_1257 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp9_fu_920_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp9_reg_1262 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp13_fu_932_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp13_reg_1267 : STD_LOGIC_VECTOR (54 downto 0);
    signal agg_result_V_i_i2_fu_940_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal agg_result_V_i_i2_reg_1272 : STD_LOGIC_VECTOR (54 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal r_V_18_fu_945_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal r_V_18_reg_1278 : STD_LOGIC_VECTOR (55 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal clz_V_fu_978_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal clz_V_reg_1284 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_reg_1289 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1294 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal tmp_5_cast_fu_997_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_5_cast_reg_1301 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_19_fu_1000_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_19_reg_1306 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_fu_1006_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_reg_1313 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal new_exp_V_1_fu_1035_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal new_exp_V_1_reg_1328 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_fu_1021_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal r_V_1_reg_1333 : STD_LOGIC_VECTOR (55 downto 0);
    signal grp_fu_1030_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal r_V_reg_1338 : STD_LOGIC_VECTOR (55 downto 0);
    signal grp_lut_mul3_chunk_fu_206_ap_start : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_206_d_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_lut_mul3_chunk_fu_227_ap_start : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_227_d_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_lut_mul3_chunk_fu_248_ap_start : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_269_ap_start : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_290_ap_start : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_311_ap_start : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_311_d_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_lut_mul3_chunk_fu_332_ap_start : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_332_d_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_lut_mul3_chunk_fu_353_ap_start : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_374_ap_start : STD_LOGIC;
    signal grp_lut_mul3_chunk_fu_374_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_p_0330_2_phi_fu_172_p6 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_0330_2_reg_168 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal p_cast_18_fu_1053_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_p_Repl2_1_phi_fu_185_p6 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Repl2_1_reg_182 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal new_mant_V_2_fu_1088_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_phi_mux_p_Repl2_s_phi_fu_196_p6 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Repl2_s_reg_193 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_lut_mul3_chunk_fu_206_ap_start_reg : STD_LOGIC := '0';
    signal grp_lut_mul3_chunk_fu_227_ap_start_reg : STD_LOGIC := '0';
    signal grp_lut_mul3_chunk_fu_248_ap_start_reg : STD_LOGIC := '0';
    signal grp_lut_mul3_chunk_fu_269_ap_start_reg : STD_LOGIC := '0';
    signal grp_lut_mul3_chunk_fu_290_ap_start_reg : STD_LOGIC := '0';
    signal grp_lut_mul3_chunk_fu_311_ap_start_reg : STD_LOGIC := '0';
    signal grp_lut_mul3_chunk_fu_332_ap_start_reg : STD_LOGIC := '0';
    signal grp_lut_mul3_chunk_fu_353_ap_start_reg : STD_LOGIC := '0';
    signal grp_lut_mul3_chunk_fu_374_ap_start_reg : STD_LOGIC := '0';
    signal grp_fu_395_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_473_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_11_fu_588_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_11_fu_605_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_12_fu_617_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_13_fu_629_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_14_fu_641_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_15_fu_653_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal r_V_16_fu_665_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_17_fu_676_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_14_cast_fu_625_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_13_cast_fu_613_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_16_cast_fu_649_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_15_cast_fu_637_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_18_cast_fu_672_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_17_cast_fu_661_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_19_cast_fu_683_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp23_fu_705_p4 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp20_cast_fu_720_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp23_cast_fu_728_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp19_cast_fu_736_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal agg_result_V_i_i1_fu_739_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_12_fu_754_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal new_exp_V_2_cast_fu_763_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_7_fu_789_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal r_V_8_fu_801_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_8_cast_fu_809_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_7_cast_fu_797_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_2_fu_823_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_3_fu_835_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_5_fu_847_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_fu_859_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_871_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_5_cast_fu_855_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_3_cast_fu_843_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_6_cast_fu_867_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_s_fu_883_p3 : STD_LOGIC_VECTOR (54 downto 0);
    signal r_V_9_cast_fu_879_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_cast_fu_890_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_2_cast_fu_831_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp12_cast_fu_917_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp12_fu_925_p3 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp11_cast_fu_937_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Result_s_fu_952_p4 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Result_1_fu_962_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_970_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_cast_fu_1014_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1021_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_2_fu_1011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1030_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_s_fu_1047_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_fu_1040_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1063_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_21_fu_1066_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_23_fu_1077_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_22_fu_1069_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_3_fu_1080_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_2_fu_1096_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_fu_1105_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (25 downto 0);

    component lut_mul3_chunk IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        d_V : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component kernel_correlatiokbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        OP : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (55 downto 0);
        din1 : IN STD_LOGIC_VECTOR (55 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component kernel_correlatiolbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        OP : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (55 downto 0);
        din1 : IN STD_LOGIC_VECTOR (55 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;



begin
    grp_lut_mul3_chunk_fu_206 : component lut_mul3_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul3_chunk_fu_206_ap_start,
        ap_done => grp_lut_mul3_chunk_fu_206_ap_done,
        ap_idle => grp_lut_mul3_chunk_fu_206_ap_idle,
        ap_ready => grp_lut_mul3_chunk_fu_206_ap_ready,
        d_V => grp_lut_mul3_chunk_fu_206_d_V,
        ap_return => grp_lut_mul3_chunk_fu_206_ap_return);

    grp_lut_mul3_chunk_fu_227 : component lut_mul3_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul3_chunk_fu_227_ap_start,
        ap_done => grp_lut_mul3_chunk_fu_227_ap_done,
        ap_idle => grp_lut_mul3_chunk_fu_227_ap_idle,
        ap_ready => grp_lut_mul3_chunk_fu_227_ap_ready,
        d_V => grp_lut_mul3_chunk_fu_227_d_V,
        ap_return => grp_lut_mul3_chunk_fu_227_ap_return);

    grp_lut_mul3_chunk_fu_248 : component lut_mul3_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul3_chunk_fu_248_ap_start,
        ap_done => grp_lut_mul3_chunk_fu_248_ap_done,
        ap_idle => grp_lut_mul3_chunk_fu_248_ap_idle,
        ap_ready => grp_lut_mul3_chunk_fu_248_ap_ready,
        d_V => reg_499,
        ap_return => grp_lut_mul3_chunk_fu_248_ap_return);

    grp_lut_mul3_chunk_fu_269 : component lut_mul3_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul3_chunk_fu_269_ap_start,
        ap_done => grp_lut_mul3_chunk_fu_269_ap_done,
        ap_idle => grp_lut_mul3_chunk_fu_269_ap_idle,
        ap_ready => grp_lut_mul3_chunk_fu_269_ap_ready,
        d_V => reg_504,
        ap_return => grp_lut_mul3_chunk_fu_269_ap_return);

    grp_lut_mul3_chunk_fu_290 : component lut_mul3_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul3_chunk_fu_290_ap_start,
        ap_done => grp_lut_mul3_chunk_fu_290_ap_done,
        ap_idle => grp_lut_mul3_chunk_fu_290_ap_idle,
        ap_ready => grp_lut_mul3_chunk_fu_290_ap_ready,
        d_V => reg_509,
        ap_return => grp_lut_mul3_chunk_fu_290_ap_return);

    grp_lut_mul3_chunk_fu_311 : component lut_mul3_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul3_chunk_fu_311_ap_start,
        ap_done => grp_lut_mul3_chunk_fu_311_ap_done,
        ap_idle => grp_lut_mul3_chunk_fu_311_ap_idle,
        ap_ready => grp_lut_mul3_chunk_fu_311_ap_ready,
        d_V => grp_lut_mul3_chunk_fu_311_d_V,
        ap_return => grp_lut_mul3_chunk_fu_311_ap_return);

    grp_lut_mul3_chunk_fu_332 : component lut_mul3_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul3_chunk_fu_332_ap_start,
        ap_done => grp_lut_mul3_chunk_fu_332_ap_done,
        ap_idle => grp_lut_mul3_chunk_fu_332_ap_idle,
        ap_ready => grp_lut_mul3_chunk_fu_332_ap_ready,
        d_V => grp_lut_mul3_chunk_fu_332_d_V,
        ap_return => grp_lut_mul3_chunk_fu_332_ap_return);

    grp_lut_mul3_chunk_fu_353 : component lut_mul3_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul3_chunk_fu_353_ap_start,
        ap_done => grp_lut_mul3_chunk_fu_353_ap_done,
        ap_idle => grp_lut_mul3_chunk_fu_353_ap_idle,
        ap_ready => grp_lut_mul3_chunk_fu_353_ap_ready,
        d_V => reg_514,
        ap_return => grp_lut_mul3_chunk_fu_353_ap_return);

    grp_lut_mul3_chunk_fu_374 : component lut_mul3_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul3_chunk_fu_374_ap_start,
        ap_done => grp_lut_mul3_chunk_fu_374_ap_done,
        ap_idle => grp_lut_mul3_chunk_fu_374_ap_idle,
        ap_ready => grp_lut_mul3_chunk_fu_374_ap_ready,
        d_V => p_Result_7_i_i1_reg_1157,
        ap_return => grp_lut_mul3_chunk_fu_374_ap_return);

    kernel_correlatiokbM_U23 : component kernel_correlatiokbM
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        OP => 0,
        din0_WIDTH => 56,
        din1_WIDTH => 32,
        dout_WIDTH => 56)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_18_reg_1278,
        din1 => grp_fu_1021_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1021_p2);

    kernel_correlatiolbW_U24 : component kernel_correlatiolbW
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        OP => 1,
        din0_WIDTH => 56,
        din1_WIDTH => 32,
        dout_WIDTH => 56)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_18_reg_1278,
        din1 => grp_fu_1030_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1030_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv64_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    ap_return_preg <= out_fu_1105_p1;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul3_chunk_fu_206_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul3_chunk_fu_206_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_fu_572_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_lut_mul3_chunk_fu_206_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul3_chunk_fu_206_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul3_chunk_fu_206_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul3_chunk_fu_227_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul3_chunk_fu_227_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_fu_572_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_lut_mul3_chunk_fu_227_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul3_chunk_fu_227_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul3_chunk_fu_227_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul3_chunk_fu_248_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul3_chunk_fu_248_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_lut_mul3_chunk_fu_248_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul3_chunk_fu_248_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul3_chunk_fu_248_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul3_chunk_fu_269_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul3_chunk_fu_269_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_lut_mul3_chunk_fu_269_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul3_chunk_fu_269_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul3_chunk_fu_269_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul3_chunk_fu_290_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul3_chunk_fu_290_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_lut_mul3_chunk_fu_290_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul3_chunk_fu_290_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul3_chunk_fu_290_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul3_chunk_fu_311_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul3_chunk_fu_311_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_lut_mul3_chunk_fu_311_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul3_chunk_fu_311_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul3_chunk_fu_311_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul3_chunk_fu_332_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul3_chunk_fu_332_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_lut_mul3_chunk_fu_332_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul3_chunk_fu_332_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul3_chunk_fu_332_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul3_chunk_fu_353_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul3_chunk_fu_353_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_lut_mul3_chunk_fu_353_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul3_chunk_fu_353_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul3_chunk_fu_353_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul3_chunk_fu_374_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul3_chunk_fu_374_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_lut_mul3_chunk_fu_374_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul3_chunk_fu_374_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul3_chunk_fu_374_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_0330_2_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1148 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_0330_2_reg_168 <= ap_const_lv52_0;
            elsif (((tmp_4_reg_1144 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_0330_2_reg_168 <= new_mant_V_reg_1135;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                p_0330_2_reg_168 <= new_mant_V_1_reg_1207;
            end if; 
        end if;
    end process;

    p_Repl2_1_reg_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                p_Repl2_1_reg_182 <= new_exp_V_2_cast_19_fu_777_p1;
            elsif (((tmp_4_reg_1144 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                p_Repl2_1_reg_182 <= new_exp_V_reg_1129;
            elsif (((tmp_reg_1140 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                p_Repl2_1_reg_182 <= p_cast_18_fu_1053_p1;
            end if; 
        end if;
    end process;

    p_Repl2_s_reg_193_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                p_Repl2_s_reg_193 <= p_0330_2_reg_168;
            elsif (((tmp_4_reg_1144 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                p_Repl2_s_reg_193 <= ap_phi_mux_p_0330_2_phi_fu_172_p6;
            elsif (((tmp_reg_1140 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                p_Repl2_s_reg_193 <= new_mant_V_2_fu_1088_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                agg_result_V_i_i2_reg_1272 <= agg_result_V_i_i2_fu_940_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                chunk_36_41_V_1_reg_1162 <= grp_lut_mul3_chunk_fu_332_ap_return;
                chunk_42_47_V_1_reg_1167 <= grp_lut_mul3_chunk_fu_353_ap_return;
                tmp_25_reg_1172 <= tmp_25_fu_601_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                clz_V_reg_1284 <= clz_V_fu_978_p1;
                    r_V_18_reg_1278(55 downto 1) <= r_V_18_fu_945_p3(55 downto 1);
                tmp_17_reg_1289 <= tmp_1_fu_970_p3(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                icmp_reg_1294 <= icmp_fu_992_p2;
                r_V_19_reg_1306 <= r_V_19_fu_1000_p2;
                    tmp_5_cast_reg_1301(5 downto 0) <= tmp_5_cast_fu_997_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_reg_1294 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                new_exp_V_1_reg_1328 <= new_exp_V_1_fu_1035_p2;
                r_V_1_reg_1333 <= grp_fu_1021_p2;
                r_V_reg_1338 <= grp_fu_1030_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_4_reg_1144 = ap_const_lv1_0))) then
                new_exp_V_2_s_reg_1212 <= new_exp_V_2_s_fu_769_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                new_exp_V_reg_1129 <= p_Val2_s_fu_544_p1(62 downto 52);
                new_mant_V_reg_1135 <= new_mant_V_fu_568_p1;
                p_Repl2_2_reg_1124 <= p_Val2_s_fu_544_p1(63 downto 63);
                p_Val2_s_reg_1109 <= p_Val2_s_fu_544_p1;
                tmp_reg_1140 <= tmp_fu_572_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                new_mant_V_1_reg_1207 <= agg_result_V_i_i1_fu_739_p2(52 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    p_Result_7_i_i1_reg_1157(3 downto 0) <= p_Result_7_i_i1_fu_596_p1(3 downto 0);
                tmp_24_reg_1152 <= tmp_24_fu_584_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    p_Result_7_i_i_reg_1227(3 downto 0) <= p_Result_7_i_i_fu_784_p1(3 downto 0);
                tmp_13_reg_1222 <= tmp_13_fu_780_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_fu_572_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then
                reg_482 <= grp_fu_395_p1(35 downto 30);
                reg_488 <= grp_fu_406_p1(41 downto 36);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_s_reg_1148 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then
                reg_494 <= p_Val2_s_reg_1109(11 downto 6);
                reg_499 <= p_Val2_s_reg_1109(17 downto 12);
                reg_504 <= p_Val2_s_reg_1109(23 downto 18);
                reg_509 <= p_Val2_s_reg_1109(29 downto 24);
                reg_514 <= p_Val2_s_reg_1109(47 downto 42);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done)))) then
                reg_520 <= grp_lut_mul3_chunk_fu_206_ap_return;
                reg_524 <= grp_lut_mul3_chunk_fu_227_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done)))) then
                reg_528 <= grp_lut_mul3_chunk_fu_248_ap_return;
                reg_532 <= grp_lut_mul3_chunk_fu_269_ap_return;
                reg_536 <= grp_lut_mul3_chunk_fu_290_ap_return;
                reg_540 <= grp_lut_mul3_chunk_fu_311_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                    tmp10_reg_1252(54 downto 42) <= tmp10_fu_905_p2(54 downto 42);
                tmp11_reg_1257 <= tmp11_fu_911_p2;
                    tmp6_reg_1242(26 downto 12) <= tmp6_fu_894_p2(26 downto 12);
                    tmp8_reg_1247(44 downto 24) <= tmp8_fu_900_p2(44 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                tmp13_reg_1267 <= tmp13_fu_932_p2;
                    tmp9_reg_1262(44 downto 12) <= tmp9_fu_920_p2(44 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    tmp18_reg_1177(20 downto 6) <= tmp18_fu_687_p2(20 downto 6);
                    tmp20_reg_1182(32 downto 18) <= tmp20_fu_693_p2(32 downto 18);
                    tmp21_reg_1187(44 downto 30) <= tmp21_fu_699_p2(44 downto 30);
                tmp24_reg_1192 <= tmp24_fu_714_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    tmp19_reg_1197(32 downto 6) <= tmp19_fu_723_p2(32 downto 6);
                tmp22_reg_1202 <= tmp22_fu_731_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done))) then
                    tmp7_reg_1237(44 downto 30) <= tmp7_fu_817_p2(44 downto 30);
                tmp_14_reg_1232 <= tmp_14_fu_813_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_572_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_4_reg_1144 <= tmp_4_fu_578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_reg_1294 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                tmp_8_reg_1313 <= tmp_8_fu_1006_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_4_reg_1144 = ap_const_lv1_0))) then
                tmp_s_reg_1148 <= grp_fu_417_p2;
            end if;
        end if;
    end process;
    p_Result_7_i_i1_reg_1157(5 downto 4) <= "01";
    tmp18_reg_1177(5 downto 0) <= "000000";
    tmp20_reg_1182(17 downto 0) <= "000000000000000000";
    tmp21_reg_1187(29 downto 0) <= "000000000000000000000000000000";
    tmp19_reg_1197(5 downto 0) <= "000000";
    p_Result_7_i_i_reg_1227(5 downto 4) <= "00";
    tmp7_reg_1237(29 downto 0) <= "000000000000000000000000000000";
    tmp6_reg_1242(11 downto 0) <= "000000000000";
    tmp8_reg_1247(23 downto 0) <= "000000000000000000000000";
    tmp10_reg_1252(41 downto 0) <= "000000000000000000000000000000000000000000";
    tmp9_reg_1262(11 downto 0) <= "000000000000";
    r_V_18_reg_1278(0) <= '0';
    tmp_5_cast_reg_1301(6) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_fu_572_p2, ap_CS_fsm_state3, tmp_s_reg_1148, ap_CS_fsm_state11, ap_block_state11_on_subcall_done, ap_CS_fsm_state4, ap_block_state4_on_subcall_done, ap_CS_fsm_state12, ap_block_state12_on_subcall_done, tmp_4_reg_1144, ap_CS_fsm_state2, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((tmp_fu_572_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((tmp_fu_572_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_4_reg_1144 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_s_reg_1148 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((tmp_4_reg_1144 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    agg_result_V_i_i1_fu_739_p2 <= std_logic_vector(unsigned(tmp19_cast_fu_736_p1) + unsigned(tmp22_reg_1202));
    agg_result_V_i_i2_fu_940_p2 <= std_logic_vector(unsigned(tmp11_cast_fu_937_p1) + unsigned(tmp13_reg_1267));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state11_on_subcall_done_assign_proc : process(grp_lut_mul3_chunk_fu_206_ap_done, grp_lut_mul3_chunk_fu_227_ap_done)
    begin
                ap_block_state11_on_subcall_done <= ((grp_lut_mul3_chunk_fu_227_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_206_ap_done = ap_const_logic_0));
    end process;


    ap_block_state12_on_subcall_done_assign_proc : process(grp_lut_mul3_chunk_fu_206_ap_done, grp_lut_mul3_chunk_fu_227_ap_done, grp_lut_mul3_chunk_fu_248_ap_done, grp_lut_mul3_chunk_fu_269_ap_done, grp_lut_mul3_chunk_fu_290_ap_done, grp_lut_mul3_chunk_fu_311_ap_done, grp_lut_mul3_chunk_fu_332_ap_done)
    begin
                ap_block_state12_on_subcall_done <= ((grp_lut_mul3_chunk_fu_227_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_206_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_332_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_311_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_290_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_269_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_248_ap_done = ap_const_logic_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_lut_mul3_chunk_fu_206_ap_done, grp_lut_mul3_chunk_fu_227_ap_done, grp_lut_mul3_chunk_fu_248_ap_done, grp_lut_mul3_chunk_fu_269_ap_done, grp_lut_mul3_chunk_fu_290_ap_done, grp_lut_mul3_chunk_fu_311_ap_done, grp_lut_mul3_chunk_fu_332_ap_done, grp_lut_mul3_chunk_fu_353_ap_done, grp_lut_mul3_chunk_fu_374_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_lut_mul3_chunk_fu_227_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_206_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_374_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_353_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_332_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_311_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_290_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_269_ap_done = ap_const_logic_0) or (grp_lut_mul3_chunk_fu_248_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_p_0330_2_phi_fu_172_p6 <= p_0330_2_reg_168;

    ap_phi_mux_p_Repl2_1_phi_fu_185_p6_assign_proc : process(tmp_reg_1140, p_cast_18_fu_1053_p1, p_Repl2_1_reg_182, ap_CS_fsm_state26)
    begin
        if (((tmp_reg_1140 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            ap_phi_mux_p_Repl2_1_phi_fu_185_p6 <= p_cast_18_fu_1053_p1;
        else 
            ap_phi_mux_p_Repl2_1_phi_fu_185_p6 <= p_Repl2_1_reg_182;
        end if; 
    end process;


    ap_phi_mux_p_Repl2_s_phi_fu_196_p6_assign_proc : process(tmp_reg_1140, ap_CS_fsm_state26, new_mant_V_2_fu_1088_p3, p_Repl2_s_reg_193)
    begin
        if (((tmp_reg_1140 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            ap_phi_mux_p_Repl2_s_phi_fu_196_p6 <= new_mant_V_2_fu_1088_p3;
        else 
            ap_phi_mux_p_Repl2_s_phi_fu_196_p6 <= p_Repl2_s_reg_193;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state26, out_fu_1105_p1, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ap_return <= out_fu_1105_p1;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    clz_V_fu_978_p1 <= tmp_1_fu_970_p3(6 - 1 downto 0);
    grp_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_cast_fu_1014_p1),56));
    grp_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_1011_p1),56));

    grp_fu_395_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Val2_s_fu_544_p1, p_Val2_s_reg_1109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_395_p1 <= p_Val2_s_reg_1109;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_395_p1 <= p_Val2_s_fu_544_p1;
        else 
            grp_fu_395_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_406_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, p_Val2_s_fu_544_p1, p_Val2_s_reg_1109)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_406_p1 <= p_Val2_s_reg_1109;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_406_p1 <= p_Val2_s_fu_544_p1;
        else 
            grp_fu_406_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_417_p2 <= "1" when (unsigned(new_exp_V_reg_1129) < unsigned(ap_const_lv11_FD)) else "0";
    grp_fu_473_p4 <= p_Val2_s_reg_1109(51 downto 48);
    grp_lut_mul3_chunk_fu_206_ap_start <= grp_lut_mul3_chunk_fu_206_ap_start_reg;

    grp_lut_mul3_chunk_fu_206_d_V_assign_proc : process(reg_482, ap_CS_fsm_state11, ap_CS_fsm_state4, ap_CS_fsm_state12, tmp_24_reg_1152, tmp_13_reg_1222)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_lut_mul3_chunk_fu_206_d_V <= tmp_13_reg_1222;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_lut_mul3_chunk_fu_206_d_V <= tmp_24_reg_1152;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_lut_mul3_chunk_fu_206_d_V <= reg_482;
        else 
            grp_lut_mul3_chunk_fu_206_d_V <= "XXXXXX";
        end if; 
    end process;

    grp_lut_mul3_chunk_fu_227_ap_start <= grp_lut_mul3_chunk_fu_227_ap_start_reg;

    grp_lut_mul3_chunk_fu_227_d_V_assign_proc : process(reg_488, reg_494, ap_CS_fsm_state11, ap_CS_fsm_state4, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_lut_mul3_chunk_fu_227_d_V <= reg_494;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_lut_mul3_chunk_fu_227_d_V <= reg_488;
        else 
            grp_lut_mul3_chunk_fu_227_d_V <= "XXXXXX";
        end if; 
    end process;

    grp_lut_mul3_chunk_fu_248_ap_start <= grp_lut_mul3_chunk_fu_248_ap_start_reg;
    grp_lut_mul3_chunk_fu_269_ap_start <= grp_lut_mul3_chunk_fu_269_ap_start_reg;
    grp_lut_mul3_chunk_fu_290_ap_start <= grp_lut_mul3_chunk_fu_290_ap_start_reg;
    grp_lut_mul3_chunk_fu_311_ap_start <= grp_lut_mul3_chunk_fu_311_ap_start_reg;

    grp_lut_mul3_chunk_fu_311_d_V_assign_proc : process(reg_482, reg_514, ap_CS_fsm_state4, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_lut_mul3_chunk_fu_311_d_V <= reg_514;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_lut_mul3_chunk_fu_311_d_V <= reg_482;
        else 
            grp_lut_mul3_chunk_fu_311_d_V <= "XXXXXX";
        end if; 
    end process;

    grp_lut_mul3_chunk_fu_332_ap_start <= grp_lut_mul3_chunk_fu_332_ap_start_reg;

    grp_lut_mul3_chunk_fu_332_d_V_assign_proc : process(reg_488, ap_CS_fsm_state4, ap_CS_fsm_state12, p_Result_7_i_i_reg_1227)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_lut_mul3_chunk_fu_332_d_V <= p_Result_7_i_i_reg_1227;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_lut_mul3_chunk_fu_332_d_V <= reg_488;
        else 
            grp_lut_mul3_chunk_fu_332_d_V <= "XXXXXX";
        end if; 
    end process;

    grp_lut_mul3_chunk_fu_353_ap_start <= grp_lut_mul3_chunk_fu_353_ap_start_reg;
    grp_lut_mul3_chunk_fu_374_ap_start <= grp_lut_mul3_chunk_fu_374_ap_start_reg;
    icmp_fu_992_p2 <= "1" when (tmp_17_reg_1289 = ap_const_lv4_0) else "0";
    new_exp_V_1_fu_1035_p2 <= std_logic_vector(unsigned(ap_const_lv7_4) - unsigned(tmp_5_cast_reg_1301));
    new_exp_V_2_cast_19_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(new_exp_V_2_s_reg_1212),11));
    new_exp_V_2_cast_fu_763_p2 <= std_logic_vector(unsigned(tmp_12_fu_754_p4) + unsigned(ap_const_lv8_2));
    new_exp_V_2_s_fu_769_p3 <= 
        new_exp_V_2_cast_fu_763_p2 when (grp_fu_417_p2(0) = '1') else 
        ap_const_lv8_FF;
    new_exp_V_fu_558_p4 <= p_Val2_s_fu_544_p1(62 downto 52);
    new_mant_V_2_fu_1088_p3 <= 
        tmp_22_fu_1069_p3 when (icmp_reg_1294(0) = '1') else 
        tmp_3_fu_1080_p3;
    new_mant_V_fu_568_p1 <= p_Val2_s_fu_544_p1(52 - 1 downto 0);
    out_fu_1105_p1 <= p_Result_2_fu_1096_p4;
    p_Result_1_fu_962_p3 <= (ap_const_lv8_FF & p_Result_s_fu_952_p4);
    p_Result_2_fu_1096_p4 <= ((p_Repl2_2_reg_1124 & ap_phi_mux_p_Repl2_1_phi_fu_185_p6) & ap_phi_mux_p_Repl2_s_phi_fu_196_p6);
    p_Result_7_i_i1_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_588_p3),6));
    p_Result_7_i_i_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_473_p4),6));
    
    p_Result_s_fu_952_p4_proc : process(r_V_18_fu_945_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(56+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(56+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(56 - 1 downto 0);
    variable p_Result_s_fu_952_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(56 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(56 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(56 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_37(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := r_V_18_fu_945_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(56-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(56-1-unsigned(ap_const_lv32_37(6-1 downto 0)));
            for p_Result_s_fu_952_p4_i in 0 to 56-1 loop
                v0_cpy(p_Result_s_fu_952_p4_i) := r_V_18_fu_945_p3(56-1-p_Result_s_fu_952_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(56-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_952_p4 <= resvalue(56-1 downto 0);
    end process;

    p_Val2_s_fu_544_p1 <= in_r;
        p_cast_18_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_s_fu_1047_p3),11));

    p_cast_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_520),15));
    p_s_fu_1047_p3 <= 
        new_exp_V_1_reg_1328 when (icmp_reg_1294(0) = '1') else 
        ap_const_lv7_0;
    r_V_11_fu_605_p3 <= (reg_524 & ap_const_lv6_0);
    r_V_12_fu_617_p3 <= (reg_528 & ap_const_lv12_0);
    r_V_13_cast_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_11_fu_605_p3),21));
    r_V_13_fu_629_p3 <= (reg_532 & ap_const_lv18_0);
    r_V_14_cast_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_12_fu_617_p3),21));
    r_V_14_fu_641_p3 <= (reg_536 & ap_const_lv24_0);
    r_V_15_cast_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_13_fu_629_p3),33));
    r_V_15_fu_653_p3 <= (reg_540 & ap_const_lv30_0);
    r_V_16_cast_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_14_fu_641_p3),33));
    r_V_16_fu_665_p3 <= (chunk_36_41_V_1_reg_1162 & ap_const_lv36_0);
    r_V_17_cast_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_15_fu_653_p3),45));
    r_V_17_fu_676_p3 <= (chunk_42_47_V_1_reg_1167 & ap_const_lv42_0);
    r_V_18_cast_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_16_fu_665_p3),45));
    r_V_18_fu_945_p3 <= (agg_result_V_i_i2_reg_1272 & ap_const_lv1_0);
    r_V_19_cast_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_17_fu_676_p3),53));
    r_V_19_fu_1000_p2 <= std_logic_vector(unsigned(ap_const_lv7_3) - unsigned(tmp_5_cast_fu_997_p1));
    r_V_2_cast_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_2_fu_823_p3),15));
    r_V_2_fu_823_p3 <= (reg_524 & ap_const_lv6_0);
    r_V_3_cast_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_fu_835_p3),27));
    r_V_3_fu_835_p3 <= (reg_528 & ap_const_lv12_0);
    r_V_5_cast_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_5_fu_847_p3),27));
    r_V_5_fu_847_p3 <= (reg_532 & ap_const_lv18_0);
    r_V_6_cast_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_6_fu_859_p3),45));
    r_V_6_fu_859_p3 <= (reg_536 & ap_const_lv24_0);
    r_V_7_cast_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_7_fu_789_p3),45));
    r_V_7_fu_789_p3 <= (reg_520 & ap_const_lv30_0);
    r_V_8_cast_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_fu_801_p3),45));
    r_V_8_fu_801_p3 <= (reg_524 & ap_const_lv36_0);
    r_V_9_cast_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_9_fu_871_p3),55));
    r_V_9_fu_871_p3 <= (reg_540 & ap_const_lv42_0);
    r_V_s_fu_883_p3 <= (tmp_14_reg_1232 & ap_const_lv48_0);
    sel_tmp7_fu_1058_p2 <= (tmp_18_fu_1040_p3 and icmp_reg_1294);
    tmp10_fu_905_p2 <= std_logic_vector(unsigned(r_V_s_fu_883_p3) + unsigned(r_V_9_cast_fu_879_p1));
    tmp11_cast_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp9_reg_1262),55));
    tmp11_fu_911_p2 <= std_logic_vector(unsigned(p_cast_fu_890_p1) + unsigned(r_V_2_cast_fu_831_p1));
    tmp12_cast_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp6_reg_1242),45));
    tmp12_fu_925_p3 <= (ap_const_lv40_0 & tmp11_reg_1257);
    tmp13_fu_932_p2 <= std_logic_vector(unsigned(tmp10_reg_1252) + unsigned(tmp12_fu_925_p3));
    tmp18_fu_687_p2 <= std_logic_vector(unsigned(r_V_14_cast_fu_625_p1) + unsigned(r_V_13_cast_fu_613_p1));
    tmp19_cast_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp19_reg_1197),53));
    tmp19_fu_723_p2 <= std_logic_vector(unsigned(tmp20_cast_fu_720_p1) + unsigned(tmp20_reg_1182));
    tmp20_cast_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp18_reg_1177),33));
    tmp20_fu_693_p2 <= std_logic_vector(unsigned(r_V_16_cast_fu_649_p1) + unsigned(r_V_15_cast_fu_637_p1));
    tmp21_fu_699_p2 <= std_logic_vector(unsigned(r_V_18_cast_fu_672_p1) + unsigned(r_V_17_cast_fu_661_p1));
    tmp22_fu_731_p2 <= std_logic_vector(unsigned(tmp23_cast_fu_728_p1) + unsigned(tmp24_reg_1192));
    tmp23_cast_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp21_reg_1187),53));
    tmp23_fu_705_p4 <= ((tmp_25_reg_1172 & ap_const_lv40_0) & reg_520);
    tmp24_fu_714_p2 <= std_logic_vector(unsigned(r_V_19_cast_fu_683_p1) + unsigned(tmp23_fu_705_p4));
    tmp6_fu_894_p2 <= std_logic_vector(unsigned(r_V_5_cast_fu_855_p1) + unsigned(r_V_3_cast_fu_843_p1));
    tmp7_fu_817_p2 <= std_logic_vector(unsigned(r_V_8_cast_fu_809_p1) + unsigned(r_V_7_cast_fu_797_p1));
    tmp8_fu_900_p2 <= std_logic_vector(unsigned(r_V_6_cast_fu_867_p1) + unsigned(tmp7_reg_1237));
    tmp9_fu_920_p2 <= std_logic_vector(unsigned(tmp12_cast_fu_917_p1) + unsigned(tmp8_reg_1247));
    tmp_11_fu_588_p3 <= (ap_const_lv1_1 & grp_fu_473_p4);
    tmp_12_fu_754_p4 <= p_Val2_s_reg_1109(59 downto 52);
    tmp_13_fu_780_p1 <= p_Val2_s_reg_1109(6 - 1 downto 0);
    tmp_14_fu_813_p1 <= grp_lut_mul3_chunk_fu_332_ap_return(7 - 1 downto 0);
    tmp_18_fu_1040_p3 <= r_V_19_reg_1306(6 downto 6);
    tmp_19_fu_1063_p1 <= r_V_1_reg_1333(52 - 1 downto 0);
    
    tmp_1_fu_970_p3_proc : process(p_Result_1_fu_962_p3)
    begin
        tmp_1_fu_970_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_1_fu_962_p3(i) = '1' then
                tmp_1_fu_970_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_21_fu_1066_p1 <= r_V_reg_1338(52 - 1 downto 0);
    tmp_22_fu_1069_p3 <= 
        tmp_19_fu_1063_p1 when (sel_tmp7_fu_1058_p2(0) = '1') else 
        tmp_21_fu_1066_p1;
    tmp_23_fu_1077_p1 <= agg_result_V_i_i2_reg_1272(51 - 1 downto 0);
    tmp_24_fu_584_p1 <= p_Val2_s_reg_1109(6 - 1 downto 0);
    tmp_25_fu_601_p1 <= grp_lut_mul3_chunk_fu_374_ap_return(5 - 1 downto 0);
        tmp_2_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_19_reg_1306),32));

    tmp_3_fu_1080_p3 <= (tmp_23_fu_1077_p1 & ap_const_lv1_0);
    tmp_4_fu_578_p2 <= "1" when (new_exp_V_fu_558_p4 = ap_const_lv11_FF) else "0";
    tmp_5_cast_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(clz_V_reg_1284),7));
        tmp_8_cast_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_reg_1313),32));

    tmp_8_fu_1006_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(r_V_19_reg_1306));
    tmp_fu_572_p2 <= "1" when (new_exp_V_fu_558_p4 = ap_const_lv11_0) else "0";
end behav;
