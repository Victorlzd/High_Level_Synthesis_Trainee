// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="int_56_div5,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.688425,HLS_SYN_LAT=57,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=153,HLS_SYN_LUT=252,HLS_VERSION=2018_2}" *)

module int_56_div5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [55:0] in_V;
output  [55:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] reg_140;
wire    ap_CS_fsm_state2;
wire    grp_lut_div5_chunk_fu_112_ap_idle;
wire    grp_lut_div5_chunk_fu_112_ap_ready;
wire    grp_lut_div5_chunk_fu_112_ap_done;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire   [2:0] d_chunk_V_fu_155_p1;
reg   [2:0] d_chunk_V_reg_362;
reg   [2:0] p_Result_2_reg_367;
reg   [2:0] p_Result_21_1_reg_372;
reg   [2:0] p_Result_21_2_reg_377;
reg   [2:0] p_Result_21_3_reg_382;
reg   [2:0] p_Result_21_4_reg_387;
reg   [2:0] p_Result_21_5_reg_392;
reg   [2:0] p_Result_21_6_reg_397;
reg   [2:0] p_Result_21_7_reg_402;
reg   [2:0] p_Result_21_8_reg_407;
reg   [2:0] p_Result_21_9_reg_412;
reg   [2:0] p_Result_21_s_reg_417;
reg   [2:0] p_Result_21_10_reg_422;
reg   [2:0] p_Result_21_11_reg_427;
reg   [2:0] p_Result_21_12_reg_432;
reg   [2:0] p_Result_21_13_reg_437;
reg   [2:0] p_Result_21_14_reg_442;
reg   [2:0] p_Result_21_15_reg_447;
wire   [2:0] tmp_1_fu_330_p1;
reg   [2:0] tmp_1_reg_452;
wire   [1:0] tmp_fu_334_p1;
reg   [1:0] tmp_reg_457;
reg   [2:0] q_chunk_V_reg_462;
reg   [2:0] q_chunk_V_1_reg_467;
reg   [2:0] q_chunk_V_2_reg_472;
reg   [2:0] q_chunk_V_3_reg_477;
reg   [2:0] q_chunk_V_4_reg_482;
reg   [2:0] q_chunk_V_5_reg_487;
reg   [2:0] q_chunk_V_6_reg_492;
reg   [2:0] q_chunk_V_7_reg_497;
reg   [2:0] q_chunk_V_8_reg_502;
reg   [2:0] q_chunk_V_9_reg_507;
reg   [2:0] q_chunk_V_11_reg_512;
reg   [2:0] q_chunk_V_12_reg_517;
reg   [2:0] q_chunk_V_13_reg_522;
reg   [2:0] q_chunk_V_14_reg_527;
reg   [2:0] q_chunk_V_15_reg_532;
reg   [2:0] q_chunk_V_16_reg_537;
reg   [2:0] q_chunk_V_17_reg_542;
wire    grp_lut_div5_chunk_fu_112_ap_start;
reg   [2:0] grp_lut_div5_chunk_fu_112_d_V;
reg   [2:0] grp_lut_div5_chunk_fu_112_r_in_V;
wire   [2:0] grp_lut_div5_chunk_fu_112_ap_return_0;
wire   [2:0] grp_lut_div5_chunk_fu_112_ap_return_1;
reg    grp_lut_div5_chunk_fu_112_ap_start_reg;
wire    ap_CS_fsm_state20;
wire   [1:0] p_Result_s_fu_145_p4;
reg   [19:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 grp_lut_div5_chunk_fu_112_ap_start_reg = 1'b0;
end

lut_div5_chunk grp_lut_div5_chunk_fu_112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lut_div5_chunk_fu_112_ap_start),
    .ap_done(grp_lut_div5_chunk_fu_112_ap_done),
    .ap_idle(grp_lut_div5_chunk_fu_112_ap_idle),
    .ap_ready(grp_lut_div5_chunk_fu_112_ap_ready),
    .d_V(grp_lut_div5_chunk_fu_112_d_V),
    .r_in_V(grp_lut_div5_chunk_fu_112_r_in_V),
    .ap_return_0(grp_lut_div5_chunk_fu_112_ap_return_0),
    .ap_return_1(grp_lut_div5_chunk_fu_112_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lut_div5_chunk_fu_112_ap_start_reg <= 1'b0;
    end else begin
        if ((((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_lut_div5_chunk_fu_112_ap_start_reg <= 1'b1;
        end else if ((grp_lut_div5_chunk_fu_112_ap_ready == 1'b1)) begin
            grp_lut_div5_chunk_fu_112_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        d_chunk_V_reg_362[1 : 0] <= d_chunk_V_fu_155_p1[1 : 0];
        p_Result_21_10_reg_422 <= {{in_V[20:18]}};
        p_Result_21_11_reg_427 <= {{in_V[17:15]}};
        p_Result_21_12_reg_432 <= {{in_V[14:12]}};
        p_Result_21_13_reg_437 <= {{in_V[11:9]}};
        p_Result_21_14_reg_442 <= {{in_V[8:6]}};
        p_Result_21_15_reg_447 <= {{in_V[5:3]}};
        p_Result_21_1_reg_372 <= {{in_V[50:48]}};
        p_Result_21_2_reg_377 <= {{in_V[47:45]}};
        p_Result_21_3_reg_382 <= {{in_V[44:42]}};
        p_Result_21_4_reg_387 <= {{in_V[41:39]}};
        p_Result_21_5_reg_392 <= {{in_V[38:36]}};
        p_Result_21_6_reg_397 <= {{in_V[35:33]}};
        p_Result_21_7_reg_402 <= {{in_V[32:30]}};
        p_Result_21_8_reg_407 <= {{in_V[29:27]}};
        p_Result_21_9_reg_412 <= {{in_V[26:24]}};
        p_Result_21_s_reg_417 <= {{in_V[23:21]}};
        p_Result_2_reg_367 <= {{in_V[53:51]}};
        tmp_1_reg_452 <= tmp_1_fu_330_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        q_chunk_V_11_reg_512 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        q_chunk_V_12_reg_517 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        q_chunk_V_13_reg_522 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        q_chunk_V_14_reg_527 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        q_chunk_V_15_reg_532 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        q_chunk_V_16_reg_537 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        q_chunk_V_17_reg_542 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        q_chunk_V_1_reg_467 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        q_chunk_V_2_reg_472 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        q_chunk_V_3_reg_477 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        q_chunk_V_4_reg_482 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        q_chunk_V_5_reg_487 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        q_chunk_V_6_reg_492 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        q_chunk_V_7_reg_497 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        q_chunk_V_8_reg_502 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        q_chunk_V_9_reg_507 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        q_chunk_V_reg_462 <= grp_lut_div5_chunk_fu_112_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_140 <= grp_lut_div5_chunk_fu_112_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_457 <= tmp_fu_334_p1;
    end
end

always @ (*) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_lut_div5_chunk_fu_112_d_V = tmp_1_reg_452;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_15_reg_447;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_14_reg_442;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_13_reg_437;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_12_reg_432;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_11_reg_427;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_10_reg_422;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_s_reg_417;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_9_reg_412;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_8_reg_407;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_7_reg_402;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_6_reg_397;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_5_reg_392;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_4_reg_387;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_3_reg_382;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_2_reg_377;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_21_1_reg_372;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_lut_div5_chunk_fu_112_d_V = p_Result_2_reg_367;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_lut_div5_chunk_fu_112_d_V = d_chunk_V_reg_362;
    end else begin
        grp_lut_div5_chunk_fu_112_d_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_lut_div5_chunk_fu_112_r_in_V = reg_140;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_lut_div5_chunk_fu_112_r_in_V = 3'd0;
    end else begin
        grp_lut_div5_chunk_fu_112_r_in_V = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((grp_lut_div5_chunk_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = {{{{{{{{{{{{{{{{{{{tmp_reg_457}, {q_chunk_V_reg_462}}, {q_chunk_V_1_reg_467}}, {q_chunk_V_2_reg_472}}, {q_chunk_V_3_reg_477}}, {q_chunk_V_4_reg_482}}, {q_chunk_V_5_reg_487}}, {q_chunk_V_6_reg_492}}, {q_chunk_V_7_reg_497}}, {q_chunk_V_8_reg_502}}, {q_chunk_V_9_reg_507}}, {q_chunk_V_11_reg_512}}, {q_chunk_V_12_reg_517}}, {q_chunk_V_13_reg_522}}, {q_chunk_V_14_reg_527}}, {q_chunk_V_15_reg_532}}, {q_chunk_V_16_reg_537}}, {q_chunk_V_17_reg_542}}, {grp_lut_div5_chunk_fu_112_ap_return_0}};

assign d_chunk_V_fu_155_p1 = p_Result_s_fu_145_p4;

assign grp_lut_div5_chunk_fu_112_ap_start = grp_lut_div5_chunk_fu_112_ap_start_reg;

assign p_Result_s_fu_145_p4 = {{in_V[55:54]}};

assign tmp_1_fu_330_p1 = in_V[2:0];

assign tmp_fu_334_p1 = grp_lut_div5_chunk_fu_112_ap_return_0[1:0];

always @ (posedge ap_clk) begin
    d_chunk_V_reg_362[2] <= 1'b0;
end

endmodule //int_56_div5
