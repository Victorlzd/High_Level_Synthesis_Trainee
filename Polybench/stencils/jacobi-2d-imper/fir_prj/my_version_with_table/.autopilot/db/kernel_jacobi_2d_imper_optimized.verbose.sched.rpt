

================================================================
== Vivado HLS Report for 'kernel_jacobi_2d_imper_optimized'
================================================================
* Date:           Thu Aug 23 10:03:56 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        fir_prj
* Solution:       my_version_with_table
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     9.839|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----------+------------+-----------+------------+---------+
    |         Latency        |        Interval        | Pipeline|
    |    min    |     max    |    min    |     max    |   Type  |
    +-----------+------------+-----------+------------+---------+
    |  677362621|  1792887101|  677362621|  1792887101|   none  |
    +-----------+------------+-----------+------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----------+------------+---------------------+-----------+-----------+------+----------+
        |                 |         Latency        |      Iteration      |  Initiation Interval  | Trip |          |
        |    Loop Name    |    min    |     max    |       Latency       |  achieved |   target  | Count| Pipelined|
        +-----------------+-----------+------------+---------------------+-----------+-----------+------+----------+
        |- Loop 1         |  677362620|  1792887100| 33868131 ~ 89644355 |          -|          -|    20|    no    |
        | + Loop 1.1      |   25898100|    25898100|                25950|          -|          -|   998|    no    |
        |  ++ Loop 1.1.1  |      25948|       25948|                   26|          -|          -|   998|    no    |
        | + Loop 1.2      |    7970028|    63746252|     7986 ~ 63874    |          -|          -|   998|    no    |
        |  ++ Loop 1.2.1  |       7984|       63872|        8 ~ 64       |          -|          -|   998|    no    |
        +-----------------+-----------+------------+---------------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 37
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond4)
3 --> 
	4  / (!exitcond3)
	30  / (exitcond3)
4 --> 
	5  / (!exitcond2)
	3  / (exitcond2)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	4  / true
30 --> 
	31  / (!exitcond1)
	2  / (exitcond1)
31 --> 
	32  / (!exitcond)
	30  / (exitcond)
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	31  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %tsteps) nounwind, !map !192"   --->   Operation 38 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %n) nounwind, !map !198"   --->   Operation 39 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1000000 x double]* %A) nounwind, !map !202"   --->   Operation 40 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1000000 x double]* %B) nounwind, !map !208"   --->   Operation 41 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([33 x i8]* @kernel_jacobi_2d_imp) nounwind"   --->   Operation 42 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (1.06ns)   --->   "br label %.loopexit" [jacobi-2d-imper.cpp:203]   --->   Operation 43 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 1.33>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%t = phi i5 [ 0, %0 ], [ %t_1, %.loopexit.loopexit ]"   --->   Operation 44 'phi' 't' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (1.11ns)   --->   "%exitcond4 = icmp eq i5 %t, -12" [jacobi-2d-imper.cpp:203]   --->   Operation 45 'icmp' 'exitcond4' <Predicate = true> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20) nounwind"   --->   Operation 46 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (1.33ns)   --->   "%t_1 = add i5 %t, 1" [jacobi-2d-imper.cpp:203]   --->   Operation 47 'add' 't_1' <Predicate = true> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "br i1 %exitcond4, label %4, label %.preheader7.preheader" [jacobi-2d-imper.cpp:203]   --->   Operation 48 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (1.06ns)   --->   "br label %.preheader7" [jacobi-2d-imper.cpp:205]   --->   Operation 49 'br' <Predicate = (!exitcond4)> <Delay = 1.06>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "ret void" [jacobi-2d-imper.cpp:214]   --->   Operation 50 'ret' <Predicate = (exitcond4)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.20>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%i = phi i10 [ %i_2, %.preheader7.loopexit ], [ 1, %.preheader7.preheader ]"   --->   Operation 51 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (1.29ns)   --->   "%exitcond3 = icmp eq i10 %i, -25" [jacobi-2d-imper.cpp:205]   --->   Operation 52 'icmp' 'exitcond3' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 998, i64 998, i64 998) nounwind"   --->   Operation 53 'speclooptripcount' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "br i1 %exitcond3, label %.preheader5.preheader, label %.preheader6.preheader" [jacobi-2d-imper.cpp:205]   --->   Operation 54 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_cast = zext i10 %i to i20" [jacobi-2d-imper.cpp:207]   --->   Operation 55 'zext' 'tmp_cast' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (5.79ns)   --->   "%tmp_s = mul i20 %tmp_cast, 1000" [jacobi-2d-imper.cpp:207]   --->   Operation 56 'mul' 'tmp_s' <Predicate = (!exitcond3)> <Delay = 5.79> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 57 [1/1] (1.41ns)   --->   "%i_2 = add i10 %i, 1" [jacobi-2d-imper.cpp:207]   --->   Operation 57 'add' 'i_2' <Predicate = (!exitcond3)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_cast_12 = zext i10 %i_2 to i20" [jacobi-2d-imper.cpp:207]   --->   Operation 58 'zext' 'tmp_cast_12' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (5.79ns)   --->   "%tmp_2 = mul i20 %tmp_cast_12, 1000" [jacobi-2d-imper.cpp:207]   --->   Operation 59 'mul' 'tmp_2' <Predicate = (!exitcond3)> <Delay = 5.79> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 60 [1/1] (1.41ns)   --->   "%tmp_4 = add i10 %i, -1" [jacobi-2d-imper.cpp:207]   --->   Operation 60 'add' 'tmp_4' <Predicate = (!exitcond3)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_5_cast = zext i10 %tmp_4 to i20" [jacobi-2d-imper.cpp:207]   --->   Operation 61 'zext' 'tmp_5_cast' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (5.79ns)   --->   "%tmp_5 = mul i20 %tmp_5_cast, 1000" [jacobi-2d-imper.cpp:207]   --->   Operation 62 'mul' 'tmp_5' <Predicate = (!exitcond3)> <Delay = 5.79> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 63 [1/1] (1.06ns)   --->   "br label %.preheader6" [jacobi-2d-imper.cpp:206]   --->   Operation 63 'br' <Predicate = (!exitcond3)> <Delay = 1.06>
ST_3 : Operation 64 [1/1] (1.06ns)   --->   "br label %.preheader5" [jacobi-2d-imper.cpp:208]   --->   Operation 64 'br' <Predicate = (exitcond3)> <Delay = 1.06>

State 4 <SV = 3> <Delay = 5.64>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%j = phi i10 [ %j_2, %1 ], [ 1, %.preheader6.preheader ]"   --->   Operation 65 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (1.29ns)   --->   "%exitcond2 = icmp eq i10 %j, -25" [jacobi-2d-imper.cpp:206]   --->   Operation 66 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 998, i64 998, i64 998) nounwind"   --->   Operation 67 'speclooptripcount' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %.preheader7.loopexit, label %1" [jacobi-2d-imper.cpp:206]   --->   Operation 68 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_7_cast = zext i10 %j to i20" [jacobi-2d-imper.cpp:207]   --->   Operation 69 'zext' 'tmp_7_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (1.56ns)   --->   "%tmp_7 = add i20 %tmp_s, %tmp_7_cast" [jacobi-2d-imper.cpp:207]   --->   Operation 70 'add' 'tmp_7' <Predicate = (!exitcond2)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_18_cast = zext i20 %tmp_7 to i64" [jacobi-2d-imper.cpp:207]   --->   Operation 71 'zext' 'tmp_18_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_18_cast" [jacobi-2d-imper.cpp:207]   --->   Operation 72 'getelementptr' 'A_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (1.56ns)   --->   "%tmp_9 = add i20 %tmp_2, %tmp_7_cast" [jacobi-2d-imper.cpp:207]   --->   Operation 73 'add' 'tmp_9' <Predicate = (!exitcond2)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (1.56ns)   --->   "%tmp_12 = add i20 %tmp_5, %tmp_7_cast" [jacobi-2d-imper.cpp:207]   --->   Operation 74 'add' 'tmp_12' <Predicate = (!exitcond2)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 75 [4/4] (2.66ns)   --->   "%A_load = load double* %A_addr, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 75 'load' 'A_load' <Predicate = (!exitcond2)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_4 : Operation 76 [1/1] (1.41ns)   --->   "%tmp_8 = add i10 %j, -1" [jacobi-2d-imper.cpp:207]   --->   Operation 76 'add' 'tmp_8' <Predicate = (!exitcond2)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_9_cast = zext i10 %tmp_8 to i20" [jacobi-2d-imper.cpp:207]   --->   Operation 77 'zext' 'tmp_9_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (1.56ns)   --->   "%tmp_14 = add i20 %tmp_s, %tmp_9_cast" [jacobi-2d-imper.cpp:207]   --->   Operation 78 'add' 'tmp_14' <Predicate = (!exitcond2)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_21_cast = zext i20 %tmp_14 to i64" [jacobi-2d-imper.cpp:207]   --->   Operation 79 'zext' 'tmp_21_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_21_cast" [jacobi-2d-imper.cpp:207]   --->   Operation 80 'getelementptr' 'A_addr_1' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 81 [4/4] (2.66ns)   --->   "%A_load_1 = load double* %A_addr_1, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 81 'load' 'A_load_1' <Predicate = (!exitcond2)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_4 : Operation 82 [1/1] (1.41ns)   --->   "%j_2 = add i10 %j, 1" [jacobi-2d-imper.cpp:207]   --->   Operation 82 'add' 'j_2' <Predicate = (!exitcond2)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_2_cast = zext i10 %j_2 to i20" [jacobi-2d-imper.cpp:207]   --->   Operation 83 'zext' 'tmp_2_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (1.56ns)   --->   "%tmp_15 = add i20 %tmp_s, %tmp_2_cast" [jacobi-2d-imper.cpp:207]   --->   Operation 84 'add' 'tmp_15' <Predicate = (!exitcond2)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "br label %.preheader7"   --->   Operation 85 'br' <Predicate = (exitcond2)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.66>
ST_5 : Operation 86 [3/4] (2.66ns)   --->   "%A_load = load double* %A_addr, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 86 'load' 'A_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_5 : Operation 87 [3/4] (2.66ns)   --->   "%A_load_1 = load double* %A_addr_1, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 87 'load' 'A_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 6 <SV = 5> <Delay = 2.66>
ST_6 : Operation 88 [2/4] (2.66ns)   --->   "%A_load = load double* %A_addr, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 88 'load' 'A_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_6 : Operation 89 [2/4] (2.66ns)   --->   "%A_load_1 = load double* %A_addr_1, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 89 'load' 'A_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 7 <SV = 6> <Delay = 2.66>
ST_7 : Operation 90 [1/4] (2.66ns)   --->   "%A_load = load double* %A_addr, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 90 'load' 'A_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_7 : Operation 91 [1/4] (2.66ns)   --->   "%A_load_1 = load double* %A_addr_1, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 91 'load' 'A_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 8 <SV = 7> <Delay = 6.91>
ST_8 : Operation 92 [5/5] (6.91ns)   --->   "%tmp_1 = fadd double %A_load, %A_load_1" [jacobi-2d-imper.cpp:207]   --->   Operation 92 'dadd' 'tmp_1' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.91>
ST_9 : Operation 93 [4/5] (6.91ns)   --->   "%tmp_1 = fadd double %A_load, %A_load_1" [jacobi-2d-imper.cpp:207]   --->   Operation 93 'dadd' 'tmp_1' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_22_cast = zext i20 %tmp_15 to i64" [jacobi-2d-imper.cpp:207]   --->   Operation 94 'zext' 'tmp_22_cast' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 95 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_22_cast" [jacobi-2d-imper.cpp:207]   --->   Operation 95 'getelementptr' 'A_addr_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 96 [4/4] (2.66ns)   --->   "%A_load_2 = load double* %A_addr_2, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 96 'load' 'A_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 10 <SV = 9> <Delay = 6.91>
ST_10 : Operation 97 [3/5] (6.91ns)   --->   "%tmp_1 = fadd double %A_load, %A_load_1" [jacobi-2d-imper.cpp:207]   --->   Operation 97 'dadd' 'tmp_1' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 98 [3/4] (2.66ns)   --->   "%A_load_2 = load double* %A_addr_2, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 98 'load' 'A_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 11 <SV = 10> <Delay = 6.91>
ST_11 : Operation 99 [2/5] (6.91ns)   --->   "%tmp_1 = fadd double %A_load, %A_load_1" [jacobi-2d-imper.cpp:207]   --->   Operation 99 'dadd' 'tmp_1' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 100 [2/4] (2.66ns)   --->   "%A_load_2 = load double* %A_addr_2, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 100 'load' 'A_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 12 <SV = 11> <Delay = 6.91>
ST_12 : Operation 101 [1/5] (6.91ns)   --->   "%tmp_1 = fadd double %A_load, %A_load_1" [jacobi-2d-imper.cpp:207]   --->   Operation 101 'dadd' 'tmp_1' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 102 [1/4] (2.66ns)   --->   "%A_load_2 = load double* %A_addr_2, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 102 'load' 'A_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 13 <SV = 12> <Delay = 6.91>
ST_13 : Operation 103 [5/5] (6.91ns)   --->   "%tmp_3 = fadd double %tmp_1, %A_load_2" [jacobi-2d-imper.cpp:207]   --->   Operation 103 'dadd' 'tmp_3' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.91>
ST_14 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_19_cast = zext i20 %tmp_9 to i64" [jacobi-2d-imper.cpp:207]   --->   Operation 104 'zext' 'tmp_19_cast' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 105 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_19_cast" [jacobi-2d-imper.cpp:207]   --->   Operation 105 'getelementptr' 'A_addr_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 106 [4/5] (6.91ns)   --->   "%tmp_3 = fadd double %tmp_1, %A_load_2" [jacobi-2d-imper.cpp:207]   --->   Operation 106 'dadd' 'tmp_3' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 107 [4/4] (2.66ns)   --->   "%A_load_3 = load double* %A_addr_3, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 107 'load' 'A_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 15 <SV = 14> <Delay = 6.91>
ST_15 : Operation 108 [3/5] (6.91ns)   --->   "%tmp_3 = fadd double %tmp_1, %A_load_2" [jacobi-2d-imper.cpp:207]   --->   Operation 108 'dadd' 'tmp_3' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 109 [3/4] (2.66ns)   --->   "%A_load_3 = load double* %A_addr_3, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 109 'load' 'A_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 16 <SV = 15> <Delay = 6.91>
ST_16 : Operation 110 [2/5] (6.91ns)   --->   "%tmp_3 = fadd double %tmp_1, %A_load_2" [jacobi-2d-imper.cpp:207]   --->   Operation 110 'dadd' 'tmp_3' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 111 [2/4] (2.66ns)   --->   "%A_load_3 = load double* %A_addr_3, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 111 'load' 'A_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 17 <SV = 16> <Delay = 6.91>
ST_17 : Operation 112 [1/5] (6.91ns)   --->   "%tmp_3 = fadd double %tmp_1, %A_load_2" [jacobi-2d-imper.cpp:207]   --->   Operation 112 'dadd' 'tmp_3' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 113 [1/4] (2.66ns)   --->   "%A_load_3 = load double* %A_addr_3, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 113 'load' 'A_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 18 <SV = 17> <Delay = 6.91>
ST_18 : Operation 114 [5/5] (6.91ns)   --->   "%tmp_10 = fadd double %tmp_3, %A_load_3" [jacobi-2d-imper.cpp:207]   --->   Operation 114 'dadd' 'tmp_10' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 6.91>
ST_19 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_20_cast = zext i20 %tmp_12 to i64" [jacobi-2d-imper.cpp:207]   --->   Operation 115 'zext' 'tmp_20_cast' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 116 [1/1] (0.00ns)   --->   "%A_addr_4 = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_20_cast" [jacobi-2d-imper.cpp:207]   --->   Operation 116 'getelementptr' 'A_addr_4' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 117 [4/5] (6.91ns)   --->   "%tmp_10 = fadd double %tmp_3, %A_load_3" [jacobi-2d-imper.cpp:207]   --->   Operation 117 'dadd' 'tmp_10' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 118 [4/4] (2.66ns)   --->   "%A_load_4 = load double* %A_addr_4, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 118 'load' 'A_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 20 <SV = 19> <Delay = 6.91>
ST_20 : Operation 119 [3/5] (6.91ns)   --->   "%tmp_10 = fadd double %tmp_3, %A_load_3" [jacobi-2d-imper.cpp:207]   --->   Operation 119 'dadd' 'tmp_10' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 120 [3/4] (2.66ns)   --->   "%A_load_4 = load double* %A_addr_4, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 120 'load' 'A_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 21 <SV = 20> <Delay = 6.91>
ST_21 : Operation 121 [2/5] (6.91ns)   --->   "%tmp_10 = fadd double %tmp_3, %A_load_3" [jacobi-2d-imper.cpp:207]   --->   Operation 121 'dadd' 'tmp_10' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 122 [2/4] (2.66ns)   --->   "%A_load_4 = load double* %A_addr_4, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 122 'load' 'A_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 22 <SV = 21> <Delay = 6.91>
ST_22 : Operation 123 [1/5] (6.91ns)   --->   "%tmp_10 = fadd double %tmp_3, %A_load_3" [jacobi-2d-imper.cpp:207]   --->   Operation 123 'dadd' 'tmp_10' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 124 [1/4] (2.66ns)   --->   "%A_load_4 = load double* %A_addr_4, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 124 'load' 'A_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 23 <SV = 22> <Delay = 6.91>
ST_23 : Operation 125 [5/5] (6.91ns)   --->   "%tmp_11 = fadd double %tmp_10, %A_load_4" [jacobi-2d-imper.cpp:207]   --->   Operation 125 'dadd' 'tmp_11' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 6.91>
ST_24 : Operation 126 [4/5] (6.91ns)   --->   "%tmp_11 = fadd double %tmp_10, %A_load_4" [jacobi-2d-imper.cpp:207]   --->   Operation 126 'dadd' 'tmp_11' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 6.91>
ST_25 : Operation 127 [3/5] (6.91ns)   --->   "%tmp_11 = fadd double %tmp_10, %A_load_4" [jacobi-2d-imper.cpp:207]   --->   Operation 127 'dadd' 'tmp_11' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 6.91>
ST_26 : Operation 128 [2/5] (6.91ns)   --->   "%tmp_11 = fadd double %tmp_10, %A_load_4" [jacobi-2d-imper.cpp:207]   --->   Operation 128 'dadd' 'tmp_11' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 6.91>
ST_27 : Operation 129 [1/5] (6.91ns)   --->   "%tmp_11 = fadd double %tmp_10, %A_load_4" [jacobi-2d-imper.cpp:207]   --->   Operation 129 'dadd' 'tmp_11' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 2.66>
ST_28 : Operation 130 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [1000000 x double]* %B, i64 0, i64 %tmp_18_cast" [jacobi-2d-imper.cpp:207]   --->   Operation 130 'getelementptr' 'B_addr' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 131 [2/2] (2.66ns)   --->   "store double %tmp_11, double* %B_addr, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 131 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 29 <SV = 28> <Delay = 2.66>
ST_29 : Operation 132 [1/2] (2.66ns)   --->   "store double %tmp_11, double* %B_addr, align 8" [jacobi-2d-imper.cpp:207]   --->   Operation 132 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_29 : Operation 133 [1/1] (0.00ns)   --->   "br label %.preheader6" [jacobi-2d-imper.cpp:206]   --->   Operation 133 'br' <Predicate = true> <Delay = 0.00>

State 30 <SV = 3> <Delay = 5.79>
ST_30 : Operation 134 [1/1] (0.00ns)   --->   "%i_1 = phi i10 [ %i_3, %3 ], [ 1, %.preheader5.preheader ]"   --->   Operation 134 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 135 [1/1] (1.29ns)   --->   "%exitcond1 = icmp eq i10 %i_1, -25" [jacobi-2d-imper.cpp:208]   --->   Operation 135 'icmp' 'exitcond1' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 136 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 998, i64 998, i64 998) nounwind"   --->   Operation 136 'speclooptripcount' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 137 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %.loopexit.loopexit, label %.preheader.preheader" [jacobi-2d-imper.cpp:208]   --->   Operation 137 'br' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 138 [1/1] (0.00ns)   --->   "%tmp_6_cast = zext i10 %i_1 to i20" [jacobi-2d-imper.cpp:210]   --->   Operation 138 'zext' 'tmp_6_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_30 : Operation 139 [1/1] (5.79ns)   --->   "%tmp_6 = mul i20 %tmp_6_cast, 1000" [jacobi-2d-imper.cpp:210]   --->   Operation 139 'mul' 'tmp_6' <Predicate = (!exitcond1)> <Delay = 5.79> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_30 : Operation 140 [1/1] (1.06ns)   --->   "br label %.preheader" [jacobi-2d-imper.cpp:209]   --->   Operation 140 'br' <Predicate = (!exitcond1)> <Delay = 1.06>
ST_30 : Operation 141 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 141 'br' <Predicate = (exitcond1)> <Delay = 0.00>

State 31 <SV = 4> <Delay = 4.22>
ST_31 : Operation 142 [1/1] (0.00ns)   --->   "%j_1 = phi i10 [ %j_3, %2 ], [ 1, %.preheader.preheader ]"   --->   Operation 142 'phi' 'j_1' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 143 [1/1] (1.29ns)   --->   "%exitcond = icmp eq i10 %j_1, -25" [jacobi-2d-imper.cpp:209]   --->   Operation 143 'icmp' 'exitcond' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 144 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 998, i64 998, i64 998) nounwind"   --->   Operation 144 'speclooptripcount' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 145 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %3, label %2" [jacobi-2d-imper.cpp:209]   --->   Operation 145 'br' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 146 [1/1] (0.00ns)   --->   "%tmp_12_cast = zext i10 %j_1 to i20" [jacobi-2d-imper.cpp:210]   --->   Operation 146 'zext' 'tmp_12_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_31 : Operation 147 [1/1] (1.56ns)   --->   "%tmp_16 = add i20 %tmp_6, %tmp_12_cast" [jacobi-2d-imper.cpp:210]   --->   Operation 147 'add' 'tmp_16' <Predicate = (!exitcond)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_23_cast = zext i20 %tmp_16 to i64" [jacobi-2d-imper.cpp:210]   --->   Operation 148 'zext' 'tmp_23_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_31 : Operation 149 [1/1] (0.00ns)   --->   "%B_addr_1 = getelementptr [1000000 x double]* %B, i64 0, i64 %tmp_23_cast" [jacobi-2d-imper.cpp:210]   --->   Operation 149 'getelementptr' 'B_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_31 : Operation 150 [4/4] (2.66ns)   --->   "%B_load = load double* %B_addr_1, align 8" [jacobi-2d-imper.cpp:210]   --->   Operation 150 'load' 'B_load' <Predicate = (!exitcond)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_31 : Operation 151 [1/1] (1.41ns)   --->   "%j_3 = add i10 %j_1, 1" [jacobi-2d-imper.cpp:209]   --->   Operation 151 'add' 'j_3' <Predicate = (!exitcond)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 152 [1/1] (1.41ns)   --->   "%i_3 = add i10 %i_1, 1" [jacobi-2d-imper.cpp:208]   --->   Operation 152 'add' 'i_3' <Predicate = (exitcond)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 153 [1/1] (0.00ns)   --->   "br label %.preheader5" [jacobi-2d-imper.cpp:208]   --->   Operation 153 'br' <Predicate = (exitcond)> <Delay = 0.00>

State 32 <SV = 5> <Delay = 2.66>
ST_32 : Operation 154 [3/4] (2.66ns)   --->   "%B_load = load double* %B_addr_1, align 8" [jacobi-2d-imper.cpp:210]   --->   Operation 154 'load' 'B_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 33 <SV = 6> <Delay = 2.66>
ST_33 : Operation 155 [2/4] (2.66ns)   --->   "%B_load = load double* %B_addr_1, align 8" [jacobi-2d-imper.cpp:210]   --->   Operation 155 'load' 'B_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 34 <SV = 7> <Delay = 2.66>
ST_34 : Operation 156 [1/4] (2.66ns)   --->   "%B_load = load double* %B_addr_1, align 8" [jacobi-2d-imper.cpp:210]   --->   Operation 156 'load' 'B_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 35 <SV = 8> <Delay = 6.81>
ST_35 : Operation 157 [2/2] (6.81ns)   --->   "%tmp_13 = call fastcc double @operator_double_div5(double %B_load)" [jacobi-2d-imper.cpp:210]   --->   Operation 157 'call' 'tmp_13' <Predicate = true> <Delay = 6.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 36 <SV = 9> <Delay = 6.38>
ST_36 : Operation 158 [1/1] (0.00ns)   --->   "%A_addr_5 = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_23_cast" [jacobi-2d-imper.cpp:210]   --->   Operation 158 'getelementptr' 'A_addr_5' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 159 [1/2] (3.72ns)   --->   "%tmp_13 = call fastcc double @operator_double_div5(double %B_load)" [jacobi-2d-imper.cpp:210]   --->   Operation 159 'call' 'tmp_13' <Predicate = true> <Delay = 3.72> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_36 : Operation 160 [2/2] (2.66ns)   --->   "store double %tmp_13, double* %A_addr_5, align 8" [jacobi-2d-imper.cpp:210]   --->   Operation 160 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 37 <SV = 10> <Delay = 2.66>
ST_37 : Operation 161 [1/2] (2.66ns)   --->   "store double %tmp_13, double* %A_addr_5, align 8" [jacobi-2d-imper.cpp:210]   --->   Operation 161 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_37 : Operation 162 [1/1] (0.00ns)   --->   "br label %.preheader" [jacobi-2d-imper.cpp:209]   --->   Operation 162 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('t') with incoming values : ('t', jacobi-2d-imper.cpp:203) [18]  (1.06 ns)

 <State 2>: 1.34ns
The critical path consists of the following:
	'phi' operation ('t') with incoming values : ('t', jacobi-2d-imper.cpp:203) [18]  (0 ns)
	'add' operation ('t', jacobi-2d-imper.cpp:203) [21]  (1.34 ns)

 <State 3>: 7.21ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', jacobi-2d-imper.cpp:207) [26]  (0 ns)
	'add' operation ('i', jacobi-2d-imper.cpp:207) [33]  (1.42 ns)
	'mul' operation ('tmp_2', jacobi-2d-imper.cpp:207) [35]  (5.79 ns)

 <State 4>: 5.64ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', jacobi-2d-imper.cpp:207) [41]  (0 ns)
	'add' operation ('tmp_8', jacobi-2d-imper.cpp:207) [58]  (1.42 ns)
	'add' operation ('tmp_14', jacobi-2d-imper.cpp:207) [60]  (1.56 ns)
	'getelementptr' operation ('A_addr_1', jacobi-2d-imper.cpp:207) [62]  (0 ns)
	'load' operation ('A_load_1', jacobi-2d-imper.cpp:207) on array 'A' [63]  (2.66 ns)

 <State 5>: 2.66ns
The critical path consists of the following:
	'load' operation ('A_load', jacobi-2d-imper.cpp:207) on array 'A' [57]  (2.66 ns)

 <State 6>: 2.66ns
The critical path consists of the following:
	'load' operation ('A_load', jacobi-2d-imper.cpp:207) on array 'A' [57]  (2.66 ns)

 <State 7>: 2.66ns
The critical path consists of the following:
	'load' operation ('A_load', jacobi-2d-imper.cpp:207) on array 'A' [57]  (2.66 ns)

 <State 8>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_1', jacobi-2d-imper.cpp:207) [64]  (6.92 ns)

 <State 9>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_1', jacobi-2d-imper.cpp:207) [64]  (6.92 ns)

 <State 10>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_1', jacobi-2d-imper.cpp:207) [64]  (6.92 ns)

 <State 11>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_1', jacobi-2d-imper.cpp:207) [64]  (6.92 ns)

 <State 12>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_1', jacobi-2d-imper.cpp:207) [64]  (6.92 ns)

 <State 13>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_3', jacobi-2d-imper.cpp:207) [71]  (6.92 ns)

 <State 14>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_3', jacobi-2d-imper.cpp:207) [71]  (6.92 ns)

 <State 15>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_3', jacobi-2d-imper.cpp:207) [71]  (6.92 ns)

 <State 16>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_3', jacobi-2d-imper.cpp:207) [71]  (6.92 ns)

 <State 17>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_3', jacobi-2d-imper.cpp:207) [71]  (6.92 ns)

 <State 18>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_10', jacobi-2d-imper.cpp:207) [73]  (6.92 ns)

 <State 19>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_10', jacobi-2d-imper.cpp:207) [73]  (6.92 ns)

 <State 20>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_10', jacobi-2d-imper.cpp:207) [73]  (6.92 ns)

 <State 21>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_10', jacobi-2d-imper.cpp:207) [73]  (6.92 ns)

 <State 22>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_10', jacobi-2d-imper.cpp:207) [73]  (6.92 ns)

 <State 23>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_11', jacobi-2d-imper.cpp:207) [75]  (6.92 ns)

 <State 24>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_11', jacobi-2d-imper.cpp:207) [75]  (6.92 ns)

 <State 25>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_11', jacobi-2d-imper.cpp:207) [75]  (6.92 ns)

 <State 26>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_11', jacobi-2d-imper.cpp:207) [75]  (6.92 ns)

 <State 27>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_11', jacobi-2d-imper.cpp:207) [75]  (6.92 ns)

 <State 28>: 2.66ns
The critical path consists of the following:
	'getelementptr' operation ('B_addr', jacobi-2d-imper.cpp:207) [56]  (0 ns)
	'store' operation (jacobi-2d-imper.cpp:207) of variable 'tmp_11', jacobi-2d-imper.cpp:207 on array 'B' [76]  (2.66 ns)

 <State 29>: 2.66ns
The critical path consists of the following:
	'store' operation (jacobi-2d-imper.cpp:207) of variable 'tmp_11', jacobi-2d-imper.cpp:207 on array 'B' [76]  (2.66 ns)

 <State 30>: 5.79ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', jacobi-2d-imper.cpp:208) [83]  (0 ns)
	'mul' operation ('tmp_6', jacobi-2d-imper.cpp:210) [89]  (5.79 ns)

 <State 31>: 4.23ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', jacobi-2d-imper.cpp:209) [92]  (0 ns)
	'add' operation ('tmp_16', jacobi-2d-imper.cpp:210) [98]  (1.56 ns)
	'getelementptr' operation ('B_addr_1', jacobi-2d-imper.cpp:210) [101]  (0 ns)
	'load' operation ('B_load', jacobi-2d-imper.cpp:210) on array 'B' [102]  (2.66 ns)

 <State 32>: 2.66ns
The critical path consists of the following:
	'load' operation ('B_load', jacobi-2d-imper.cpp:210) on array 'B' [102]  (2.66 ns)

 <State 33>: 2.66ns
The critical path consists of the following:
	'load' operation ('B_load', jacobi-2d-imper.cpp:210) on array 'B' [102]  (2.66 ns)

 <State 34>: 2.66ns
The critical path consists of the following:
	'load' operation ('B_load', jacobi-2d-imper.cpp:210) on array 'B' [102]  (2.66 ns)

 <State 35>: 6.81ns
The critical path consists of the following:
	'call' operation ('tmp_13', jacobi-2d-imper.cpp:210) to 'operator_double_div5' [103]  (6.81 ns)

 <State 36>: 6.39ns
The critical path consists of the following:
	'call' operation ('tmp_13', jacobi-2d-imper.cpp:210) to 'operator_double_div5' [103]  (3.73 ns)
	'store' operation (jacobi-2d-imper.cpp:210) of variable 'tmp_13', jacobi-2d-imper.cpp:210 on array 'A' [104]  (2.66 ns)

 <State 37>: 2.66ns
The critical path consists of the following:
	'store' operation (jacobi-2d-imper.cpp:210) of variable 'tmp_13', jacobi-2d-imper.cpp:210 on array 'A' [104]  (2.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
