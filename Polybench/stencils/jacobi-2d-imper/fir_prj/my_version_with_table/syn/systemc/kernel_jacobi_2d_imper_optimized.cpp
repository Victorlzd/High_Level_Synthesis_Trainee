// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel_jacobi_2d_imper_optimized.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel_jacobi_2d_imper_optimized::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel_jacobi_2d_imper_optimized::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state1 = "1";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state2 = "10";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state3 = "100";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state4 = "1000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state5 = "10000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state6 = "100000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state7 = "1000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state8 = "10000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state9 = "100000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state10 = "1000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state11 = "10000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state12 = "100000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<37> kernel_jacobi_2d_imper_optimized::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_6 = "110";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_B = "1011";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_10 = "10000";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_15 = "10101";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_1A = "11010";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_1 = "1";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_2 = "10";
const sc_lv<1> kernel_jacobi_2d_imper_optimized::ap_const_lv1_0 = "0";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_3 = "11";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_8 = "1000";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_D = "1101";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_12 = "10010";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_1B = "11011";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_1D = "11101";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_1E = "11110";
const sc_lv<1> kernel_jacobi_2d_imper_optimized::ap_const_lv1_1 = "1";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_21 = "100001";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_23 = "100011";
const sc_lv<5> kernel_jacobi_2d_imper_optimized::ap_const_lv5_0 = "00000";
const sc_lv<10> kernel_jacobi_2d_imper_optimized::ap_const_lv10_1 = "1";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_1C = "11100";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_24 = "100100";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_22 = "100010";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_4 = "100";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_5 = "101";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_9 = "1001";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_A = "1010";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_E = "1110";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_F = "1111";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_13 = "10011";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_14 = "10100";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_1F = "11111";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_20 = "100000";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_7 = "111";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_C = "1100";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_11 = "10001";
const sc_lv<32> kernel_jacobi_2d_imper_optimized::ap_const_lv32_16 = "10110";
const sc_lv<5> kernel_jacobi_2d_imper_optimized::ap_const_lv5_14 = "10100";
const sc_lv<5> kernel_jacobi_2d_imper_optimized::ap_const_lv5_1 = "1";
const sc_lv<10> kernel_jacobi_2d_imper_optimized::ap_const_lv10_3E7 = "1111100111";
const sc_lv<10> kernel_jacobi_2d_imper_optimized::ap_const_lv10_3FF = "1111111111";
const sc_lv<20> kernel_jacobi_2d_imper_optimized::ap_const_lv20_3E8 = "1111101000";
const bool kernel_jacobi_2d_imper_optimized::ap_const_boolean_1 = true;

kernel_jacobi_2d_imper_optimized::kernel_jacobi_2d_imper_optimized(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_operator_double_div5_fu_184 = new operator_double_div5("grp_operator_double_div5_fu_184");
    grp_operator_double_div5_fu_184->ap_clk(ap_clk);
    grp_operator_double_div5_fu_184->ap_rst(ap_rst);
    grp_operator_double_div5_fu_184->ap_start(grp_operator_double_div5_fu_184_ap_start);
    grp_operator_double_div5_fu_184->ap_done(grp_operator_double_div5_fu_184_ap_done);
    grp_operator_double_div5_fu_184->ap_idle(grp_operator_double_div5_fu_184_ap_idle);
    grp_operator_double_div5_fu_184->ap_ready(grp_operator_double_div5_fu_184_ap_ready);
    grp_operator_double_div5_fu_184->in_r(B_load_reg_531);
    grp_operator_double_div5_fu_184->ap_return(grp_operator_double_div5_fu_184_ap_return);
    kernel_jacobi_2d_bkb_U10 = new kernel_jacobi_2d_bkb<1,5,64,64,64>("kernel_jacobi_2d_bkb_U10");
    kernel_jacobi_2d_bkb_U10->clk(ap_clk);
    kernel_jacobi_2d_bkb_U10->reset(ap_rst);
    kernel_jacobi_2d_bkb_U10->din0(grp_fu_202_p0);
    kernel_jacobi_2d_bkb_U10->din1(grp_fu_202_p1);
    kernel_jacobi_2d_bkb_U10->ce(ap_var_for_const0);
    kernel_jacobi_2d_bkb_U10->dout(grp_fu_202_p2);
    kernel_jacobi_2d_cud_U11 = new kernel_jacobi_2d_cud<1,1,10,11,20>("kernel_jacobi_2d_cud_U11");
    kernel_jacobi_2d_cud_U11->din0(tmp_s_fu_380_p0);
    kernel_jacobi_2d_cud_U11->din1(tmp_s_fu_380_p1);
    kernel_jacobi_2d_cud_U11->dout(tmp_s_fu_380_p2);
    kernel_jacobi_2d_cud_U12 = new kernel_jacobi_2d_cud<1,1,10,11,20>("kernel_jacobi_2d_cud_U12");
    kernel_jacobi_2d_cud_U12->din0(tmp_2_fu_386_p0);
    kernel_jacobi_2d_cud_U12->din1(tmp_2_fu_386_p1);
    kernel_jacobi_2d_cud_U12->dout(tmp_2_fu_386_p2);
    kernel_jacobi_2d_cud_U13 = new kernel_jacobi_2d_cud<1,1,10,11,20>("kernel_jacobi_2d_cud_U13");
    kernel_jacobi_2d_cud_U13->din0(tmp_5_fu_392_p0);
    kernel_jacobi_2d_cud_U13->din1(tmp_5_fu_392_p1);
    kernel_jacobi_2d_cud_U13->dout(tmp_5_fu_392_p2);
    kernel_jacobi_2d_cud_U14 = new kernel_jacobi_2d_cud<1,1,10,11,20>("kernel_jacobi_2d_cud_U14");
    kernel_jacobi_2d_cud_U14->din0(tmp_6_fu_398_p0);
    kernel_jacobi_2d_cud_U14->din1(tmp_6_fu_398_p1);
    kernel_jacobi_2d_cud_U14->dout(tmp_6_fu_398_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( tmp_18_cast_fu_276_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_22_cast_fu_326_p1 );
    sensitive << ( tmp_20_cast_fu_334_p1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_23_cast_reg_511 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( tmp_21_cast_fu_306_p1 );
    sensitive << ( tmp_19_cast_fu_330_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( grp_operator_double_div5_fu_184_ap_done );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_A_d1);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( grp_operator_double_div5_fu_184_ap_return );

    SC_METHOD(thread_A_we1);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( grp_operator_double_div5_fu_184_ap_done );

    SC_METHOD(thread_B_address0);
    sensitive << ( tmp_18_cast_reg_440 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_23_cast_fu_363_p1 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_B_d0);
    sensitive << ( reg_213 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_B_we0);
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_219_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_219_p2 );

    SC_METHOD(thread_exitcond1_fu_338_p2);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( i_1_reg_161 );

    SC_METHOD(thread_exitcond2_fu_261_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_reg_150 );

    SC_METHOD(thread_exitcond3_fu_231_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_139 );

    SC_METHOD(thread_exitcond4_fu_219_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_reg_128 );

    SC_METHOD(thread_exitcond_fu_348_p2);
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( j_1_reg_173 );

    SC_METHOD(thread_grp_fu_202_p0);
    sensitive << ( reg_206 );
    sensitive << ( reg_213 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_grp_fu_202_p1);
    sensitive << ( reg_206 );
    sensitive << ( A_load_1_reg_475 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_grp_operator_double_div5_fu_184_ap_start);
    sensitive << ( grp_operator_double_div5_fu_184_ap_start_reg );

    SC_METHOD(thread_i_2_fu_241_p2);
    sensitive << ( i_reg_139 );

    SC_METHOD(thread_i_3_fu_374_p2);
    sensitive << ( i_1_reg_161 );

    SC_METHOD(thread_j_2_fu_311_p2);
    sensitive << ( j_reg_150 );

    SC_METHOD(thread_j_3_fu_368_p2);
    sensitive << ( j_1_reg_173 );

    SC_METHOD(thread_t_1_fu_225_p2);
    sensitive << ( t_reg_128 );

    SC_METHOD(thread_tmp_12_cast_fu_354_p1);
    sensitive << ( j_1_reg_173 );

    SC_METHOD(thread_tmp_12_fu_286_p2);
    sensitive << ( tmp_5_reg_432 );
    sensitive << ( tmp_7_cast_fu_267_p1 );

    SC_METHOD(thread_tmp_14_fu_301_p2);
    sensitive << ( tmp_s_reg_415 );
    sensitive << ( tmp_9_cast_fu_297_p1 );

    SC_METHOD(thread_tmp_15_fu_321_p2);
    sensitive << ( tmp_s_reg_415 );
    sensitive << ( tmp_2_cast_fu_317_p1 );

    SC_METHOD(thread_tmp_16_fu_358_p2);
    sensitive << ( tmp_6_reg_503 );
    sensitive << ( tmp_12_cast_fu_354_p1 );

    SC_METHOD(thread_tmp_18_cast_fu_276_p1);
    sensitive << ( tmp_7_fu_271_p2 );

    SC_METHOD(thread_tmp_19_cast_fu_330_p1);
    sensitive << ( tmp_9_reg_450 );

    SC_METHOD(thread_tmp_20_cast_fu_334_p1);
    sensitive << ( tmp_12_reg_455 );

    SC_METHOD(thread_tmp_21_cast_fu_306_p1);
    sensitive << ( tmp_14_fu_301_p2 );

    SC_METHOD(thread_tmp_22_cast_fu_326_p1);
    sensitive << ( tmp_15_reg_470 );

    SC_METHOD(thread_tmp_23_cast_fu_363_p1);
    sensitive << ( tmp_16_fu_358_p2 );

    SC_METHOD(thread_tmp_2_cast_fu_317_p1);
    sensitive << ( j_2_fu_311_p2 );

    SC_METHOD(thread_tmp_2_fu_386_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_2_fu_386_p00 );

    SC_METHOD(thread_tmp_2_fu_386_p00);
    sensitive << ( i_2_fu_241_p2 );

    SC_METHOD(thread_tmp_2_fu_386_p1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_4_fu_251_p2);
    sensitive << ( i_reg_139 );

    SC_METHOD(thread_tmp_5_fu_392_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_5_fu_392_p00 );

    SC_METHOD(thread_tmp_5_fu_392_p00);
    sensitive << ( tmp_4_fu_251_p2 );

    SC_METHOD(thread_tmp_5_fu_392_p1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_6_fu_398_p0);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_6_fu_398_p00 );

    SC_METHOD(thread_tmp_6_fu_398_p00);
    sensitive << ( i_1_reg_161 );

    SC_METHOD(thread_tmp_6_fu_398_p1);
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_tmp_7_cast_fu_267_p1);
    sensitive << ( j_reg_150 );

    SC_METHOD(thread_tmp_7_fu_271_p2);
    sensitive << ( tmp_s_reg_415 );
    sensitive << ( tmp_7_cast_fu_267_p1 );

    SC_METHOD(thread_tmp_8_fu_291_p2);
    sensitive << ( j_reg_150 );

    SC_METHOD(thread_tmp_9_cast_fu_297_p1);
    sensitive << ( tmp_8_fu_291_p2 );

    SC_METHOD(thread_tmp_9_fu_281_p2);
    sensitive << ( tmp_2_reg_427 );
    sensitive << ( tmp_7_cast_fu_267_p1 );

    SC_METHOD(thread_tmp_s_fu_380_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_s_fu_380_p00 );

    SC_METHOD(thread_tmp_s_fu_380_p00);
    sensitive << ( i_reg_139 );

    SC_METHOD(thread_tmp_s_fu_380_p1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_231_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_261_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( exitcond1_fu_338_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( exitcond_fu_348_p2 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( grp_operator_double_div5_fu_184_ap_done );
    sensitive << ( exitcond4_fu_219_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000001";
    grp_operator_double_div5_fu_184_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel_jacobi_2d_imper_optimized_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, tsteps, "(port)tsteps");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_we1, "(port)A_we1");
    sc_trace(mVcdFile, A_d1, "(port)A_d1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_we0, "(port)B_we0");
    sc_trace(mVcdFile, B_d0, "(port)B_d0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_206, "reg_206");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_202_p2, "grp_fu_202_p2");
    sc_trace(mVcdFile, reg_213, "reg_213");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, t_1_fu_225_p2, "t_1_fu_225_p2");
    sc_trace(mVcdFile, t_1_reg_407, "t_1_reg_407");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_s_fu_380_p2, "tmp_s_fu_380_p2");
    sc_trace(mVcdFile, tmp_s_reg_415, "tmp_s_reg_415");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond3_fu_231_p2, "exitcond3_fu_231_p2");
    sc_trace(mVcdFile, i_2_fu_241_p2, "i_2_fu_241_p2");
    sc_trace(mVcdFile, i_2_reg_422, "i_2_reg_422");
    sc_trace(mVcdFile, tmp_2_fu_386_p2, "tmp_2_fu_386_p2");
    sc_trace(mVcdFile, tmp_2_reg_427, "tmp_2_reg_427");
    sc_trace(mVcdFile, tmp_5_fu_392_p2, "tmp_5_fu_392_p2");
    sc_trace(mVcdFile, tmp_5_reg_432, "tmp_5_reg_432");
    sc_trace(mVcdFile, tmp_18_cast_fu_276_p1, "tmp_18_cast_fu_276_p1");
    sc_trace(mVcdFile, tmp_18_cast_reg_440, "tmp_18_cast_reg_440");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond2_fu_261_p2, "exitcond2_fu_261_p2");
    sc_trace(mVcdFile, tmp_9_fu_281_p2, "tmp_9_fu_281_p2");
    sc_trace(mVcdFile, tmp_9_reg_450, "tmp_9_reg_450");
    sc_trace(mVcdFile, tmp_12_fu_286_p2, "tmp_12_fu_286_p2");
    sc_trace(mVcdFile, tmp_12_reg_455, "tmp_12_reg_455");
    sc_trace(mVcdFile, j_2_fu_311_p2, "j_2_fu_311_p2");
    sc_trace(mVcdFile, j_2_reg_465, "j_2_reg_465");
    sc_trace(mVcdFile, tmp_15_fu_321_p2, "tmp_15_fu_321_p2");
    sc_trace(mVcdFile, tmp_15_reg_470, "tmp_15_reg_470");
    sc_trace(mVcdFile, A_load_1_reg_475, "A_load_1_reg_475");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, tmp_6_fu_398_p2, "tmp_6_fu_398_p2");
    sc_trace(mVcdFile, tmp_6_reg_503, "tmp_6_reg_503");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, exitcond1_fu_338_p2, "exitcond1_fu_338_p2");
    sc_trace(mVcdFile, tmp_23_cast_fu_363_p1, "tmp_23_cast_fu_363_p1");
    sc_trace(mVcdFile, tmp_23_cast_reg_511, "tmp_23_cast_reg_511");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, exitcond_fu_348_p2, "exitcond_fu_348_p2");
    sc_trace(mVcdFile, j_3_fu_368_p2, "j_3_fu_368_p2");
    sc_trace(mVcdFile, j_3_reg_521, "j_3_reg_521");
    sc_trace(mVcdFile, i_3_fu_374_p2, "i_3_fu_374_p2");
    sc_trace(mVcdFile, B_load_reg_531, "B_load_reg_531");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, grp_operator_double_div5_fu_184_ap_idle, "grp_operator_double_div5_fu_184_ap_idle");
    sc_trace(mVcdFile, grp_operator_double_div5_fu_184_ap_ready, "grp_operator_double_div5_fu_184_ap_ready");
    sc_trace(mVcdFile, grp_operator_double_div5_fu_184_ap_done, "grp_operator_double_div5_fu_184_ap_done");
    sc_trace(mVcdFile, grp_operator_double_div5_fu_184_ap_return, "grp_operator_double_div5_fu_184_ap_return");
    sc_trace(mVcdFile, grp_operator_double_div5_fu_184_ap_start, "grp_operator_double_div5_fu_184_ap_start");
    sc_trace(mVcdFile, t_reg_128, "t_reg_128");
    sc_trace(mVcdFile, i_reg_139, "i_reg_139");
    sc_trace(mVcdFile, exitcond4_fu_219_p2, "exitcond4_fu_219_p2");
    sc_trace(mVcdFile, j_reg_150, "j_reg_150");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, i_1_reg_161, "i_1_reg_161");
    sc_trace(mVcdFile, j_1_reg_173, "j_1_reg_173");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, grp_operator_double_div5_fu_184_ap_start_reg, "grp_operator_double_div5_fu_184_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, tmp_21_cast_fu_306_p1, "tmp_21_cast_fu_306_p1");
    sc_trace(mVcdFile, tmp_22_cast_fu_326_p1, "tmp_22_cast_fu_326_p1");
    sc_trace(mVcdFile, tmp_19_cast_fu_330_p1, "tmp_19_cast_fu_330_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_334_p1, "tmp_20_cast_fu_334_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, grp_fu_202_p0, "grp_fu_202_p0");
    sc_trace(mVcdFile, grp_fu_202_p1, "grp_fu_202_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_4_fu_251_p2, "tmp_4_fu_251_p2");
    sc_trace(mVcdFile, tmp_7_cast_fu_267_p1, "tmp_7_cast_fu_267_p1");
    sc_trace(mVcdFile, tmp_7_fu_271_p2, "tmp_7_fu_271_p2");
    sc_trace(mVcdFile, tmp_8_fu_291_p2, "tmp_8_fu_291_p2");
    sc_trace(mVcdFile, tmp_9_cast_fu_297_p1, "tmp_9_cast_fu_297_p1");
    sc_trace(mVcdFile, tmp_14_fu_301_p2, "tmp_14_fu_301_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_317_p1, "tmp_2_cast_fu_317_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_354_p1, "tmp_12_cast_fu_354_p1");
    sc_trace(mVcdFile, tmp_16_fu_358_p2, "tmp_16_fu_358_p2");
    sc_trace(mVcdFile, tmp_s_fu_380_p0, "tmp_s_fu_380_p0");
    sc_trace(mVcdFile, tmp_s_fu_380_p1, "tmp_s_fu_380_p1");
    sc_trace(mVcdFile, tmp_2_fu_386_p0, "tmp_2_fu_386_p0");
    sc_trace(mVcdFile, tmp_2_fu_386_p1, "tmp_2_fu_386_p1");
    sc_trace(mVcdFile, tmp_5_fu_392_p0, "tmp_5_fu_392_p0");
    sc_trace(mVcdFile, tmp_5_fu_392_p1, "tmp_5_fu_392_p1");
    sc_trace(mVcdFile, tmp_6_fu_398_p0, "tmp_6_fu_398_p0");
    sc_trace(mVcdFile, tmp_6_fu_398_p1, "tmp_6_fu_398_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp_2_fu_386_p00, "tmp_2_fu_386_p00");
    sc_trace(mVcdFile, tmp_5_fu_392_p00, "tmp_5_fu_392_p00");
    sc_trace(mVcdFile, tmp_6_fu_398_p00, "tmp_6_fu_398_p00");
    sc_trace(mVcdFile, tmp_s_fu_380_p00, "tmp_s_fu_380_p00");
#endif

    }
    mHdltvinHandle.open("kernel_jacobi_2d_imper_optimized.hdltvin.dat");
    mHdltvoutHandle.open("kernel_jacobi_2d_imper_optimized.hdltvout.dat");
}

kernel_jacobi_2d_imper_optimized::~kernel_jacobi_2d_imper_optimized() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_operator_double_div5_fu_184;
    delete kernel_jacobi_2d_bkb_U10;
    delete kernel_jacobi_2d_cud_U11;
    delete kernel_jacobi_2d_cud_U12;
    delete kernel_jacobi_2d_cud_U13;
    delete kernel_jacobi_2d_cud_U14;
}

void kernel_jacobi_2d_imper_optimized::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void kernel_jacobi_2d_imper_optimized::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_operator_double_div5_fu_184_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
            grp_operator_double_div5_fu_184_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_operator_double_div5_fu_184_ap_ready.read())) {
            grp_operator_double_div5_fu_184_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_231_p2.read(), ap_const_lv1_1))) {
        i_1_reg_161 = ap_const_lv10_1;
    } else if ((esl_seteq<1,1,1>(exitcond_fu_348_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        i_1_reg_161 = i_3_fu_374_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_219_p2.read(), ap_const_lv1_0))) {
        i_reg_139 = ap_const_lv10_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_261_p2.read(), ap_const_lv1_1))) {
        i_reg_139 = i_2_reg_422.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_338_p2.read(), ap_const_lv1_0))) {
        j_1_reg_173 = ap_const_lv10_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        j_1_reg_173 = j_3_reg_521.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_231_p2.read(), ap_const_lv1_0))) {
        j_reg_150 = ap_const_lv10_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        j_reg_150 = j_2_reg_465.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        reg_206 = A_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        reg_206 = A_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_338_p2.read(), ap_const_lv1_1))) {
        t_reg_128 = t_1_reg_407.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        t_reg_128 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        A_load_1_reg_475 = A_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        B_load_reg_531 = B_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_231_p2.read(), ap_const_lv1_0))) {
        i_2_reg_422 = i_2_fu_241_p2.read();
        tmp_2_reg_427 = tmp_2_fu_386_p2.read();
        tmp_5_reg_432 = tmp_5_fu_392_p2.read();
        tmp_s_reg_415 = tmp_s_fu_380_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_261_p2.read(), ap_const_lv1_0))) {
        j_2_reg_465 = j_2_fu_311_p2.read();
        tmp_12_reg_455 = tmp_12_fu_286_p2.read();
        tmp_15_reg_470 = tmp_15_fu_321_p2.read();
        tmp_18_cast_reg_440 = tmp_18_cast_fu_276_p1.read();
        tmp_9_reg_450 = tmp_9_fu_281_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(exitcond_fu_348_p2.read(), ap_const_lv1_0))) {
        j_3_reg_521 = j_3_fu_368_p2.read();
        tmp_23_cast_reg_511 = tmp_23_cast_fu_363_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        reg_213 = grp_fu_202_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_1_reg_407 = t_1_fu_225_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(exitcond1_fu_338_p2.read(), ap_const_lv1_0))) {
        tmp_6_reg_503 = tmp_6_fu_398_p2.read();
    }
}

void kernel_jacobi_2d_imper_optimized::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        A_address0 =  (sc_lv<20>) (tmp_20_cast_fu_334_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        A_address0 =  (sc_lv<20>) (tmp_22_cast_fu_326_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_address0 =  (sc_lv<20>) (tmp_18_cast_fu_276_p1.read());
    } else {
        A_address0 = "XXXXXXXXXXXXXXXXXXXX";
    }
}

void kernel_jacobi_2d_imper_optimized::thread_A_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        A_address1 =  (sc_lv<20>) (tmp_23_cast_reg_511.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        A_address1 =  (sc_lv<20>) (tmp_19_cast_fu_330_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_address1 =  (sc_lv<20>) (tmp_21_cast_fu_306_p1.read());
    } else {
        A_address1 = "XXXXXXXXXXXXXXXXXXXX";
    }
}

void kernel_jacobi_2d_imper_optimized::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper_optimized::thread_A_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(grp_operator_double_div5_fu_184_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper_optimized::thread_A_d1() {
    A_d1 = grp_operator_double_div5_fu_184_ap_return.read();
}

void kernel_jacobi_2d_imper_optimized::thread_A_we1() {
    if ((esl_seteq<1,1,1>(grp_operator_double_div5_fu_184_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        A_we1 = ap_const_logic_1;
    } else {
        A_we1 = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper_optimized::thread_B_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        B_address0 =  (sc_lv<20>) (tmp_23_cast_fu_363_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        B_address0 =  (sc_lv<20>) (tmp_18_cast_reg_440.read());
    } else {
        B_address0 = "XXXXXXXXXXXXXXXXXXXX";
    }
}

void kernel_jacobi_2d_imper_optimized::thread_B_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper_optimized::thread_B_d0() {
    B_d0 = reg_213.read();
}

void kernel_jacobi_2d_imper_optimized::thread_B_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        B_we0 = ap_const_logic_1;
    } else {
        B_we0 = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void kernel_jacobi_2d_imper_optimized::thread_ap_done() {
    if ((esl_seteq<1,1,1>(exitcond4_fu_219_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper_optimized::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper_optimized::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond4_fu_219_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper_optimized::thread_exitcond1_fu_338_p2() {
    exitcond1_fu_338_p2 = (!i_1_reg_161.read().is_01() || !ap_const_lv10_3E7.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_161.read() == ap_const_lv10_3E7);
}

void kernel_jacobi_2d_imper_optimized::thread_exitcond2_fu_261_p2() {
    exitcond2_fu_261_p2 = (!j_reg_150.read().is_01() || !ap_const_lv10_3E7.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_150.read() == ap_const_lv10_3E7);
}

void kernel_jacobi_2d_imper_optimized::thread_exitcond3_fu_231_p2() {
    exitcond3_fu_231_p2 = (!i_reg_139.read().is_01() || !ap_const_lv10_3E7.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_139.read() == ap_const_lv10_3E7);
}

void kernel_jacobi_2d_imper_optimized::thread_exitcond4_fu_219_p2() {
    exitcond4_fu_219_p2 = (!t_reg_128.read().is_01() || !ap_const_lv5_14.is_01())? sc_lv<1>(): sc_lv<1>(t_reg_128.read() == ap_const_lv5_14);
}

void kernel_jacobi_2d_imper_optimized::thread_exitcond_fu_348_p2() {
    exitcond_fu_348_p2 = (!j_1_reg_173.read().is_01() || !ap_const_lv10_3E7.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_173.read() == ap_const_lv10_3E7);
}

void kernel_jacobi_2d_imper_optimized::thread_grp_fu_202_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        grp_fu_202_p0 = reg_213.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_202_p0 = reg_206.read();
    } else {
        grp_fu_202_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel_jacobi_2d_imper_optimized::thread_grp_fu_202_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        grp_fu_202_p1 = reg_206.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_202_p1 = A_load_1_reg_475.read();
    } else {
        grp_fu_202_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel_jacobi_2d_imper_optimized::thread_grp_operator_double_div5_fu_184_ap_start() {
    grp_operator_double_div5_fu_184_ap_start = grp_operator_double_div5_fu_184_ap_start_reg.read();
}

void kernel_jacobi_2d_imper_optimized::thread_i_2_fu_241_p2() {
    i_2_fu_241_p2 = (!i_reg_139.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_139.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void kernel_jacobi_2d_imper_optimized::thread_i_3_fu_374_p2() {
    i_3_fu_374_p2 = (!i_1_reg_161.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_1_reg_161.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void kernel_jacobi_2d_imper_optimized::thread_j_2_fu_311_p2() {
    j_2_fu_311_p2 = (!j_reg_150.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_150.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void kernel_jacobi_2d_imper_optimized::thread_j_3_fu_368_p2() {
    j_3_fu_368_p2 = (!j_1_reg_173.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_1_reg_173.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void kernel_jacobi_2d_imper_optimized::thread_t_1_fu_225_p2() {
    t_1_fu_225_p2 = (!t_reg_128.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(t_reg_128.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_12_cast_fu_354_p1() {
    tmp_12_cast_fu_354_p1 = esl_zext<20,10>(j_1_reg_173.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_12_fu_286_p2() {
    tmp_12_fu_286_p2 = (!tmp_5_reg_432.read().is_01() || !tmp_7_cast_fu_267_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_5_reg_432.read()) + sc_biguint<20>(tmp_7_cast_fu_267_p1.read()));
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_14_fu_301_p2() {
    tmp_14_fu_301_p2 = (!tmp_s_reg_415.read().is_01() || !tmp_9_cast_fu_297_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_s_reg_415.read()) + sc_biguint<20>(tmp_9_cast_fu_297_p1.read()));
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_15_fu_321_p2() {
    tmp_15_fu_321_p2 = (!tmp_s_reg_415.read().is_01() || !tmp_2_cast_fu_317_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_s_reg_415.read()) + sc_biguint<20>(tmp_2_cast_fu_317_p1.read()));
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_16_fu_358_p2() {
    tmp_16_fu_358_p2 = (!tmp_6_reg_503.read().is_01() || !tmp_12_cast_fu_354_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_6_reg_503.read()) + sc_biguint<20>(tmp_12_cast_fu_354_p1.read()));
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_18_cast_fu_276_p1() {
    tmp_18_cast_fu_276_p1 = esl_zext<64,20>(tmp_7_fu_271_p2.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_19_cast_fu_330_p1() {
    tmp_19_cast_fu_330_p1 = esl_zext<64,20>(tmp_9_reg_450.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_20_cast_fu_334_p1() {
    tmp_20_cast_fu_334_p1 = esl_zext<64,20>(tmp_12_reg_455.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_21_cast_fu_306_p1() {
    tmp_21_cast_fu_306_p1 = esl_zext<64,20>(tmp_14_fu_301_p2.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_22_cast_fu_326_p1() {
    tmp_22_cast_fu_326_p1 = esl_zext<64,20>(tmp_15_reg_470.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_23_cast_fu_363_p1() {
    tmp_23_cast_fu_363_p1 = esl_zext<64,20>(tmp_16_fu_358_p2.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_2_cast_fu_317_p1() {
    tmp_2_cast_fu_317_p1 = esl_zext<20,10>(j_2_fu_311_p2.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_2_fu_386_p0() {
    tmp_2_fu_386_p0 =  (sc_lv<10>) (tmp_2_fu_386_p00.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_2_fu_386_p00() {
    tmp_2_fu_386_p00 = esl_zext<20,10>(i_2_fu_241_p2.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_2_fu_386_p1() {
    tmp_2_fu_386_p1 =  (sc_lv<11>) (ap_const_lv20_3E8);
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_4_fu_251_p2() {
    tmp_4_fu_251_p2 = (!i_reg_139.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_139.read()) + sc_bigint<10>(ap_const_lv10_3FF));
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_5_fu_392_p0() {
    tmp_5_fu_392_p0 =  (sc_lv<10>) (tmp_5_fu_392_p00.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_5_fu_392_p00() {
    tmp_5_fu_392_p00 = esl_zext<20,10>(tmp_4_fu_251_p2.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_5_fu_392_p1() {
    tmp_5_fu_392_p1 =  (sc_lv<11>) (ap_const_lv20_3E8);
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_6_fu_398_p0() {
    tmp_6_fu_398_p0 =  (sc_lv<10>) (tmp_6_fu_398_p00.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_6_fu_398_p00() {
    tmp_6_fu_398_p00 = esl_zext<20,10>(i_1_reg_161.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_6_fu_398_p1() {
    tmp_6_fu_398_p1 =  (sc_lv<11>) (ap_const_lv20_3E8);
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_7_cast_fu_267_p1() {
    tmp_7_cast_fu_267_p1 = esl_zext<20,10>(j_reg_150.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_7_fu_271_p2() {
    tmp_7_fu_271_p2 = (!tmp_s_reg_415.read().is_01() || !tmp_7_cast_fu_267_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_s_reg_415.read()) + sc_biguint<20>(tmp_7_cast_fu_267_p1.read()));
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_8_fu_291_p2() {
    tmp_8_fu_291_p2 = (!j_reg_150.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_150.read()) + sc_bigint<10>(ap_const_lv10_3FF));
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_9_cast_fu_297_p1() {
    tmp_9_cast_fu_297_p1 = esl_zext<20,10>(tmp_8_fu_291_p2.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_9_fu_281_p2() {
    tmp_9_fu_281_p2 = (!tmp_2_reg_427.read().is_01() || !tmp_7_cast_fu_267_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_2_reg_427.read()) + sc_biguint<20>(tmp_7_cast_fu_267_p1.read()));
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_s_fu_380_p0() {
    tmp_s_fu_380_p0 =  (sc_lv<10>) (tmp_s_fu_380_p00.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_s_fu_380_p00() {
    tmp_s_fu_380_p00 = esl_zext<20,10>(i_reg_139.read());
}

void kernel_jacobi_2d_imper_optimized::thread_tmp_s_fu_380_p1() {
    tmp_s_fu_380_p1 =  (sc_lv<11>) (ap_const_lv20_3E8);
}

void kernel_jacobi_2d_imper_optimized::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond4_fu_219_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_231_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_261_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(exitcond1_fu_338_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_348_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            if ((esl_seteq<1,1,1>(grp_operator_double_div5_fu_184_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<37>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void kernel_jacobi_2d_imper_optimized::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"tsteps\" :  \"" << tsteps.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"n\" :  \"" << n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address1\" :  \"" << A_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce1\" :  \"" << A_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_we1\" :  \"" << A_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_d1\" :  \"" << A_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q1\" :  \"" << A_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address0\" :  \"" << B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce0\" :  \"" << B_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_we0\" :  \"" << B_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_d0\" :  \"" << B_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q0\" :  \"" << B_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

