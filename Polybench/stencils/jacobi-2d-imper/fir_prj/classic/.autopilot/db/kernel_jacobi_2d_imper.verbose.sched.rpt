

================================================================
== Vivado HLS Report for 'kernel_jacobi_2d_imper'
================================================================
* Date:           Tue Aug  7 11:15:18 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        fir_prj
* Solution:       classic
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.334|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----------+-----------+-----------+-----------+---------+
    |        Latency        |        Interval       | Pipeline|
    |    min    |    max    |    min    |    max    |   Type  |
    +-----------+-----------+-----------+-----------+---------+
    |  717202781|  717202781|  717202781|  717202781|   none  |
    +-----------+-----------+-----------+-----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----------+-----------+----------+-----------+-----------+------+----------+
        |                 |        Latency        | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |    min    |    max    |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+-----------+-----------+----------+-----------+-----------+------+----------+
        |- Loop 1         |  717202780|  717202780|  35860139|          -|          -|    20|    no    |
        | + Loop 1.1      |   30878120|   30878120|     30940|          -|          -|   998|    no    |
        |  ++ Loop 1.1.1  |      30938|      30938|        31|          -|          -|   998|    no    |
        | + Loop 1.2      |    4982016|    4982016|      4992|          -|          -|   998|    no    |
        |  ++ Loop 1.2.1  |       4990|       4990|         5|          -|          -|   998|    no    |
        +-----------------+-----------+-----------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 40
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond4)
3 --> 
	4  / (!exitcond3)
	35  / (exitcond3)
4 --> 
	5  / (!exitcond2)
	3  / (exitcond2)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	4  / true
35 --> 
	36  / (!exitcond1)
	2  / (exitcond1)
36 --> 
	37  / (!exitcond)
	35  / (exitcond)
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	36  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %tsteps) nounwind, !map !19"   --->   Operation 41 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %n) nounwind, !map !25"   --->   Operation 42 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1000000 x double]* %A) nounwind, !map !29"   --->   Operation 43 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1000000 x double]* %B) nounwind, !map !35"   --->   Operation 44 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([23 x i8]* @kernel_jacobi_2d_imp) nounwind"   --->   Operation 45 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (1.06ns)   --->   "br label %.loopexit" [classic/jacobi-2d-imper.c:51]   --->   Operation 46 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 1.33>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%t = phi i5 [ 0, %0 ], [ %t_1, %.loopexit.loopexit ]"   --->   Operation 47 'phi' 't' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.11ns)   --->   "%exitcond4 = icmp eq i5 %t, -12" [classic/jacobi-2d-imper.c:51]   --->   Operation 48 'icmp' 'exitcond4' <Predicate = true> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20) nounwind"   --->   Operation 49 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (1.33ns)   --->   "%t_1 = add i5 %t, 1" [classic/jacobi-2d-imper.c:51]   --->   Operation 50 'add' 't_1' <Predicate = true> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "br i1 %exitcond4, label %4, label %.preheader7.preheader" [classic/jacobi-2d-imper.c:51]   --->   Operation 51 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (1.06ns)   --->   "br label %.preheader7" [classic/jacobi-2d-imper.c:53]   --->   Operation 52 'br' <Predicate = (!exitcond4)> <Delay = 1.06>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "ret void" [classic/jacobi-2d-imper.c:62]   --->   Operation 53 'ret' <Predicate = (exitcond4)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.20>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%i = phi i10 [ %i_2, %.preheader7.loopexit ], [ 1, %.preheader7.preheader ]"   --->   Operation 54 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (1.29ns)   --->   "%exitcond3 = icmp eq i10 %i, -25" [classic/jacobi-2d-imper.c:53]   --->   Operation 55 'icmp' 'exitcond3' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 998, i64 998, i64 998) nounwind"   --->   Operation 56 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "br i1 %exitcond3, label %.preheader5.preheader, label %.preheader6.preheader" [classic/jacobi-2d-imper.c:53]   --->   Operation 57 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_cast = zext i10 %i to i20" [classic/jacobi-2d-imper.c:55]   --->   Operation 58 'zext' 'tmp_cast' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (5.79ns)   --->   "%tmp_1 = mul i20 %tmp_cast, 1000" [classic/jacobi-2d-imper.c:55]   --->   Operation 59 'mul' 'tmp_1' <Predicate = (!exitcond3)> <Delay = 5.79> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 60 [1/1] (1.41ns)   --->   "%i_2 = add i10 %i, 1" [classic/jacobi-2d-imper.c:55]   --->   Operation 60 'add' 'i_2' <Predicate = (!exitcond3)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_2_cast = zext i10 %i_2 to i20" [classic/jacobi-2d-imper.c:55]   --->   Operation 61 'zext' 'tmp_2_cast' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (5.79ns)   --->   "%tmp_2 = mul i20 %tmp_2_cast, 1000" [classic/jacobi-2d-imper.c:55]   --->   Operation 62 'mul' 'tmp_2' <Predicate = (!exitcond3)> <Delay = 5.79> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 63 [1/1] (1.41ns)   --->   "%tmp_3 = add i10 %i, -1" [classic/jacobi-2d-imper.c:55]   --->   Operation 63 'add' 'tmp_3' <Predicate = (!exitcond3)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_4_cast = zext i10 %tmp_3 to i20" [classic/jacobi-2d-imper.c:55]   --->   Operation 64 'zext' 'tmp_4_cast' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (5.79ns)   --->   "%tmp_4 = mul i20 %tmp_4_cast, 1000" [classic/jacobi-2d-imper.c:55]   --->   Operation 65 'mul' 'tmp_4' <Predicate = (!exitcond3)> <Delay = 5.79> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 66 [1/1] (1.06ns)   --->   "br label %.preheader6" [classic/jacobi-2d-imper.c:54]   --->   Operation 66 'br' <Predicate = (!exitcond3)> <Delay = 1.06>
ST_3 : Operation 67 [1/1] (1.06ns)   --->   "br label %.preheader5" [classic/jacobi-2d-imper.c:56]   --->   Operation 67 'br' <Predicate = (exitcond3)> <Delay = 1.06>

State 4 <SV = 3> <Delay = 5.64>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%j = phi i10 [ %j_2, %1 ], [ 1, %.preheader6.preheader ]"   --->   Operation 68 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (1.29ns)   --->   "%exitcond2 = icmp eq i10 %j, -25" [classic/jacobi-2d-imper.c:54]   --->   Operation 69 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 998, i64 998, i64 998) nounwind"   --->   Operation 70 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %.preheader7.loopexit, label %1" [classic/jacobi-2d-imper.c:54]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_7_cast = zext i10 %j to i20" [classic/jacobi-2d-imper.c:55]   --->   Operation 72 'zext' 'tmp_7_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (1.56ns)   --->   "%tmp_7 = add i20 %tmp_1, %tmp_7_cast" [classic/jacobi-2d-imper.c:55]   --->   Operation 73 'add' 'tmp_7' <Predicate = (!exitcond2)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_18_cast = zext i20 %tmp_7 to i64" [classic/jacobi-2d-imper.c:55]   --->   Operation 74 'zext' 'tmp_18_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_18_cast" [classic/jacobi-2d-imper.c:55]   --->   Operation 75 'getelementptr' 'A_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (1.56ns)   --->   "%tmp_9 = add i20 %tmp_2, %tmp_7_cast" [classic/jacobi-2d-imper.c:55]   --->   Operation 76 'add' 'tmp_9' <Predicate = (!exitcond2)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (1.56ns)   --->   "%tmp_13 = add i20 %tmp_4, %tmp_7_cast" [classic/jacobi-2d-imper.c:55]   --->   Operation 77 'add' 'tmp_13' <Predicate = (!exitcond2)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 78 [4/4] (2.66ns)   --->   "%A_load = load double* %A_addr, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 78 'load' 'A_load' <Predicate = (!exitcond2)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_4 : Operation 79 [1/1] (1.41ns)   --->   "%tmp_8 = add i10 %j, -1" [classic/jacobi-2d-imper.c:55]   --->   Operation 79 'add' 'tmp_8' <Predicate = (!exitcond2)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_9_cast = zext i10 %tmp_8 to i20" [classic/jacobi-2d-imper.c:55]   --->   Operation 80 'zext' 'tmp_9_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (1.56ns)   --->   "%tmp_14 = add i20 %tmp_1, %tmp_9_cast" [classic/jacobi-2d-imper.c:55]   --->   Operation 81 'add' 'tmp_14' <Predicate = (!exitcond2)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_21_cast = zext i20 %tmp_14 to i64" [classic/jacobi-2d-imper.c:55]   --->   Operation 82 'zext' 'tmp_21_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_21_cast" [classic/jacobi-2d-imper.c:55]   --->   Operation 83 'getelementptr' 'A_addr_1' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 84 [4/4] (2.66ns)   --->   "%A_load_1 = load double* %A_addr_1, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 84 'load' 'A_load_1' <Predicate = (!exitcond2)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_4 : Operation 85 [1/1] (1.41ns)   --->   "%j_2 = add i10 %j, 1" [classic/jacobi-2d-imper.c:55]   --->   Operation 85 'add' 'j_2' <Predicate = (!exitcond2)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_1_cast = zext i10 %j_2 to i20" [classic/jacobi-2d-imper.c:55]   --->   Operation 86 'zext' 'tmp_1_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (1.56ns)   --->   "%tmp_15 = add i20 %tmp_1, %tmp_1_cast" [classic/jacobi-2d-imper.c:55]   --->   Operation 87 'add' 'tmp_15' <Predicate = (!exitcond2)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "br label %.preheader7"   --->   Operation 88 'br' <Predicate = (exitcond2)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.66>
ST_5 : Operation 89 [3/4] (2.66ns)   --->   "%A_load = load double* %A_addr, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 89 'load' 'A_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_5 : Operation 90 [3/4] (2.66ns)   --->   "%A_load_1 = load double* %A_addr_1, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 90 'load' 'A_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 6 <SV = 5> <Delay = 2.66>
ST_6 : Operation 91 [2/4] (2.66ns)   --->   "%A_load = load double* %A_addr, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 91 'load' 'A_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_6 : Operation 92 [2/4] (2.66ns)   --->   "%A_load_1 = load double* %A_addr_1, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 92 'load' 'A_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 7 <SV = 6> <Delay = 2.66>
ST_7 : Operation 93 [1/4] (2.66ns)   --->   "%A_load = load double* %A_addr, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 93 'load' 'A_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_7 : Operation 94 [1/4] (2.66ns)   --->   "%A_load_1 = load double* %A_addr_1, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 94 'load' 'A_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 8 <SV = 7> <Delay = 6.91>
ST_8 : Operation 95 [5/5] (6.91ns)   --->   "%tmp_s = fadd double %A_load, %A_load_1" [classic/jacobi-2d-imper.c:55]   --->   Operation 95 'dadd' 'tmp_s' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.91>
ST_9 : Operation 96 [4/5] (6.91ns)   --->   "%tmp_s = fadd double %A_load, %A_load_1" [classic/jacobi-2d-imper.c:55]   --->   Operation 96 'dadd' 'tmp_s' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_22_cast = zext i20 %tmp_15 to i64" [classic/jacobi-2d-imper.c:55]   --->   Operation 97 'zext' 'tmp_22_cast' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 98 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_22_cast" [classic/jacobi-2d-imper.c:55]   --->   Operation 98 'getelementptr' 'A_addr_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 99 [4/4] (2.66ns)   --->   "%A_load_2 = load double* %A_addr_2, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 99 'load' 'A_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 10 <SV = 9> <Delay = 6.91>
ST_10 : Operation 100 [3/5] (6.91ns)   --->   "%tmp_s = fadd double %A_load, %A_load_1" [classic/jacobi-2d-imper.c:55]   --->   Operation 100 'dadd' 'tmp_s' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 101 [3/4] (2.66ns)   --->   "%A_load_2 = load double* %A_addr_2, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 101 'load' 'A_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 11 <SV = 10> <Delay = 6.91>
ST_11 : Operation 102 [2/5] (6.91ns)   --->   "%tmp_s = fadd double %A_load, %A_load_1" [classic/jacobi-2d-imper.c:55]   --->   Operation 102 'dadd' 'tmp_s' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 103 [2/4] (2.66ns)   --->   "%A_load_2 = load double* %A_addr_2, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 103 'load' 'A_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 12 <SV = 11> <Delay = 6.91>
ST_12 : Operation 104 [1/5] (6.91ns)   --->   "%tmp_s = fadd double %A_load, %A_load_1" [classic/jacobi-2d-imper.c:55]   --->   Operation 104 'dadd' 'tmp_s' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 105 [1/4] (2.66ns)   --->   "%A_load_2 = load double* %A_addr_2, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 105 'load' 'A_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 13 <SV = 12> <Delay = 6.91>
ST_13 : Operation 106 [5/5] (6.91ns)   --->   "%tmp_5 = fadd double %tmp_s, %A_load_2" [classic/jacobi-2d-imper.c:55]   --->   Operation 106 'dadd' 'tmp_5' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.91>
ST_14 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_19_cast = zext i20 %tmp_9 to i64" [classic/jacobi-2d-imper.c:55]   --->   Operation 107 'zext' 'tmp_19_cast' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 108 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_19_cast" [classic/jacobi-2d-imper.c:55]   --->   Operation 108 'getelementptr' 'A_addr_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 109 [4/5] (6.91ns)   --->   "%tmp_5 = fadd double %tmp_s, %A_load_2" [classic/jacobi-2d-imper.c:55]   --->   Operation 109 'dadd' 'tmp_5' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 110 [4/4] (2.66ns)   --->   "%A_load_3 = load double* %A_addr_3, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 110 'load' 'A_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 15 <SV = 14> <Delay = 6.91>
ST_15 : Operation 111 [3/5] (6.91ns)   --->   "%tmp_5 = fadd double %tmp_s, %A_load_2" [classic/jacobi-2d-imper.c:55]   --->   Operation 111 'dadd' 'tmp_5' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 112 [3/4] (2.66ns)   --->   "%A_load_3 = load double* %A_addr_3, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 112 'load' 'A_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 16 <SV = 15> <Delay = 6.91>
ST_16 : Operation 113 [2/5] (6.91ns)   --->   "%tmp_5 = fadd double %tmp_s, %A_load_2" [classic/jacobi-2d-imper.c:55]   --->   Operation 113 'dadd' 'tmp_5' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 114 [2/4] (2.66ns)   --->   "%A_load_3 = load double* %A_addr_3, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 114 'load' 'A_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 17 <SV = 16> <Delay = 6.91>
ST_17 : Operation 115 [1/5] (6.91ns)   --->   "%tmp_5 = fadd double %tmp_s, %A_load_2" [classic/jacobi-2d-imper.c:55]   --->   Operation 115 'dadd' 'tmp_5' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 116 [1/4] (2.66ns)   --->   "%A_load_3 = load double* %A_addr_3, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 116 'load' 'A_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 18 <SV = 17> <Delay = 6.91>
ST_18 : Operation 117 [5/5] (6.91ns)   --->   "%tmp_10 = fadd double %tmp_5, %A_load_3" [classic/jacobi-2d-imper.c:55]   --->   Operation 117 'dadd' 'tmp_10' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 6.91>
ST_19 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_20_cast = zext i20 %tmp_13 to i64" [classic/jacobi-2d-imper.c:55]   --->   Operation 118 'zext' 'tmp_20_cast' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 119 [1/1] (0.00ns)   --->   "%A_addr_4 = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_20_cast" [classic/jacobi-2d-imper.c:55]   --->   Operation 119 'getelementptr' 'A_addr_4' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 120 [4/5] (6.91ns)   --->   "%tmp_10 = fadd double %tmp_5, %A_load_3" [classic/jacobi-2d-imper.c:55]   --->   Operation 120 'dadd' 'tmp_10' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 121 [4/4] (2.66ns)   --->   "%A_load_4 = load double* %A_addr_4, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 121 'load' 'A_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 20 <SV = 19> <Delay = 6.91>
ST_20 : Operation 122 [3/5] (6.91ns)   --->   "%tmp_10 = fadd double %tmp_5, %A_load_3" [classic/jacobi-2d-imper.c:55]   --->   Operation 122 'dadd' 'tmp_10' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 123 [3/4] (2.66ns)   --->   "%A_load_4 = load double* %A_addr_4, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 123 'load' 'A_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 21 <SV = 20> <Delay = 6.91>
ST_21 : Operation 124 [2/5] (6.91ns)   --->   "%tmp_10 = fadd double %tmp_5, %A_load_3" [classic/jacobi-2d-imper.c:55]   --->   Operation 124 'dadd' 'tmp_10' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 125 [2/4] (2.66ns)   --->   "%A_load_4 = load double* %A_addr_4, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 125 'load' 'A_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 22 <SV = 21> <Delay = 6.91>
ST_22 : Operation 126 [1/5] (6.91ns)   --->   "%tmp_10 = fadd double %tmp_5, %A_load_3" [classic/jacobi-2d-imper.c:55]   --->   Operation 126 'dadd' 'tmp_10' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 127 [1/4] (2.66ns)   --->   "%A_load_4 = load double* %A_addr_4, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 127 'load' 'A_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 23 <SV = 22> <Delay = 6.91>
ST_23 : Operation 128 [5/5] (6.91ns)   --->   "%tmp_11 = fadd double %tmp_10, %A_load_4" [classic/jacobi-2d-imper.c:55]   --->   Operation 128 'dadd' 'tmp_11' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 6.91>
ST_24 : Operation 129 [4/5] (6.91ns)   --->   "%tmp_11 = fadd double %tmp_10, %A_load_4" [classic/jacobi-2d-imper.c:55]   --->   Operation 129 'dadd' 'tmp_11' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 6.91>
ST_25 : Operation 130 [3/5] (6.91ns)   --->   "%tmp_11 = fadd double %tmp_10, %A_load_4" [classic/jacobi-2d-imper.c:55]   --->   Operation 130 'dadd' 'tmp_11' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 6.91>
ST_26 : Operation 131 [2/5] (6.91ns)   --->   "%tmp_11 = fadd double %tmp_10, %A_load_4" [classic/jacobi-2d-imper.c:55]   --->   Operation 131 'dadd' 'tmp_11' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 6.91>
ST_27 : Operation 132 [1/5] (6.91ns)   --->   "%tmp_11 = fadd double %tmp_10, %A_load_4" [classic/jacobi-2d-imper.c:55]   --->   Operation 132 'dadd' 'tmp_11' <Predicate = true> <Delay = 6.91> <Core = "DAddSub">   --->   Core 109 'DAddSub' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 8.33>
ST_28 : Operation 133 [5/5] (8.33ns)   --->   "%tmp_12 = fmul double %tmp_11, 2.000000e-01" [classic/jacobi-2d-imper.c:55]   --->   Operation 133 'dmul' 'tmp_12' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 8.33>
ST_29 : Operation 134 [4/5] (8.33ns)   --->   "%tmp_12 = fmul double %tmp_11, 2.000000e-01" [classic/jacobi-2d-imper.c:55]   --->   Operation 134 'dmul' 'tmp_12' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 8.33>
ST_30 : Operation 135 [3/5] (8.33ns)   --->   "%tmp_12 = fmul double %tmp_11, 2.000000e-01" [classic/jacobi-2d-imper.c:55]   --->   Operation 135 'dmul' 'tmp_12' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 8.33>
ST_31 : Operation 136 [2/5] (8.33ns)   --->   "%tmp_12 = fmul double %tmp_11, 2.000000e-01" [classic/jacobi-2d-imper.c:55]   --->   Operation 136 'dmul' 'tmp_12' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 8.33>
ST_32 : Operation 137 [1/5] (8.33ns)   --->   "%tmp_12 = fmul double %tmp_11, 2.000000e-01" [classic/jacobi-2d-imper.c:55]   --->   Operation 137 'dmul' 'tmp_12' <Predicate = true> <Delay = 8.33> <Core = "DMul">   --->   Core 110 'DMul' <Latency = 4> <II = 1> <Delay = 8.33> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 2.66>
ST_33 : Operation 138 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [1000000 x double]* %B, i64 0, i64 %tmp_18_cast" [classic/jacobi-2d-imper.c:55]   --->   Operation 138 'getelementptr' 'B_addr' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 139 [2/2] (2.66ns)   --->   "store double %tmp_12, double* %B_addr, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 139 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 34 <SV = 33> <Delay = 2.66>
ST_34 : Operation 140 [1/2] (2.66ns)   --->   "store double %tmp_12, double* %B_addr, align 8" [classic/jacobi-2d-imper.c:55]   --->   Operation 140 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_34 : Operation 141 [1/1] (0.00ns)   --->   "br label %.preheader6" [classic/jacobi-2d-imper.c:54]   --->   Operation 141 'br' <Predicate = true> <Delay = 0.00>

State 35 <SV = 3> <Delay = 5.79>
ST_35 : Operation 142 [1/1] (0.00ns)   --->   "%i_1 = phi i10 [ %i_3, %3 ], [ 1, %.preheader5.preheader ]"   --->   Operation 142 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 143 [1/1] (1.29ns)   --->   "%exitcond1 = icmp eq i10 %i_1, -25" [classic/jacobi-2d-imper.c:56]   --->   Operation 143 'icmp' 'exitcond1' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 144 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 998, i64 998, i64 998) nounwind"   --->   Operation 144 'speclooptripcount' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 145 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %.loopexit.loopexit, label %.preheader.preheader" [classic/jacobi-2d-imper.c:56]   --->   Operation 145 'br' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 146 [1/1] (0.00ns)   --->   "%tmp_6_cast = zext i10 %i_1 to i20" [classic/jacobi-2d-imper.c:58]   --->   Operation 146 'zext' 'tmp_6_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_35 : Operation 147 [1/1] (5.79ns)   --->   "%tmp_6 = mul i20 %tmp_6_cast, 1000" [classic/jacobi-2d-imper.c:58]   --->   Operation 147 'mul' 'tmp_6' <Predicate = (!exitcond1)> <Delay = 5.79> <Core = "DSP48">   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_35 : Operation 148 [1/1] (1.06ns)   --->   "br label %.preheader" [classic/jacobi-2d-imper.c:57]   --->   Operation 148 'br' <Predicate = (!exitcond1)> <Delay = 1.06>
ST_35 : Operation 149 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 149 'br' <Predicate = (exitcond1)> <Delay = 0.00>

State 36 <SV = 4> <Delay = 4.22>
ST_36 : Operation 150 [1/1] (0.00ns)   --->   "%j_1 = phi i10 [ %j_3, %2 ], [ 1, %.preheader.preheader ]"   --->   Operation 150 'phi' 'j_1' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 151 [1/1] (1.29ns)   --->   "%exitcond = icmp eq i10 %j_1, -25" [classic/jacobi-2d-imper.c:57]   --->   Operation 151 'icmp' 'exitcond' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 152 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 998, i64 998, i64 998) nounwind"   --->   Operation 152 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 153 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %3, label %2" [classic/jacobi-2d-imper.c:57]   --->   Operation 153 'br' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_13_cast = zext i10 %j_1 to i20" [classic/jacobi-2d-imper.c:58]   --->   Operation 154 'zext' 'tmp_13_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_36 : Operation 155 [1/1] (1.56ns)   --->   "%tmp_16 = add i20 %tmp_6, %tmp_13_cast" [classic/jacobi-2d-imper.c:58]   --->   Operation 155 'add' 'tmp_16' <Predicate = (!exitcond)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 156 [1/1] (0.00ns)   --->   "%tmp_23_cast = zext i20 %tmp_16 to i64" [classic/jacobi-2d-imper.c:58]   --->   Operation 156 'zext' 'tmp_23_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_36 : Operation 157 [1/1] (0.00ns)   --->   "%B_addr_1 = getelementptr [1000000 x double]* %B, i64 0, i64 %tmp_23_cast" [classic/jacobi-2d-imper.c:58]   --->   Operation 157 'getelementptr' 'B_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_36 : Operation 158 [4/4] (2.66ns)   --->   "%B_load = load double* %B_addr_1, align 8" [classic/jacobi-2d-imper.c:58]   --->   Operation 158 'load' 'B_load' <Predicate = (!exitcond)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_36 : Operation 159 [1/1] (1.41ns)   --->   "%j_3 = add i10 %j_1, 1" [classic/jacobi-2d-imper.c:57]   --->   Operation 159 'add' 'j_3' <Predicate = (!exitcond)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 160 [1/1] (1.41ns)   --->   "%i_3 = add i10 %i_1, 1" [classic/jacobi-2d-imper.c:56]   --->   Operation 160 'add' 'i_3' <Predicate = (exitcond)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 161 [1/1] (0.00ns)   --->   "br label %.preheader5" [classic/jacobi-2d-imper.c:56]   --->   Operation 161 'br' <Predicate = (exitcond)> <Delay = 0.00>

State 37 <SV = 5> <Delay = 2.66>
ST_37 : Operation 162 [3/4] (2.66ns)   --->   "%B_load = load double* %B_addr_1, align 8" [classic/jacobi-2d-imper.c:58]   --->   Operation 162 'load' 'B_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 38 <SV = 6> <Delay = 2.66>
ST_38 : Operation 163 [2/4] (2.66ns)   --->   "%B_load = load double* %B_addr_1, align 8" [classic/jacobi-2d-imper.c:58]   --->   Operation 163 'load' 'B_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 39 <SV = 7> <Delay = 5.32>
ST_39 : Operation 164 [1/1] (0.00ns)   --->   "%A_addr_5 = getelementptr [1000000 x double]* %A, i64 0, i64 %tmp_23_cast" [classic/jacobi-2d-imper.c:58]   --->   Operation 164 'getelementptr' 'A_addr_5' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 165 [1/4] (2.66ns)   --->   "%B_load = load double* %B_addr_1, align 8" [classic/jacobi-2d-imper.c:58]   --->   Operation 165 'load' 'B_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_39 : Operation 166 [2/2] (2.66ns)   --->   "store double %B_load, double* %A_addr_5, align 8" [classic/jacobi-2d-imper.c:58]   --->   Operation 166 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>

State 40 <SV = 8> <Delay = 2.66>
ST_40 : Operation 167 [1/2] (2.66ns)   --->   "store double %B_load, double* %A_addr_5, align 8" [classic/jacobi-2d-imper.c:58]   --->   Operation 167 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 1000000> <RAM>
ST_40 : Operation 168 [1/1] (0.00ns)   --->   "br label %.preheader" [classic/jacobi-2d-imper.c:57]   --->   Operation 168 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('t') with incoming values : ('t', classic/jacobi-2d-imper.c:51) [12]  (1.06 ns)

 <State 2>: 1.34ns
The critical path consists of the following:
	'phi' operation ('t') with incoming values : ('t', classic/jacobi-2d-imper.c:51) [12]  (0 ns)
	'add' operation ('t', classic/jacobi-2d-imper.c:51) [15]  (1.34 ns)

 <State 3>: 7.21ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', classic/jacobi-2d-imper.c:55) [20]  (0 ns)
	'add' operation ('i', classic/jacobi-2d-imper.c:55) [27]  (1.42 ns)
	'mul' operation ('tmp_2', classic/jacobi-2d-imper.c:55) [29]  (5.79 ns)

 <State 4>: 5.64ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', classic/jacobi-2d-imper.c:55) [35]  (0 ns)
	'add' operation ('tmp_8', classic/jacobi-2d-imper.c:55) [52]  (1.42 ns)
	'add' operation ('tmp_14', classic/jacobi-2d-imper.c:55) [54]  (1.56 ns)
	'getelementptr' operation ('A_addr_1', classic/jacobi-2d-imper.c:55) [56]  (0 ns)
	'load' operation ('A_load_1', classic/jacobi-2d-imper.c:55) on array 'A' [57]  (2.66 ns)

 <State 5>: 2.66ns
The critical path consists of the following:
	'load' operation ('A_load', classic/jacobi-2d-imper.c:55) on array 'A' [51]  (2.66 ns)

 <State 6>: 2.66ns
The critical path consists of the following:
	'load' operation ('A_load', classic/jacobi-2d-imper.c:55) on array 'A' [51]  (2.66 ns)

 <State 7>: 2.66ns
The critical path consists of the following:
	'load' operation ('A_load', classic/jacobi-2d-imper.c:55) on array 'A' [51]  (2.66 ns)

 <State 8>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_s', classic/jacobi-2d-imper.c:55) [58]  (6.92 ns)

 <State 9>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_s', classic/jacobi-2d-imper.c:55) [58]  (6.92 ns)

 <State 10>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_s', classic/jacobi-2d-imper.c:55) [58]  (6.92 ns)

 <State 11>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_s', classic/jacobi-2d-imper.c:55) [58]  (6.92 ns)

 <State 12>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_s', classic/jacobi-2d-imper.c:55) [58]  (6.92 ns)

 <State 13>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_5', classic/jacobi-2d-imper.c:55) [65]  (6.92 ns)

 <State 14>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_5', classic/jacobi-2d-imper.c:55) [65]  (6.92 ns)

 <State 15>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_5', classic/jacobi-2d-imper.c:55) [65]  (6.92 ns)

 <State 16>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_5', classic/jacobi-2d-imper.c:55) [65]  (6.92 ns)

 <State 17>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_5', classic/jacobi-2d-imper.c:55) [65]  (6.92 ns)

 <State 18>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_10', classic/jacobi-2d-imper.c:55) [67]  (6.92 ns)

 <State 19>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_10', classic/jacobi-2d-imper.c:55) [67]  (6.92 ns)

 <State 20>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_10', classic/jacobi-2d-imper.c:55) [67]  (6.92 ns)

 <State 21>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_10', classic/jacobi-2d-imper.c:55) [67]  (6.92 ns)

 <State 22>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_10', classic/jacobi-2d-imper.c:55) [67]  (6.92 ns)

 <State 23>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_11', classic/jacobi-2d-imper.c:55) [69]  (6.92 ns)

 <State 24>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_11', classic/jacobi-2d-imper.c:55) [69]  (6.92 ns)

 <State 25>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_11', classic/jacobi-2d-imper.c:55) [69]  (6.92 ns)

 <State 26>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_11', classic/jacobi-2d-imper.c:55) [69]  (6.92 ns)

 <State 27>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('tmp_11', classic/jacobi-2d-imper.c:55) [69]  (6.92 ns)

 <State 28>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('tmp_12', classic/jacobi-2d-imper.c:55) [70]  (8.33 ns)

 <State 29>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('tmp_12', classic/jacobi-2d-imper.c:55) [70]  (8.33 ns)

 <State 30>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('tmp_12', classic/jacobi-2d-imper.c:55) [70]  (8.33 ns)

 <State 31>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('tmp_12', classic/jacobi-2d-imper.c:55) [70]  (8.33 ns)

 <State 32>: 8.33ns
The critical path consists of the following:
	'dmul' operation ('tmp_12', classic/jacobi-2d-imper.c:55) [70]  (8.33 ns)

 <State 33>: 2.66ns
The critical path consists of the following:
	'getelementptr' operation ('B_addr', classic/jacobi-2d-imper.c:55) [50]  (0 ns)
	'store' operation (classic/jacobi-2d-imper.c:55) of variable 'tmp_12', classic/jacobi-2d-imper.c:55 on array 'B' [71]  (2.66 ns)

 <State 34>: 2.66ns
The critical path consists of the following:
	'store' operation (classic/jacobi-2d-imper.c:55) of variable 'tmp_12', classic/jacobi-2d-imper.c:55 on array 'B' [71]  (2.66 ns)

 <State 35>: 5.79ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', classic/jacobi-2d-imper.c:56) [78]  (0 ns)
	'mul' operation ('tmp_6', classic/jacobi-2d-imper.c:58) [84]  (5.79 ns)

 <State 36>: 4.23ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', classic/jacobi-2d-imper.c:57) [87]  (0 ns)
	'add' operation ('tmp_16', classic/jacobi-2d-imper.c:58) [93]  (1.56 ns)
	'getelementptr' operation ('B_addr_1', classic/jacobi-2d-imper.c:58) [96]  (0 ns)
	'load' operation ('B_load', classic/jacobi-2d-imper.c:58) on array 'B' [97]  (2.66 ns)

 <State 37>: 2.66ns
The critical path consists of the following:
	'load' operation ('B_load', classic/jacobi-2d-imper.c:58) on array 'B' [97]  (2.66 ns)

 <State 38>: 2.66ns
The critical path consists of the following:
	'load' operation ('B_load', classic/jacobi-2d-imper.c:58) on array 'B' [97]  (2.66 ns)

 <State 39>: 5.33ns
The critical path consists of the following:
	'load' operation ('B_load', classic/jacobi-2d-imper.c:58) on array 'B' [97]  (2.66 ns)
	'store' operation (classic/jacobi-2d-imper.c:58) of variable 'B_load', classic/jacobi-2d-imper.c:58 on array 'A' [98]  (2.66 ns)

 <State 40>: 2.66ns
The critical path consists of the following:
	'store' operation (classic/jacobi-2d-imper.c:58) of variable 'B_load', classic/jacobi-2d-imper.c:58 on array 'A' [98]  (2.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
