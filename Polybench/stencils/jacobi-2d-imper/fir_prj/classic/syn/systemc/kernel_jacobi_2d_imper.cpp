// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel_jacobi_2d_imper.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel_jacobi_2d_imper::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel_jacobi_2d_imper::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state1 = "1";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state2 = "10";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state3 = "100";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state4 = "1000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state5 = "10000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state6 = "100000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state7 = "1000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state8 = "10000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state9 = "100000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state10 = "1000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state11 = "10000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state12 = "100000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<57> kernel_jacobi_2d_imper::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_6 = "110";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_B = "1011";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_10 = "10000";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_15 = "10101";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_1A = "11010";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_1 = "1";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_2 = "10";
const sc_lv<1> kernel_jacobi_2d_imper::ap_const_lv1_0 = "0";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_3 = "11";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_8 = "1000";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_D = "1101";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_12 = "10010";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_30 = "110000";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_31 = "110001";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_33 = "110011";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_34 = "110100";
const sc_lv<1> kernel_jacobi_2d_imper::ap_const_lv1_1 = "1";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_37 = "110111";
const sc_lv<5> kernel_jacobi_2d_imper::ap_const_lv5_0 = "00000";
const sc_lv<10> kernel_jacobi_2d_imper::ap_const_lv10_1 = "1";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_32 = "110010";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_38 = "111000";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_4 = "100";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_5 = "101";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_9 = "1001";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_A = "1010";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_E = "1110";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_F = "1111";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_13 = "10011";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_14 = "10100";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_35 = "110101";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_36 = "110110";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_7 = "111";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_C = "1100";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_11 = "10001";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_16 = "10110";
const sc_lv<64> kernel_jacobi_2d_imper::ap_const_lv64_4014000000000000 = "100000000010100000000000000000000000000000000000000000000000000";
const sc_lv<32> kernel_jacobi_2d_imper::ap_const_lv32_1B = "11011";
const sc_lv<5> kernel_jacobi_2d_imper::ap_const_lv5_14 = "10100";
const sc_lv<5> kernel_jacobi_2d_imper::ap_const_lv5_1 = "1";
const sc_lv<10> kernel_jacobi_2d_imper::ap_const_lv10_3E7 = "1111100111";
const sc_lv<10> kernel_jacobi_2d_imper::ap_const_lv10_3FF = "1111111111";
const sc_lv<20> kernel_jacobi_2d_imper::ap_const_lv20_3E8 = "1111101000";
const bool kernel_jacobi_2d_imper::ap_const_boolean_1 = true;

kernel_jacobi_2d_imper::kernel_jacobi_2d_imper(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kernel_jacobi_2d_bkb_U1 = new kernel_jacobi_2d_bkb<1,5,64,64,64>("kernel_jacobi_2d_bkb_U1");
    kernel_jacobi_2d_bkb_U1->clk(ap_clk);
    kernel_jacobi_2d_bkb_U1->reset(ap_rst);
    kernel_jacobi_2d_bkb_U1->din0(grp_fu_173_p0);
    kernel_jacobi_2d_bkb_U1->din1(grp_fu_173_p1);
    kernel_jacobi_2d_bkb_U1->ce(ap_var_for_const0);
    kernel_jacobi_2d_bkb_U1->dout(grp_fu_173_p2);
    kernel_jacobi_2d_cud_U2 = new kernel_jacobi_2d_cud<1,22,64,64,64>("kernel_jacobi_2d_cud_U2");
    kernel_jacobi_2d_cud_U2->clk(ap_clk);
    kernel_jacobi_2d_cud_U2->reset(ap_rst);
    kernel_jacobi_2d_cud_U2->din0(reg_189);
    kernel_jacobi_2d_cud_U2->din1(ap_var_for_const1);
    kernel_jacobi_2d_cud_U2->ce(ap_var_for_const0);
    kernel_jacobi_2d_cud_U2->dout(grp_fu_177_p2);
    kernel_jacobi_2d_dEe_U3 = new kernel_jacobi_2d_dEe<1,1,10,11,20>("kernel_jacobi_2d_dEe_U3");
    kernel_jacobi_2d_dEe_U3->din0(tmp_1_fu_356_p0);
    kernel_jacobi_2d_dEe_U3->din1(tmp_1_fu_356_p1);
    kernel_jacobi_2d_dEe_U3->dout(tmp_1_fu_356_p2);
    kernel_jacobi_2d_dEe_U4 = new kernel_jacobi_2d_dEe<1,1,10,11,20>("kernel_jacobi_2d_dEe_U4");
    kernel_jacobi_2d_dEe_U4->din0(tmp_2_fu_362_p0);
    kernel_jacobi_2d_dEe_U4->din1(tmp_2_fu_362_p1);
    kernel_jacobi_2d_dEe_U4->dout(tmp_2_fu_362_p2);
    kernel_jacobi_2d_dEe_U5 = new kernel_jacobi_2d_dEe<1,1,10,11,20>("kernel_jacobi_2d_dEe_U5");
    kernel_jacobi_2d_dEe_U5->din0(tmp_4_fu_368_p0);
    kernel_jacobi_2d_dEe_U5->din1(tmp_4_fu_368_p1);
    kernel_jacobi_2d_dEe_U5->dout(tmp_4_fu_368_p2);
    kernel_jacobi_2d_dEe_U6 = new kernel_jacobi_2d_dEe<1,1,10,11,20>("kernel_jacobi_2d_dEe_U6");
    kernel_jacobi_2d_dEe_U6->din0(tmp_6_fu_374_p0);
    kernel_jacobi_2d_dEe_U6->din1(tmp_6_fu_374_p1);
    kernel_jacobi_2d_dEe_U6->dout(tmp_6_fu_374_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( tmp_18_cast_fu_252_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_22_cast_fu_302_p1 );
    sensitive << ( tmp_20_cast_fu_310_p1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_23_cast_reg_492 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( tmp_21_cast_fu_282_p1 );
    sensitive << ( tmp_19_cast_fu_306_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_A_d1);
    sensitive << ( B_q0 );
    sensitive << ( ap_CS_fsm_state56 );

    SC_METHOD(thread_A_we1);
    sensitive << ( ap_CS_fsm_state56 );

    SC_METHOD(thread_B_address0);
    sensitive << ( tmp_18_cast_reg_416 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( tmp_23_cast_fu_339_p1 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_B_d0);
    sensitive << ( tmp_12_reg_471 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_B_we0);
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_195_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_195_p2 );

    SC_METHOD(thread_exitcond1_fu_314_p2);
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( i_1_reg_150 );

    SC_METHOD(thread_exitcond2_fu_237_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_reg_139 );

    SC_METHOD(thread_exitcond3_fu_207_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_128 );

    SC_METHOD(thread_exitcond4_fu_195_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_reg_117 );

    SC_METHOD(thread_exitcond_fu_324_p2);
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( j_1_reg_162 );

    SC_METHOD(thread_grp_fu_173_p0);
    sensitive << ( reg_182 );
    sensitive << ( reg_189 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_grp_fu_173_p1);
    sensitive << ( reg_182 );
    sensitive << ( A_load_1_reg_451 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_i_2_fu_217_p2);
    sensitive << ( i_reg_128 );

    SC_METHOD(thread_i_3_fu_350_p2);
    sensitive << ( i_1_reg_150 );

    SC_METHOD(thread_j_2_fu_287_p2);
    sensitive << ( j_reg_139 );

    SC_METHOD(thread_j_3_fu_344_p2);
    sensitive << ( j_1_reg_162 );

    SC_METHOD(thread_t_1_fu_201_p2);
    sensitive << ( t_reg_117 );

    SC_METHOD(thread_tmp_13_cast_fu_330_p1);
    sensitive << ( j_1_reg_162 );

    SC_METHOD(thread_tmp_13_fu_262_p2);
    sensitive << ( tmp_4_reg_408 );
    sensitive << ( tmp_7_cast_fu_243_p1 );

    SC_METHOD(thread_tmp_14_fu_277_p2);
    sensitive << ( tmp_1_reg_391 );
    sensitive << ( tmp_9_cast_fu_273_p1 );

    SC_METHOD(thread_tmp_15_fu_297_p2);
    sensitive << ( tmp_1_reg_391 );
    sensitive << ( tmp_1_cast_fu_293_p1 );

    SC_METHOD(thread_tmp_16_fu_334_p2);
    sensitive << ( tmp_6_reg_484 );
    sensitive << ( tmp_13_cast_fu_330_p1 );

    SC_METHOD(thread_tmp_18_cast_fu_252_p1);
    sensitive << ( tmp_7_fu_247_p2 );

    SC_METHOD(thread_tmp_19_cast_fu_306_p1);
    sensitive << ( tmp_9_reg_426 );

    SC_METHOD(thread_tmp_1_cast_fu_293_p1);
    sensitive << ( j_2_fu_287_p2 );

    SC_METHOD(thread_tmp_1_fu_356_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_356_p00 );

    SC_METHOD(thread_tmp_1_fu_356_p00);
    sensitive << ( i_reg_128 );

    SC_METHOD(thread_tmp_1_fu_356_p1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_20_cast_fu_310_p1);
    sensitive << ( tmp_13_reg_431 );

    SC_METHOD(thread_tmp_21_cast_fu_282_p1);
    sensitive << ( tmp_14_fu_277_p2 );

    SC_METHOD(thread_tmp_22_cast_fu_302_p1);
    sensitive << ( tmp_15_reg_446 );

    SC_METHOD(thread_tmp_23_cast_fu_339_p1);
    sensitive << ( tmp_16_fu_334_p2 );

    SC_METHOD(thread_tmp_2_fu_362_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_2_fu_362_p00 );

    SC_METHOD(thread_tmp_2_fu_362_p00);
    sensitive << ( i_2_fu_217_p2 );

    SC_METHOD(thread_tmp_2_fu_362_p1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_3_fu_227_p2);
    sensitive << ( i_reg_128 );

    SC_METHOD(thread_tmp_4_fu_368_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_fu_368_p00 );

    SC_METHOD(thread_tmp_4_fu_368_p00);
    sensitive << ( tmp_3_fu_227_p2 );

    SC_METHOD(thread_tmp_4_fu_368_p1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_6_fu_374_p0);
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( tmp_6_fu_374_p00 );

    SC_METHOD(thread_tmp_6_fu_374_p00);
    sensitive << ( i_1_reg_150 );

    SC_METHOD(thread_tmp_6_fu_374_p1);
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_tmp_7_cast_fu_243_p1);
    sensitive << ( j_reg_139 );

    SC_METHOD(thread_tmp_7_fu_247_p2);
    sensitive << ( tmp_1_reg_391 );
    sensitive << ( tmp_7_cast_fu_243_p1 );

    SC_METHOD(thread_tmp_8_fu_267_p2);
    sensitive << ( j_reg_139 );

    SC_METHOD(thread_tmp_9_cast_fu_273_p1);
    sensitive << ( tmp_8_fu_267_p2 );

    SC_METHOD(thread_tmp_9_fu_257_p2);
    sensitive << ( tmp_2_reg_403 );
    sensitive << ( tmp_7_cast_fu_243_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_207_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_237_p2 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( exitcond1_fu_314_p2 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( exitcond_fu_324_p2 );
    sensitive << ( exitcond4_fu_195_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel_jacobi_2d_imper_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, tsteps, "(port)tsteps");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_we1, "(port)A_we1");
    sc_trace(mVcdFile, A_d1, "(port)A_d1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_we0, "(port)B_we0");
    sc_trace(mVcdFile, B_d0, "(port)B_d0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_182, "reg_182");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_173_p2, "grp_fu_173_p2");
    sc_trace(mVcdFile, reg_189, "reg_189");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, t_1_fu_201_p2, "t_1_fu_201_p2");
    sc_trace(mVcdFile, t_1_reg_383, "t_1_reg_383");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_fu_356_p2, "tmp_1_fu_356_p2");
    sc_trace(mVcdFile, tmp_1_reg_391, "tmp_1_reg_391");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond3_fu_207_p2, "exitcond3_fu_207_p2");
    sc_trace(mVcdFile, i_2_fu_217_p2, "i_2_fu_217_p2");
    sc_trace(mVcdFile, i_2_reg_398, "i_2_reg_398");
    sc_trace(mVcdFile, tmp_2_fu_362_p2, "tmp_2_fu_362_p2");
    sc_trace(mVcdFile, tmp_2_reg_403, "tmp_2_reg_403");
    sc_trace(mVcdFile, tmp_4_fu_368_p2, "tmp_4_fu_368_p2");
    sc_trace(mVcdFile, tmp_4_reg_408, "tmp_4_reg_408");
    sc_trace(mVcdFile, tmp_18_cast_fu_252_p1, "tmp_18_cast_fu_252_p1");
    sc_trace(mVcdFile, tmp_18_cast_reg_416, "tmp_18_cast_reg_416");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond2_fu_237_p2, "exitcond2_fu_237_p2");
    sc_trace(mVcdFile, tmp_9_fu_257_p2, "tmp_9_fu_257_p2");
    sc_trace(mVcdFile, tmp_9_reg_426, "tmp_9_reg_426");
    sc_trace(mVcdFile, tmp_13_fu_262_p2, "tmp_13_fu_262_p2");
    sc_trace(mVcdFile, tmp_13_reg_431, "tmp_13_reg_431");
    sc_trace(mVcdFile, j_2_fu_287_p2, "j_2_fu_287_p2");
    sc_trace(mVcdFile, j_2_reg_441, "j_2_reg_441");
    sc_trace(mVcdFile, tmp_15_fu_297_p2, "tmp_15_fu_297_p2");
    sc_trace(mVcdFile, tmp_15_reg_446, "tmp_15_reg_446");
    sc_trace(mVcdFile, A_load_1_reg_451, "A_load_1_reg_451");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_fu_177_p2, "grp_fu_177_p2");
    sc_trace(mVcdFile, tmp_12_reg_471, "tmp_12_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, tmp_6_fu_374_p2, "tmp_6_fu_374_p2");
    sc_trace(mVcdFile, tmp_6_reg_484, "tmp_6_reg_484");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, exitcond1_fu_314_p2, "exitcond1_fu_314_p2");
    sc_trace(mVcdFile, tmp_23_cast_fu_339_p1, "tmp_23_cast_fu_339_p1");
    sc_trace(mVcdFile, tmp_23_cast_reg_492, "tmp_23_cast_reg_492");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, exitcond_fu_324_p2, "exitcond_fu_324_p2");
    sc_trace(mVcdFile, j_3_fu_344_p2, "j_3_fu_344_p2");
    sc_trace(mVcdFile, j_3_reg_502, "j_3_reg_502");
    sc_trace(mVcdFile, i_3_fu_350_p2, "i_3_fu_350_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, t_reg_117, "t_reg_117");
    sc_trace(mVcdFile, i_reg_128, "i_reg_128");
    sc_trace(mVcdFile, exitcond4_fu_195_p2, "exitcond4_fu_195_p2");
    sc_trace(mVcdFile, j_reg_139, "j_reg_139");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, i_1_reg_150, "i_1_reg_150");
    sc_trace(mVcdFile, j_1_reg_162, "j_1_reg_162");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, tmp_21_cast_fu_282_p1, "tmp_21_cast_fu_282_p1");
    sc_trace(mVcdFile, tmp_22_cast_fu_302_p1, "tmp_22_cast_fu_302_p1");
    sc_trace(mVcdFile, tmp_19_cast_fu_306_p1, "tmp_19_cast_fu_306_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_310_p1, "tmp_20_cast_fu_310_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, grp_fu_173_p0, "grp_fu_173_p0");
    sc_trace(mVcdFile, grp_fu_173_p1, "grp_fu_173_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, tmp_3_fu_227_p2, "tmp_3_fu_227_p2");
    sc_trace(mVcdFile, tmp_7_cast_fu_243_p1, "tmp_7_cast_fu_243_p1");
    sc_trace(mVcdFile, tmp_7_fu_247_p2, "tmp_7_fu_247_p2");
    sc_trace(mVcdFile, tmp_8_fu_267_p2, "tmp_8_fu_267_p2");
    sc_trace(mVcdFile, tmp_9_cast_fu_273_p1, "tmp_9_cast_fu_273_p1");
    sc_trace(mVcdFile, tmp_14_fu_277_p2, "tmp_14_fu_277_p2");
    sc_trace(mVcdFile, tmp_1_cast_fu_293_p1, "tmp_1_cast_fu_293_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_330_p1, "tmp_13_cast_fu_330_p1");
    sc_trace(mVcdFile, tmp_16_fu_334_p2, "tmp_16_fu_334_p2");
    sc_trace(mVcdFile, tmp_1_fu_356_p0, "tmp_1_fu_356_p0");
    sc_trace(mVcdFile, tmp_1_fu_356_p1, "tmp_1_fu_356_p1");
    sc_trace(mVcdFile, tmp_2_fu_362_p0, "tmp_2_fu_362_p0");
    sc_trace(mVcdFile, tmp_2_fu_362_p1, "tmp_2_fu_362_p1");
    sc_trace(mVcdFile, tmp_4_fu_368_p0, "tmp_4_fu_368_p0");
    sc_trace(mVcdFile, tmp_4_fu_368_p1, "tmp_4_fu_368_p1");
    sc_trace(mVcdFile, tmp_6_fu_374_p0, "tmp_6_fu_374_p0");
    sc_trace(mVcdFile, tmp_6_fu_374_p1, "tmp_6_fu_374_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp_1_fu_356_p00, "tmp_1_fu_356_p00");
    sc_trace(mVcdFile, tmp_2_fu_362_p00, "tmp_2_fu_362_p00");
    sc_trace(mVcdFile, tmp_4_fu_368_p00, "tmp_4_fu_368_p00");
    sc_trace(mVcdFile, tmp_6_fu_374_p00, "tmp_6_fu_374_p00");
#endif

    }
    mHdltvinHandle.open("kernel_jacobi_2d_imper.hdltvin.dat");
    mHdltvoutHandle.open("kernel_jacobi_2d_imper.hdltvout.dat");
}

kernel_jacobi_2d_imper::~kernel_jacobi_2d_imper() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete kernel_jacobi_2d_bkb_U1;
    delete kernel_jacobi_2d_cud_U2;
    delete kernel_jacobi_2d_dEe_U3;
    delete kernel_jacobi_2d_dEe_U4;
    delete kernel_jacobi_2d_dEe_U5;
    delete kernel_jacobi_2d_dEe_U6;
}

void kernel_jacobi_2d_imper::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void kernel_jacobi_2d_imper::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_4014000000000000;
}

void kernel_jacobi_2d_imper::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_207_p2.read(), ap_const_lv1_1))) {
        i_1_reg_150 = ap_const_lv10_1;
    } else if ((esl_seteq<1,1,1>(exitcond_fu_324_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()))) {
        i_1_reg_150 = i_3_fu_350_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_195_p2.read(), ap_const_lv1_0))) {
        i_reg_128 = ap_const_lv10_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_237_p2.read(), ap_const_lv1_1))) {
        i_reg_128 = i_2_reg_398.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_314_p2.read(), ap_const_lv1_0))) {
        j_1_reg_162 = ap_const_lv10_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        j_1_reg_162 = j_3_reg_502.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_207_p2.read(), ap_const_lv1_0))) {
        j_reg_139 = ap_const_lv10_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        j_reg_139 = j_2_reg_441.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        reg_182 = A_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        reg_182 = A_q0.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_314_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()))) {
        t_reg_117 = t_1_reg_383.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        t_reg_117 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        A_load_1_reg_451 = A_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_207_p2.read(), ap_const_lv1_0))) {
        i_2_reg_398 = i_2_fu_217_p2.read();
        tmp_1_reg_391 = tmp_1_fu_356_p2.read();
        tmp_2_reg_403 = tmp_2_fu_362_p2.read();
        tmp_4_reg_408 = tmp_4_fu_368_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_237_p2.read(), ap_const_lv1_0))) {
        j_2_reg_441 = j_2_fu_287_p2.read();
        tmp_13_reg_431 = tmp_13_fu_262_p2.read();
        tmp_15_reg_446 = tmp_15_fu_297_p2.read();
        tmp_18_cast_reg_416 = tmp_18_cast_fu_252_p1.read();
        tmp_9_reg_426 = tmp_9_fu_257_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && esl_seteq<1,1,1>(exitcond_fu_324_p2.read(), ap_const_lv1_0))) {
        j_3_reg_502 = j_3_fu_344_p2.read();
        tmp_23_cast_reg_492 = tmp_23_cast_fu_339_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        reg_189 = grp_fu_173_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_1_reg_383 = t_1_fu_201_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        tmp_12_reg_471 = grp_fu_177_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && esl_seteq<1,1,1>(exitcond1_fu_314_p2.read(), ap_const_lv1_0))) {
        tmp_6_reg_484 = tmp_6_fu_374_p2.read();
    }
}

void kernel_jacobi_2d_imper::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        A_address0 =  (sc_lv<20>) (tmp_20_cast_fu_310_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        A_address0 =  (sc_lv<20>) (tmp_22_cast_fu_302_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_address0 =  (sc_lv<20>) (tmp_18_cast_fu_252_p1.read());
    } else {
        A_address0 = "XXXXXXXXXXXXXXXXXXXX";
    }
}

void kernel_jacobi_2d_imper::thread_A_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read())) {
        A_address1 =  (sc_lv<20>) (tmp_23_cast_reg_492.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        A_address1 =  (sc_lv<20>) (tmp_19_cast_fu_306_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_address1 =  (sc_lv<20>) (tmp_21_cast_fu_282_p1.read());
    } else {
        A_address1 = "XXXXXXXXXXXXXXXXXXXX";
    }
}

void kernel_jacobi_2d_imper::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper::thread_A_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper::thread_A_d1() {
    A_d1 = B_q0.read();
}

void kernel_jacobi_2d_imper::thread_A_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read())) {
        A_we1 = ap_const_logic_1;
    } else {
        A_we1 = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper::thread_B_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        B_address0 =  (sc_lv<20>) (tmp_23_cast_fu_339_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        B_address0 =  (sc_lv<20>) (tmp_18_cast_reg_416.read());
    } else {
        B_address0 = "XXXXXXXXXXXXXXXXXXXX";
    }
}

void kernel_jacobi_2d_imper::thread_B_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()))) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper::thread_B_d0() {
    B_d0 = tmp_12_reg_471.read();
}

void kernel_jacobi_2d_imper::thread_B_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        B_we0 = ap_const_logic_1;
    } else {
        B_we0 = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void kernel_jacobi_2d_imper::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void kernel_jacobi_2d_imper::thread_ap_done() {
    if ((esl_seteq<1,1,1>(exitcond4_fu_195_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond4_fu_195_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel_jacobi_2d_imper::thread_exitcond1_fu_314_p2() {
    exitcond1_fu_314_p2 = (!i_1_reg_150.read().is_01() || !ap_const_lv10_3E7.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_150.read() == ap_const_lv10_3E7);
}

void kernel_jacobi_2d_imper::thread_exitcond2_fu_237_p2() {
    exitcond2_fu_237_p2 = (!j_reg_139.read().is_01() || !ap_const_lv10_3E7.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_139.read() == ap_const_lv10_3E7);
}

void kernel_jacobi_2d_imper::thread_exitcond3_fu_207_p2() {
    exitcond3_fu_207_p2 = (!i_reg_128.read().is_01() || !ap_const_lv10_3E7.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_128.read() == ap_const_lv10_3E7);
}

void kernel_jacobi_2d_imper::thread_exitcond4_fu_195_p2() {
    exitcond4_fu_195_p2 = (!t_reg_117.read().is_01() || !ap_const_lv5_14.is_01())? sc_lv<1>(): sc_lv<1>(t_reg_117.read() == ap_const_lv5_14);
}

void kernel_jacobi_2d_imper::thread_exitcond_fu_324_p2() {
    exitcond_fu_324_p2 = (!j_1_reg_162.read().is_01() || !ap_const_lv10_3E7.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_162.read() == ap_const_lv10_3E7);
}

void kernel_jacobi_2d_imper::thread_grp_fu_173_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        grp_fu_173_p0 = reg_189.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_173_p0 = reg_182.read();
    } else {
        grp_fu_173_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel_jacobi_2d_imper::thread_grp_fu_173_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        grp_fu_173_p1 = reg_182.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_173_p1 = A_load_1_reg_451.read();
    } else {
        grp_fu_173_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel_jacobi_2d_imper::thread_i_2_fu_217_p2() {
    i_2_fu_217_p2 = (!i_reg_128.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_128.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void kernel_jacobi_2d_imper::thread_i_3_fu_350_p2() {
    i_3_fu_350_p2 = (!i_1_reg_150.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_1_reg_150.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void kernel_jacobi_2d_imper::thread_j_2_fu_287_p2() {
    j_2_fu_287_p2 = (!j_reg_139.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_139.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void kernel_jacobi_2d_imper::thread_j_3_fu_344_p2() {
    j_3_fu_344_p2 = (!j_1_reg_162.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_1_reg_162.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void kernel_jacobi_2d_imper::thread_t_1_fu_201_p2() {
    t_1_fu_201_p2 = (!t_reg_117.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(t_reg_117.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void kernel_jacobi_2d_imper::thread_tmp_13_cast_fu_330_p1() {
    tmp_13_cast_fu_330_p1 = esl_zext<20,10>(j_1_reg_162.read());
}

void kernel_jacobi_2d_imper::thread_tmp_13_fu_262_p2() {
    tmp_13_fu_262_p2 = (!tmp_4_reg_408.read().is_01() || !tmp_7_cast_fu_243_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_4_reg_408.read()) + sc_biguint<20>(tmp_7_cast_fu_243_p1.read()));
}

void kernel_jacobi_2d_imper::thread_tmp_14_fu_277_p2() {
    tmp_14_fu_277_p2 = (!tmp_1_reg_391.read().is_01() || !tmp_9_cast_fu_273_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_1_reg_391.read()) + sc_biguint<20>(tmp_9_cast_fu_273_p1.read()));
}

void kernel_jacobi_2d_imper::thread_tmp_15_fu_297_p2() {
    tmp_15_fu_297_p2 = (!tmp_1_reg_391.read().is_01() || !tmp_1_cast_fu_293_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_1_reg_391.read()) + sc_biguint<20>(tmp_1_cast_fu_293_p1.read()));
}

void kernel_jacobi_2d_imper::thread_tmp_16_fu_334_p2() {
    tmp_16_fu_334_p2 = (!tmp_6_reg_484.read().is_01() || !tmp_13_cast_fu_330_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_6_reg_484.read()) + sc_biguint<20>(tmp_13_cast_fu_330_p1.read()));
}

void kernel_jacobi_2d_imper::thread_tmp_18_cast_fu_252_p1() {
    tmp_18_cast_fu_252_p1 = esl_zext<64,20>(tmp_7_fu_247_p2.read());
}

void kernel_jacobi_2d_imper::thread_tmp_19_cast_fu_306_p1() {
    tmp_19_cast_fu_306_p1 = esl_zext<64,20>(tmp_9_reg_426.read());
}

void kernel_jacobi_2d_imper::thread_tmp_1_cast_fu_293_p1() {
    tmp_1_cast_fu_293_p1 = esl_zext<20,10>(j_2_fu_287_p2.read());
}

void kernel_jacobi_2d_imper::thread_tmp_1_fu_356_p0() {
    tmp_1_fu_356_p0 =  (sc_lv<10>) (tmp_1_fu_356_p00.read());
}

void kernel_jacobi_2d_imper::thread_tmp_1_fu_356_p00() {
    tmp_1_fu_356_p00 = esl_zext<20,10>(i_reg_128.read());
}

void kernel_jacobi_2d_imper::thread_tmp_1_fu_356_p1() {
    tmp_1_fu_356_p1 =  (sc_lv<11>) (ap_const_lv20_3E8);
}

void kernel_jacobi_2d_imper::thread_tmp_20_cast_fu_310_p1() {
    tmp_20_cast_fu_310_p1 = esl_zext<64,20>(tmp_13_reg_431.read());
}

void kernel_jacobi_2d_imper::thread_tmp_21_cast_fu_282_p1() {
    tmp_21_cast_fu_282_p1 = esl_zext<64,20>(tmp_14_fu_277_p2.read());
}

void kernel_jacobi_2d_imper::thread_tmp_22_cast_fu_302_p1() {
    tmp_22_cast_fu_302_p1 = esl_zext<64,20>(tmp_15_reg_446.read());
}

void kernel_jacobi_2d_imper::thread_tmp_23_cast_fu_339_p1() {
    tmp_23_cast_fu_339_p1 = esl_zext<64,20>(tmp_16_fu_334_p2.read());
}

void kernel_jacobi_2d_imper::thread_tmp_2_fu_362_p0() {
    tmp_2_fu_362_p0 =  (sc_lv<10>) (tmp_2_fu_362_p00.read());
}

void kernel_jacobi_2d_imper::thread_tmp_2_fu_362_p00() {
    tmp_2_fu_362_p00 = esl_zext<20,10>(i_2_fu_217_p2.read());
}

void kernel_jacobi_2d_imper::thread_tmp_2_fu_362_p1() {
    tmp_2_fu_362_p1 =  (sc_lv<11>) (ap_const_lv20_3E8);
}

void kernel_jacobi_2d_imper::thread_tmp_3_fu_227_p2() {
    tmp_3_fu_227_p2 = (!i_reg_128.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_128.read()) + sc_bigint<10>(ap_const_lv10_3FF));
}

void kernel_jacobi_2d_imper::thread_tmp_4_fu_368_p0() {
    tmp_4_fu_368_p0 =  (sc_lv<10>) (tmp_4_fu_368_p00.read());
}

void kernel_jacobi_2d_imper::thread_tmp_4_fu_368_p00() {
    tmp_4_fu_368_p00 = esl_zext<20,10>(tmp_3_fu_227_p2.read());
}

void kernel_jacobi_2d_imper::thread_tmp_4_fu_368_p1() {
    tmp_4_fu_368_p1 =  (sc_lv<11>) (ap_const_lv20_3E8);
}

void kernel_jacobi_2d_imper::thread_tmp_6_fu_374_p0() {
    tmp_6_fu_374_p0 =  (sc_lv<10>) (tmp_6_fu_374_p00.read());
}

void kernel_jacobi_2d_imper::thread_tmp_6_fu_374_p00() {
    tmp_6_fu_374_p00 = esl_zext<20,10>(i_1_reg_150.read());
}

void kernel_jacobi_2d_imper::thread_tmp_6_fu_374_p1() {
    tmp_6_fu_374_p1 =  (sc_lv<11>) (ap_const_lv20_3E8);
}

void kernel_jacobi_2d_imper::thread_tmp_7_cast_fu_243_p1() {
    tmp_7_cast_fu_243_p1 = esl_zext<20,10>(j_reg_139.read());
}

void kernel_jacobi_2d_imper::thread_tmp_7_fu_247_p2() {
    tmp_7_fu_247_p2 = (!tmp_1_reg_391.read().is_01() || !tmp_7_cast_fu_243_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_1_reg_391.read()) + sc_biguint<20>(tmp_7_cast_fu_243_p1.read()));
}

void kernel_jacobi_2d_imper::thread_tmp_8_fu_267_p2() {
    tmp_8_fu_267_p2 = (!j_reg_139.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_139.read()) + sc_bigint<10>(ap_const_lv10_3FF));
}

void kernel_jacobi_2d_imper::thread_tmp_9_cast_fu_273_p1() {
    tmp_9_cast_fu_273_p1 = esl_zext<20,10>(tmp_8_fu_267_p2.read());
}

void kernel_jacobi_2d_imper::thread_tmp_9_fu_257_p2() {
    tmp_9_fu_257_p2 = (!tmp_2_reg_403.read().is_01() || !tmp_7_cast_fu_243_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_2_reg_403.read()) + sc_biguint<20>(tmp_7_cast_fu_243_p1.read()));
}

void kernel_jacobi_2d_imper::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond4_fu_195_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_207_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state52;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_237_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 2251799813685248 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_314_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state53;
            }
            break;
        case 4503599627370496 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_324_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()))) {
                ap_NS_fsm = ap_ST_fsm_state52;
            } else {
                ap_NS_fsm = ap_ST_fsm_state54;
            }
            break;
        case 9007199254740992 : 
            ap_NS_fsm = ap_ST_fsm_state55;
            break;
        case 18014398509481984 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 36028797018963968 : 
            ap_NS_fsm = ap_ST_fsm_state57;
            break;
        case 72057594037927936 : 
            ap_NS_fsm = ap_ST_fsm_state53;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<57>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void kernel_jacobi_2d_imper::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"tsteps\" :  \"" << tsteps.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"n\" :  \"" << n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address1\" :  \"" << A_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce1\" :  \"" << A_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_we1\" :  \"" << A_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_d1\" :  \"" << A_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q1\" :  \"" << A_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address0\" :  \"" << B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce0\" :  \"" << B_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_we0\" :  \"" << B_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_d0\" :  \"" << B_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q0\" :  \"" << B_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

