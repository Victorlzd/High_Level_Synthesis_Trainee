// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_jacobi_2d_imper,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.171000,HLS_SYN_LAT=2589830021,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=4,HLS_SYN_FF=8186,HLS_SYN_LUT=5461,HLS_VERSION=2018_2}" *)

module kernel_jacobi_2d_imper (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tsteps,
        n,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_we1,
        A_d1,
        A_q1,
        B_address0,
        B_ce0,
        B_we0,
        B_d0,
        B_q0
);

parameter    ap_ST_fsm_state1 = 141'd1;
parameter    ap_ST_fsm_state2 = 141'd2;
parameter    ap_ST_fsm_state3 = 141'd4;
parameter    ap_ST_fsm_state4 = 141'd8;
parameter    ap_ST_fsm_state5 = 141'd16;
parameter    ap_ST_fsm_state6 = 141'd32;
parameter    ap_ST_fsm_state7 = 141'd64;
parameter    ap_ST_fsm_state8 = 141'd128;
parameter    ap_ST_fsm_state9 = 141'd256;
parameter    ap_ST_fsm_state10 = 141'd512;
parameter    ap_ST_fsm_state11 = 141'd1024;
parameter    ap_ST_fsm_state12 = 141'd2048;
parameter    ap_ST_fsm_state13 = 141'd4096;
parameter    ap_ST_fsm_state14 = 141'd8192;
parameter    ap_ST_fsm_state15 = 141'd16384;
parameter    ap_ST_fsm_state16 = 141'd32768;
parameter    ap_ST_fsm_state17 = 141'd65536;
parameter    ap_ST_fsm_state18 = 141'd131072;
parameter    ap_ST_fsm_state19 = 141'd262144;
parameter    ap_ST_fsm_state20 = 141'd524288;
parameter    ap_ST_fsm_state21 = 141'd1048576;
parameter    ap_ST_fsm_state22 = 141'd2097152;
parameter    ap_ST_fsm_state23 = 141'd4194304;
parameter    ap_ST_fsm_state24 = 141'd8388608;
parameter    ap_ST_fsm_state25 = 141'd16777216;
parameter    ap_ST_fsm_state26 = 141'd33554432;
parameter    ap_ST_fsm_state27 = 141'd67108864;
parameter    ap_ST_fsm_state28 = 141'd134217728;
parameter    ap_ST_fsm_state29 = 141'd268435456;
parameter    ap_ST_fsm_state30 = 141'd536870912;
parameter    ap_ST_fsm_state31 = 141'd1073741824;
parameter    ap_ST_fsm_state32 = 141'd2147483648;
parameter    ap_ST_fsm_state33 = 141'd4294967296;
parameter    ap_ST_fsm_state34 = 141'd8589934592;
parameter    ap_ST_fsm_state35 = 141'd17179869184;
parameter    ap_ST_fsm_state36 = 141'd34359738368;
parameter    ap_ST_fsm_state37 = 141'd68719476736;
parameter    ap_ST_fsm_state38 = 141'd137438953472;
parameter    ap_ST_fsm_state39 = 141'd274877906944;
parameter    ap_ST_fsm_state40 = 141'd549755813888;
parameter    ap_ST_fsm_state41 = 141'd1099511627776;
parameter    ap_ST_fsm_state42 = 141'd2199023255552;
parameter    ap_ST_fsm_state43 = 141'd4398046511104;
parameter    ap_ST_fsm_state44 = 141'd8796093022208;
parameter    ap_ST_fsm_state45 = 141'd17592186044416;
parameter    ap_ST_fsm_state46 = 141'd35184372088832;
parameter    ap_ST_fsm_state47 = 141'd70368744177664;
parameter    ap_ST_fsm_state48 = 141'd140737488355328;
parameter    ap_ST_fsm_state49 = 141'd281474976710656;
parameter    ap_ST_fsm_state50 = 141'd562949953421312;
parameter    ap_ST_fsm_state51 = 141'd1125899906842624;
parameter    ap_ST_fsm_state52 = 141'd2251799813685248;
parameter    ap_ST_fsm_state53 = 141'd4503599627370496;
parameter    ap_ST_fsm_state54 = 141'd9007199254740992;
parameter    ap_ST_fsm_state55 = 141'd18014398509481984;
parameter    ap_ST_fsm_state56 = 141'd36028797018963968;
parameter    ap_ST_fsm_state57 = 141'd72057594037927936;
parameter    ap_ST_fsm_state58 = 141'd144115188075855872;
parameter    ap_ST_fsm_state59 = 141'd288230376151711744;
parameter    ap_ST_fsm_state60 = 141'd576460752303423488;
parameter    ap_ST_fsm_state61 = 141'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 141'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 141'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 141'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 141'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 141'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 141'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 141'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 141'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 141'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 141'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 141'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 141'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 141'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 141'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 141'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 141'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 141'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 141'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 141'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 141'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 141'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 141'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 141'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 141'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 141'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 141'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 141'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 141'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 141'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 141'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 141'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 141'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 141'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 141'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 141'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 141'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 141'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 141'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 141'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 141'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 141'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 141'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 141'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 141'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 141'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 141'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 141'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 141'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 141'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 141'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 141'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 141'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 141'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 141'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 141'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 141'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 141'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 141'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 141'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 141'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 141'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 141'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 141'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 141'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 141'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 141'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 141'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 141'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 141'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 141'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 141'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 141'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 141'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 141'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 141'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 141'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 141'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 141'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 141'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 141'd1393796574908163946345982392040522594123776;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] tsteps;
input  [31:0] n;
output  [19:0] A_address0;
output   A_ce0;
input  [63:0] A_q0;
output  [19:0] A_address1;
output   A_ce1;
output   A_we1;
output  [63:0] A_d1;
input  [63:0] A_q1;
output  [19:0] B_address0;
output   B_ce0;
output   B_we0;
output  [63:0] B_d0;
input  [63:0] B_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[19:0] A_address0;
reg A_ce0;
reg[19:0] A_address1;
reg A_ce1;
reg A_we1;
reg[19:0] B_address0;
reg B_ce0;
reg B_we0;

(* fsm_encoding = "none" *) reg   [140:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_183;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state55;
wire   [63:0] grp_fu_174_p2;
reg   [63:0] reg_190;
wire    ap_CS_fsm_state69;
wire   [4:0] t_1_fu_202_p2;
reg   [4:0] t_1_reg_377;
wire    ap_CS_fsm_state2;
wire   [9:0] i_2_fu_214_p2;
reg   [9:0] i_2_reg_385;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond3_fu_208_p2;
wire   [9:0] tmp_3_fu_220_p2;
reg   [9:0] tmp_3_reg_391;
wire    ap_CS_fsm_state4;
wire   [19:0] grp_fu_350_p2;
reg   [19:0] tmp_1_reg_411;
wire    ap_CS_fsm_state7;
wire   [19:0] grp_fu_356_p2;
reg   [19:0] tmp_2_reg_418;
wire   [19:0] grp_fu_362_p2;
reg   [19:0] tmp_4_reg_423;
wire   [9:0] tmp_8_fu_242_p2;
reg   [9:0] tmp_8_reg_431;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond2_fu_236_p2;
(* use_dsp48 = "no" *) wire   [19:0] tmp_7_fu_252_p2;
reg   [19:0] tmp_7_reg_436;
wire    ap_CS_fsm_state9;
(* use_dsp48 = "no" *) wire   [19:0] tmp_9_fu_257_p2;
reg   [19:0] tmp_9_reg_441;
(* use_dsp48 = "no" *) wire   [19:0] tmp_12_fu_262_p2;
reg   [19:0] tmp_12_reg_446;
(* use_dsp48 = "no" *) wire   [19:0] tmp_14_fu_270_p2;
reg   [19:0] tmp_14_reg_451;
wire   [9:0] j_2_fu_275_p2;
reg   [9:0] j_2_reg_456;
wire   [63:0] tmp_18_cast_fu_281_p1;
reg   [63:0] tmp_18_cast_reg_462;
wire    ap_CS_fsm_state10;
(* use_dsp48 = "no" *) wire   [19:0] tmp_15_fu_292_p2;
reg   [19:0] tmp_15_reg_477;
reg   [63:0] A_load_1_reg_482;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state72;
wire   [0:0] exitcond1_fu_309_p2;
wire   [19:0] grp_fu_368_p2;
reg   [19:0] tmp_6_reg_515;
wire    ap_CS_fsm_state75;
(* use_dsp48 = "no" *) wire   [19:0] tmp_16_fu_329_p2;
reg   [19:0] tmp_16_reg_523;
wire    ap_CS_fsm_state76;
wire   [0:0] exitcond_fu_319_p2;
wire   [9:0] j_3_fu_334_p2;
reg   [9:0] j_3_reg_528;
wire   [9:0] i_3_fu_340_p2;
wire   [63:0] tmp_23_cast_fu_346_p1;
reg   [63:0] tmp_23_cast_reg_538;
wire    ap_CS_fsm_state77;
reg   [63:0] B_load_reg_548;
wire    ap_CS_fsm_state80;
wire   [63:0] grp_fu_178_p2;
reg   [63:0] tmp_13_reg_553;
wire    ap_CS_fsm_state139;
wire    ap_CS_fsm_state140;
reg   [4:0] t_reg_116;
reg   [9:0] i_reg_127;
wire   [0:0] exitcond4_fu_196_p2;
reg   [9:0] j_reg_139;
wire    ap_CS_fsm_state71;
reg   [9:0] i_1_reg_151;
reg   [9:0] j_1_reg_163;
wire    ap_CS_fsm_state141;
wire   [63:0] tmp_21_cast_fu_285_p1;
wire   [63:0] tmp_22_cast_fu_297_p1;
wire   [63:0] tmp_19_cast_fu_301_p1;
wire   [63:0] tmp_20_cast_fu_305_p1;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state79;
reg   [63:0] grp_fu_174_p0;
reg   [63:0] grp_fu_174_p1;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state81;
wire   [19:0] tmp_7_cast_fu_248_p1;
wire   [19:0] tmp_9_cast_fu_267_p1;
wire   [19:0] tmp_1_cast_fu_289_p1;
wire   [19:0] tmp_12_cast_fu_325_p1;
wire   [9:0] grp_fu_350_p0;
wire   [10:0] grp_fu_350_p1;
wire   [9:0] grp_fu_356_p0;
wire   [10:0] grp_fu_356_p1;
wire   [9:0] grp_fu_362_p0;
wire   [10:0] grp_fu_362_p1;
wire   [9:0] grp_fu_368_p0;
wire   [10:0] grp_fu_368_p1;
reg   [140:0] ap_NS_fsm;
wire   [19:0] grp_fu_350_p00;
wire   [19:0] grp_fu_356_p00;
wire   [19:0] grp_fu_362_p00;
wire   [19:0] grp_fu_368_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 141'd1;
end

kernel_jacobi_2d_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_jacobi_2d_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_174_p0),
    .din1(grp_fu_174_p1),
    .ce(1'b1),
    .dout(grp_fu_174_p2)
);

kernel_jacobi_2d_cud #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_jacobi_2d_cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_load_reg_548),
    .din1(64'd4617315517961601024),
    .ce(1'b1),
    .dout(grp_fu_178_p2)
);

kernel_jacobi_2d_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_jacobi_2d_dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_350_p0),
    .din1(grp_fu_350_p1),
    .ce(1'b1),
    .dout(grp_fu_350_p2)
);

kernel_jacobi_2d_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_jacobi_2d_dEe_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_356_p0),
    .din1(grp_fu_356_p1),
    .ce(1'b1),
    .dout(grp_fu_356_p2)
);

kernel_jacobi_2d_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_jacobi_2d_dEe_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_362_p0),
    .din1(grp_fu_362_p1),
    .ce(1'b1),
    .dout(grp_fu_362_p2)
);

kernel_jacobi_2d_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_jacobi_2d_dEe_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_368_p0),
    .din1(grp_fu_368_p1),
    .ce(1'b1),
    .dout(grp_fu_368_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_208_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_1_reg_151 <= 10'd1;
    end else if (((exitcond_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        i_1_reg_151 <= i_3_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_196_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_127 <= 10'd1;
    end else if (((exitcond2_fu_236_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_reg_127 <= i_2_reg_385;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        j_1_reg_163 <= 10'd1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        j_1_reg_163 <= j_3_reg_528;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j_reg_139 <= 10'd1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        j_reg_139 <= j_2_reg_456;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        reg_183 <= A_q1;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_183 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_309_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
        t_reg_116 <= t_1_reg_377;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_reg_116 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        A_load_1_reg_482 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        B_load_reg_548 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_208_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_2_reg_385 <= i_2_fu_214_p2;
        tmp_3_reg_391 <= tmp_3_fu_220_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j_2_reg_456 <= j_2_fu_275_p2;
        tmp_12_reg_446 <= tmp_12_fu_262_p2;
        tmp_14_reg_451 <= tmp_14_fu_270_p2;
        tmp_7_reg_436 <= tmp_7_fu_252_p2;
        tmp_9_reg_441 <= tmp_9_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        j_3_reg_528 <= j_3_fu_334_p2;
        tmp_16_reg_523 <= tmp_16_fu_329_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_190 <= grp_fu_174_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        t_1_reg_377 <= t_1_fu_202_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        tmp_13_reg_553 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_15_reg_477 <= tmp_15_fu_292_p2;
        tmp_18_cast_reg_462[19 : 0] <= tmp_18_cast_fu_281_p1[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_1_reg_411 <= grp_fu_350_p2;
        tmp_2_reg_418 <= grp_fu_356_p2;
        tmp_4_reg_423 <= grp_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        tmp_23_cast_reg_538[19 : 0] <= tmp_23_cast_fu_346_p1[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        tmp_6_reg_515 <= grp_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_236_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_8_reg_431 <= tmp_8_fu_242_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        A_address0 = tmp_20_cast_fu_305_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        A_address0 = tmp_22_cast_fu_297_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        A_address0 = tmp_18_cast_fu_281_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        A_address1 = tmp_23_cast_reg_538;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        A_address1 = tmp_19_cast_fu_301_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        A_address1 = tmp_21_cast_fu_285_p1;
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state13))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state13))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        A_we1 = 1'b1;
    end else begin
        A_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        B_address0 = tmp_23_cast_fu_346_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        B_address0 = tmp_18_cast_reg_462;
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state70))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        B_we0 = 1'b1;
    end else begin
        B_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_fu_196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_fu_196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_174_p0 = reg_190;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_174_p0 = reg_183;
    end else begin
        grp_fu_174_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_174_p1 = reg_183;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_174_p1 = A_load_1_reg_482;
    end else begin
        grp_fu_174_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond4_fu_196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond3_fu_208_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond2_fu_236_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state72 : begin
            if (((exitcond1_fu_309_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((exitcond_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_d1 = tmp_13_reg_553;

assign B_d0 = reg_190;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond1_fu_309_p2 = ((i_1_reg_151 == 10'd999) ? 1'b1 : 1'b0);

assign exitcond2_fu_236_p2 = ((j_reg_139 == 10'd999) ? 1'b1 : 1'b0);

assign exitcond3_fu_208_p2 = ((i_reg_127 == 10'd999) ? 1'b1 : 1'b0);

assign exitcond4_fu_196_p2 = ((t_reg_116 == 5'd20) ? 1'b1 : 1'b0);

assign exitcond_fu_319_p2 = ((j_1_reg_163 == 10'd999) ? 1'b1 : 1'b0);

assign grp_fu_350_p0 = grp_fu_350_p00;

assign grp_fu_350_p00 = i_reg_127;

assign grp_fu_350_p1 = 20'd1000;

assign grp_fu_356_p0 = grp_fu_356_p00;

assign grp_fu_356_p00 = i_2_reg_385;

assign grp_fu_356_p1 = 20'd1000;

assign grp_fu_362_p0 = grp_fu_362_p00;

assign grp_fu_362_p00 = tmp_3_reg_391;

assign grp_fu_362_p1 = 20'd1000;

assign grp_fu_368_p0 = grp_fu_368_p00;

assign grp_fu_368_p00 = i_1_reg_151;

assign grp_fu_368_p1 = 20'd1000;

assign i_2_fu_214_p2 = (i_reg_127 + 10'd1);

assign i_3_fu_340_p2 = (i_1_reg_151 + 10'd1);

assign j_2_fu_275_p2 = (j_reg_139 + 10'd1);

assign j_3_fu_334_p2 = (j_1_reg_163 + 10'd1);

assign t_1_fu_202_p2 = (t_reg_116 + 5'd1);

assign tmp_12_cast_fu_325_p1 = j_1_reg_163;

assign tmp_12_fu_262_p2 = (tmp_4_reg_423 + tmp_7_cast_fu_248_p1);

assign tmp_14_fu_270_p2 = (tmp_1_reg_411 + tmp_9_cast_fu_267_p1);

assign tmp_15_fu_292_p2 = (tmp_1_reg_411 + tmp_1_cast_fu_289_p1);

assign tmp_16_fu_329_p2 = (tmp_6_reg_515 + tmp_12_cast_fu_325_p1);

assign tmp_18_cast_fu_281_p1 = tmp_7_reg_436;

assign tmp_19_cast_fu_301_p1 = tmp_9_reg_441;

assign tmp_1_cast_fu_289_p1 = j_2_reg_456;

assign tmp_20_cast_fu_305_p1 = tmp_12_reg_446;

assign tmp_21_cast_fu_285_p1 = tmp_14_reg_451;

assign tmp_22_cast_fu_297_p1 = tmp_15_reg_477;

assign tmp_23_cast_fu_346_p1 = tmp_16_reg_523;

assign tmp_3_fu_220_p2 = ($signed(i_reg_127) + $signed(10'd1023));

assign tmp_7_cast_fu_248_p1 = j_reg_139;

assign tmp_7_fu_252_p2 = (tmp_1_reg_411 + tmp_7_cast_fu_248_p1);

assign tmp_8_fu_242_p2 = ($signed(j_reg_139) + $signed(10'd1023));

assign tmp_9_cast_fu_267_p1 = tmp_8_reg_431;

assign tmp_9_fu_257_p2 = (tmp_2_reg_418 + tmp_7_cast_fu_248_p1);

always @ (posedge ap_clk) begin
    tmp_18_cast_reg_462[63:20] <= 44'b00000000000000000000000000000000000000000000;
    tmp_23_cast_reg_538[63:20] <= 44'b00000000000000000000000000000000000000000000;
end

endmodule //kernel_jacobi_2d_imper
