-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity operator_double_div5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of operator_double_div5 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "operator_double_div5,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.839300,HLS_SYN_LAT=29,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=214,HLS_SYN_LUT=985,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv56_2 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_185 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_lut_div5_chunk_fu_157_ap_idle : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_157_ap_ready : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_157_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal p_Repl2_2_reg_665 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_mant_V_fu_212_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_675 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_1_fu_276_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Repl2_1_reg_679 : STD_LOGIC_VECTOR (10 downto 0);
    signal d_chunk_V_fu_446_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_chunk_V_reg_684 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_i_i_reg_689 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_1_i_i_reg_694 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_2_i_i_reg_699 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_3_i_i_reg_704 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_4_i_i_reg_709 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_5_i_i_reg_714 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_6_i_i_reg_719 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_7_i_i_reg_724 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_8_i_i_reg_729 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_9_i_i_reg_734 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_i_i_10_reg_739 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_10_i_i_reg_744 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_11_i_i_reg_749 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_12_i_i_reg_754 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_13_i_i_reg_759 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_14_i_i_reg_764 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_24_15_i_i_reg_769 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_fu_621_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_reg_774 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_fu_625_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_779 : STD_LOGIC_VECTOR (0 downto 0);
    signal q_chunk_V_1_reg_784 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_2_reg_789 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_3_reg_794 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_4_reg_799 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_5_reg_804 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_6_reg_809 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_7_reg_814 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_8_reg_819 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_9_reg_824 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_10_reg_829 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_11_reg_834 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_12_reg_839 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_13_reg_844 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_14_reg_849 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_15_reg_854 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_16_reg_859 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_157_ap_start : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_157_d_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_157_r_in_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_157_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_157_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal new_mant_V_1_fu_629_p19 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_phi_mux_p_Repl2_s_phi_fu_151_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Repl2_s_reg_148 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_block_state20_on_subcall_done : BOOLEAN;
    signal grp_lut_div5_chunk_fu_157_ap_start_reg : STD_LOGIC := '0';
    signal p_Val2_s_fu_190_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_220_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_exp_V_fu_202_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal shift_V_cast_cast_fu_236_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_new_exp_V_1_fu_262_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal new_exp_V_1_fu_256_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_fu_296_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_demorgan_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_V_fu_312_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shift_V_1_fu_318_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shift_V_2_fu_342_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sel_tmp7_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_V_3_fu_350_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal xf_V_5_cast_fu_216_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_3_fu_378_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal xf_V_1_fu_386_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal shift_V_4_fu_370_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_cast_fu_402_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal r_V_20_fu_406_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_cast_fu_394_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_s_fu_398_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal r_V_18_cast_fu_412_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal r_V_21_fu_416_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal xf_V_3_fu_422_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal xf_V_fu_430_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal p_Result_i_i_fu_436_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_s_fu_653_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);

    component lut_div5_chunk IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        d_V : IN STD_LOGIC_VECTOR (2 downto 0);
        r_in_V : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;



begin
    grp_lut_div5_chunk_fu_157 : component lut_div5_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_div5_chunk_fu_157_ap_start,
        ap_done => grp_lut_div5_chunk_fu_157_ap_done,
        ap_idle => grp_lut_div5_chunk_fu_157_ap_idle,
        ap_ready => grp_lut_div5_chunk_fu_157_ap_ready,
        d_V => grp_lut_div5_chunk_fu_157_d_V,
        r_in_V => grp_lut_div5_chunk_fu_157_r_in_V,
        ap_return_0 => grp_lut_div5_chunk_fu_157_ap_return_0,
        ap_return_1 => grp_lut_div5_chunk_fu_157_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_lut_div5_chunk_fu_157_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_div5_chunk_fu_157_ap_start_reg <= ap_const_logic_0;
            else
                if ((((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_1_fu_244_p2 = ap_const_lv1_0)))) then 
                    grp_lut_div5_chunk_fu_157_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_div5_chunk_fu_157_ap_ready = ap_const_logic_1)) then 
                    grp_lut_div5_chunk_fu_157_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_Repl2_s_reg_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_1_fu_244_p2 = ap_const_lv1_1))) then 
                p_Repl2_s_reg_148 <= new_mant_V_fu_212_p1;
            elsif (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_1_reg_675 = ap_const_lv1_0))) then 
                p_Repl2_s_reg_148 <= new_mant_V_1_fu_629_p19;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_1_fu_244_p2 = ap_const_lv1_0))) then
                    d_chunk_V_reg_684(1 downto 0) <= d_chunk_V_fu_446_p1(1 downto 0);
                p_Result_24_10_i_i_reg_744 <= xf_V_fu_430_p2(20 downto 18);
                p_Result_24_11_i_i_reg_749 <= xf_V_fu_430_p2(17 downto 15);
                p_Result_24_12_i_i_reg_754 <= xf_V_fu_430_p2(14 downto 12);
                p_Result_24_13_i_i_reg_759 <= xf_V_fu_430_p2(11 downto 9);
                p_Result_24_14_i_i_reg_764 <= xf_V_fu_430_p2(8 downto 6);
                p_Result_24_15_i_i_reg_769 <= xf_V_fu_430_p2(5 downto 3);
                p_Result_24_1_i_i_reg_694 <= xf_V_fu_430_p2(50 downto 48);
                p_Result_24_2_i_i_reg_699 <= xf_V_fu_430_p2(47 downto 45);
                p_Result_24_3_i_i_reg_704 <= xf_V_fu_430_p2(44 downto 42);
                p_Result_24_4_i_i_reg_709 <= xf_V_fu_430_p2(41 downto 39);
                p_Result_24_5_i_i_reg_714 <= xf_V_fu_430_p2(38 downto 36);
                p_Result_24_6_i_i_reg_719 <= xf_V_fu_430_p2(35 downto 33);
                p_Result_24_7_i_i_reg_724 <= xf_V_fu_430_p2(32 downto 30);
                p_Result_24_8_i_i_reg_729 <= xf_V_fu_430_p2(29 downto 27);
                p_Result_24_9_i_i_reg_734 <= xf_V_fu_430_p2(26 downto 24);
                p_Result_24_i_i_10_reg_739 <= xf_V_fu_430_p2(23 downto 21);
                p_Result_24_i_i_reg_689 <= xf_V_fu_430_p2(53 downto 51);
                tmp_9_reg_774 <= tmp_9_fu_621_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_Repl2_1_reg_679 <= p_Repl2_1_fu_276_p3;
                p_Repl2_2_reg_665 <= p_Val2_s_fu_190_p1(63 downto 63);
                tmp_1_reg_675 <= tmp_1_fu_244_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                q_chunk_V_10_reg_829 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                q_chunk_V_11_reg_834 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                q_chunk_V_12_reg_839 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                q_chunk_V_13_reg_844 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                q_chunk_V_14_reg_849 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                q_chunk_V_15_reg_854 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                q_chunk_V_16_reg_859 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                q_chunk_V_1_reg_784 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                q_chunk_V_2_reg_789 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                q_chunk_V_3_reg_794 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                q_chunk_V_4_reg_799 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                q_chunk_V_5_reg_804 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                q_chunk_V_6_reg_809 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                q_chunk_V_7_reg_814 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                q_chunk_V_8_reg_819 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                q_chunk_V_9_reg_824 <= grp_lut_div5_chunk_fu_157_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then
                reg_185 <= grp_lut_div5_chunk_fu_157_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_10_reg_779 <= tmp_10_fu_625_p1;
            end if;
        end if;
    end process;
    d_chunk_V_reg_684(2) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_lut_div5_chunk_fu_157_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_1_fu_244_p2, ap_CS_fsm_state20, ap_block_state20_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_1_fu_244_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_1_fu_244_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state20_on_subcall_done_assign_proc : process(grp_lut_div5_chunk_fu_157_ap_done, tmp_1_reg_675)
    begin
                ap_block_state20_on_subcall_done <= ((grp_lut_div5_chunk_fu_157_ap_done = ap_const_logic_0) and (tmp_1_reg_675 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state20, ap_block_state20_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_Repl2_s_phi_fu_151_p4_assign_proc : process(tmp_1_reg_675, new_mant_V_1_fu_629_p19, p_Repl2_s_reg_148, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_1_reg_675 = ap_const_lv1_0))) then 
            ap_phi_mux_p_Repl2_s_phi_fu_151_p4 <= new_mant_V_1_fu_629_p19;
        else 
            ap_phi_mux_p_Repl2_s_phi_fu_151_p4 <= p_Repl2_s_reg_148;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state20, ap_block_state20_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= p_Result_s_fu_653_p4;
    d_chunk_V_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_fu_436_p4),3));
    grp_lut_div5_chunk_fu_157_ap_start <= grp_lut_div5_chunk_fu_157_ap_start_reg;

    grp_lut_div5_chunk_fu_157_d_V_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_1_reg_675, d_chunk_V_reg_684, p_Result_24_i_i_reg_689, p_Result_24_1_i_i_reg_694, p_Result_24_2_i_i_reg_699, p_Result_24_3_i_i_reg_704, p_Result_24_4_i_i_reg_709, p_Result_24_5_i_i_reg_714, p_Result_24_6_i_i_reg_719, p_Result_24_7_i_i_reg_724, p_Result_24_8_i_i_reg_729, p_Result_24_9_i_i_reg_734, p_Result_24_i_i_10_reg_739, p_Result_24_10_i_i_reg_744, p_Result_24_11_i_i_reg_749, p_Result_24_12_i_i_reg_754, p_Result_24_13_i_i_reg_759, p_Result_24_14_i_i_reg_764, p_Result_24_15_i_i_reg_769, tmp_9_reg_774, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_1_reg_675 = ap_const_lv1_0))) then 
            grp_lut_div5_chunk_fu_157_d_V <= tmp_9_reg_774;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_15_i_i_reg_769;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_14_i_i_reg_764;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_13_i_i_reg_759;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_12_i_i_reg_754;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_11_i_i_reg_749;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_10_i_i_reg_744;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_i_i_10_reg_739;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_9_i_i_reg_734;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_8_i_i_reg_729;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_7_i_i_reg_724;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_6_i_i_reg_719;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_5_i_i_reg_714;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_4_i_i_reg_709;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_3_i_i_reg_704;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_2_i_i_reg_699;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_1_i_i_reg_694;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_lut_div5_chunk_fu_157_d_V <= p_Result_24_i_i_reg_689;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_157_d_V <= d_chunk_V_reg_684;
        else 
            grp_lut_div5_chunk_fu_157_d_V <= "XXX";
        end if; 
    end process;


    grp_lut_div5_chunk_fu_157_r_in_V_assign_proc : process(reg_185, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, tmp_1_reg_675, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_1_reg_675 = ap_const_lv1_0)))) then 
            grp_lut_div5_chunk_fu_157_r_in_V <= reg_185;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_157_r_in_V <= ap_const_lv3_0;
        else 
            grp_lut_div5_chunk_fu_157_r_in_V <= "XXX";
        end if; 
    end process;

    icmp4_fu_306_p2 <= "1" when (tmp_8_fu_296_p4 = ap_const_lv10_0) else "0";
    icmp_fu_230_p2 <= "1" when (tmp_fu_220_p4 = ap_const_lv2_0) else "0";
    new_exp_V_1_fu_256_p2 <= std_logic_vector(unsigned(new_exp_V_fu_202_p4) - unsigned(shift_V_cast_cast_fu_236_p3));
    new_exp_V_fu_202_p4 <= p_Val2_s_fu_190_p1(62 downto 52);
    new_mant_V_1_fu_629_p19 <= (((((((((((((((((tmp_10_reg_779 & q_chunk_V_1_reg_784) & q_chunk_V_2_reg_789) & q_chunk_V_3_reg_794) & q_chunk_V_4_reg_799) & q_chunk_V_5_reg_804) & q_chunk_V_6_reg_809) & q_chunk_V_7_reg_814) & q_chunk_V_8_reg_819) & q_chunk_V_9_reg_824) & q_chunk_V_10_reg_829) & q_chunk_V_11_reg_834) & q_chunk_V_12_reg_839) & q_chunk_V_13_reg_844) & q_chunk_V_14_reg_849) & q_chunk_V_15_reg_854) & q_chunk_V_16_reg_859) & grp_lut_div5_chunk_fu_157_ap_return_0);
    new_mant_V_fu_212_p1 <= p_Val2_s_fu_190_p1(52 - 1 downto 0);
    p_Repl2_1_fu_276_p3 <= 
        p_new_exp_V_1_fu_262_p3 when (tmp_7_fu_270_p2(0) = '1') else 
        new_exp_V_1_fu_256_p2;
    p_Result_i_i_fu_436_p4 <= xf_V_fu_430_p2(55 downto 54);
    p_Result_s_fu_653_p4 <= ((p_Repl2_2_reg_665 & p_Repl2_1_reg_679) & ap_phi_mux_p_Repl2_s_phi_fu_151_p4);
    p_Val2_s_fu_190_p1 <= in_r;
    p_cast_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xf_V_1_fu_386_p3),56));
    p_new_exp_V_1_fu_262_p3 <= 
        ap_const_lv11_7FF when (tmp_1_fu_244_p2(0) = '1') else 
        ap_const_lv11_0;
    r_V_18_cast_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_20_fu_406_p2),56));
    r_V_20_fu_406_p2 <= std_logic_vector(shift_right(unsigned(xf_V_1_fu_386_p3),to_integer(unsigned('0' & tmp_cast_fu_402_p1(31-1 downto 0)))));
    r_V_21_fu_416_p2 <= std_logic_vector(shift_left(unsigned(p_cast_fu_394_p1),to_integer(unsigned('0' & tmp_s_fu_398_p1(31-1 downto 0)))));
    sel_tmp3_demorgan_fu_324_p2 <= (tmp_5_fu_290_p2 or tmp_4_fu_284_p2);
    sel_tmp3_fu_330_p2 <= (sel_tmp3_demorgan_fu_324_p2 xor ap_const_lv1_1);
    sel_tmp4_fu_336_p2 <= (sel_tmp3_fu_330_p2 and icmp4_fu_306_p2);
    sel_tmp7_fu_358_p2 <= (tmp_4_fu_284_p2 xor ap_const_lv1_1);
    sel_tmp8_fu_364_p2 <= (tmp_5_fu_290_p2 and sel_tmp7_fu_358_p2);
    shift_V_1_fu_318_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(new_exp_V_fu_202_p4));
    shift_V_2_fu_342_p3 <= 
        shift_V_fu_312_p2 when (sel_tmp4_fu_336_p2(0) = '1') else 
        shift_V_1_fu_318_p2;
    shift_V_3_fu_350_p3 <= 
        ap_const_lv11_0 when (tmp_4_fu_284_p2(0) = '1') else 
        shift_V_2_fu_342_p3;
    shift_V_4_fu_370_p3 <= 
        shift_V_cast_cast_fu_236_p3 when (sel_tmp8_fu_364_p2(0) = '1') else 
        shift_V_3_fu_350_p3;
    shift_V_cast_cast_fu_236_p3 <= 
        ap_const_lv11_3 when (icmp_fu_230_p2(0) = '1') else 
        ap_const_lv11_2;
    shift_V_fu_312_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) - unsigned(new_exp_V_fu_202_p4));
    tmp_10_fu_625_p1 <= grp_lut_div5_chunk_fu_157_ap_return_0(1 - 1 downto 0);
    tmp_1_fu_244_p2 <= "1" when (new_exp_V_fu_202_p4 = ap_const_lv11_7FF) else "0";
    tmp_2_fu_250_p2 <= "1" when (unsigned(shift_V_cast_cast_fu_236_p3) > unsigned(new_exp_V_fu_202_p4)) else "0";
    tmp_3_fu_378_p3 <= (ap_const_lv1_1 & new_mant_V_fu_212_p1);
    tmp_4_fu_284_p2 <= "1" when (new_exp_V_fu_202_p4 = ap_const_lv11_0) else "0";
    tmp_5_fu_290_p2 <= "1" when (unsigned(shift_V_cast_cast_fu_236_p3) < unsigned(new_exp_V_fu_202_p4)) else "0";
    tmp_7_fu_270_p2 <= (tmp_2_fu_250_p2 or tmp_1_fu_244_p2);
    tmp_8_fu_296_p4 <= p_Val2_s_fu_190_p1(62 downto 53);
    tmp_9_fu_621_p1 <= xf_V_fu_430_p2(3 - 1 downto 0);
    tmp_cast_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_4_fu_370_p3),53));
    tmp_fu_220_p4 <= p_Val2_s_fu_190_p1(51 downto 50);
    tmp_s_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_4_fu_370_p3),56));
    xf_V_1_fu_386_p3 <= 
        xf_V_5_cast_fu_216_p1 when (tmp_4_fu_284_p2(0) = '1') else 
        tmp_3_fu_378_p3;
    xf_V_3_fu_422_p3 <= 
        r_V_18_cast_fu_412_p1 when (icmp4_fu_306_p2(0) = '1') else 
        r_V_21_fu_416_p2;
    xf_V_5_cast_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(new_mant_V_fu_212_p1),53));
    xf_V_fu_430_p2 <= std_logic_vector(unsigned(ap_const_lv56_2) + unsigned(xf_V_3_fu_422_p3));
end behav;
