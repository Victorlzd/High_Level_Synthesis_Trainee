// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _operator_int_56_div5_HH_
#define _operator_int_56_div5_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "operator_int_56_dbkb.h"
#include "operator_int_56_dcud.h"
#include "operator_int_56_ddEe.h"
#include "operator_int_56_deOg.h"
#include "operator_int_56_dfYi.h"
#include "operator_int_56_dg8j.h"

namespace ap_rtl {

struct operator_int_56_div5 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<56> > in_V;
    sc_out< sc_lv<56> > ap_return;


    // Module declarations
    operator_int_56_div5(sc_module_name name);
    SC_HAS_PROCESS(operator_int_56_div5);

    ~operator_int_56_div5();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    operator_int_56_dbkb* r0_U;
    operator_int_56_dcud* r1_U;
    operator_int_56_ddEe* r2_U;
    operator_int_56_deOg* q0_U;
    operator_int_56_dfYi* q1_U;
    operator_int_56_dg8j* q2_U;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > r0_address0;
    sc_signal< sc_logic > r0_ce0;
    sc_signal< sc_lv<1> > r0_q0;
    sc_signal< sc_lv<6> > r1_address0;
    sc_signal< sc_logic > r1_ce0;
    sc_signal< sc_lv<1> > r1_q0;
    sc_signal< sc_lv<6> > r2_address0;
    sc_signal< sc_logic > r2_ce0;
    sc_signal< sc_lv<1> > r2_q0;
    sc_signal< sc_lv<6> > q0_address0;
    sc_signal< sc_logic > q0_ce0;
    sc_signal< sc_lv<1> > q0_q0;
    sc_signal< sc_lv<6> > q1_address0;
    sc_signal< sc_logic > q1_ce0;
    sc_signal< sc_lv<1> > q1_q0;
    sc_signal< sc_lv<6> > q2_address0;
    sc_signal< sc_logic > q2_ce0;
    sc_signal< sc_lv<1> > q2_q0;
    sc_signal< sc_lv<6> > tmp_2_fu_216_p1;
    sc_signal< sc_lv<6> > tmp_2_reg_452;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_186_p3;
    sc_signal< sc_lv<1> > tmp_12_fu_292_p2;
    sc_signal< sc_lv<1> > tmp_12_reg_487;
    sc_signal< sc_lv<6> > tmp_13_fu_298_p1;
    sc_signal< sc_lv<6> > tmp_13_reg_495;
    sc_signal< sc_lv<6> > i_fu_302_p2;
    sc_signal< sc_lv<6> > i_reg_503;
    sc_signal< sc_lv<3> > p_Result_2_fu_308_p4;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<56> > p_Result_4_fu_437_p2;
    sc_signal< sc_lv<3> > p_Repl2_1_reg_148;
    sc_signal< sc_lv<56> > p_Val2_s_reg_159;
    sc_signal< sc_lv<6> > i_i_reg_171;
    sc_signal< sc_lv<64> > tmp_i_i_fu_282_p1;
    sc_signal< sc_lv<5> > tmp_1_fu_194_p1;
    sc_signal< sc_lv<7> > p_shl_i_fu_198_p3;
    sc_signal< sc_lv<8> > p_shl_i_cast_fu_206_p1;
    sc_signal< sc_lv<8> > i_i_cast1_fu_182_p1;
    sc_signal< sc_lv<8> > Lo_assign_fu_210_p2;
    sc_signal< sc_lv<6> > tmp_4_fu_226_p1;
    sc_signal< sc_lv<1> > tmp_3_fu_220_p2;
    sc_signal< sc_lv<56> > tmp_5_fu_230_p4;
    sc_signal< sc_lv<6> > tmp_6_fu_239_p2;
    sc_signal< sc_lv<6> > tmp_8_fu_252_p3;
    sc_signal< sc_lv<56> > tmp_7_fu_245_p3;
    sc_signal< sc_lv<56> > tmp_9_fu_260_p1;
    sc_signal< sc_lv<56> > tmp_10_fu_264_p2;
    sc_signal< sc_lv<3> > d_chunk_V_fu_270_p1;
    sc_signal< sc_lv<6> > p_Result_s_fu_274_p3;
    sc_signal< sc_lv<3> > p_Result_3_fu_318_p4;
    sc_signal< sc_lv<6> > tmp_14_fu_332_p2;
    sc_signal< sc_lv<6> > tmp_15_fu_337_p2;
    sc_signal< sc_lv<6> > tmp_16_fu_342_p3;
    sc_signal< sc_lv<6> > tmp_18_fu_354_p3;
    sc_signal< sc_lv<6> > tmp_17_fu_348_p3;
    sc_signal< sc_lv<6> > tmp_19_fu_360_p2;
    sc_signal< sc_lv<56> > loc_V_fu_328_p1;
    sc_signal< sc_lv<56> > tmp_20_fu_366_p1;
    sc_signal< sc_lv<56> > tmp_23_fu_378_p2;
    sc_signal< sc_lv<56> > tmp_24_fu_384_p4;
    sc_signal< sc_lv<56> > tmp_21_fu_370_p1;
    sc_signal< sc_lv<56> > tmp_22_fu_374_p1;
    sc_signal< sc_lv<56> > tmp_26_fu_401_p2;
    sc_signal< sc_lv<56> > tmp_27_fu_407_p2;
    sc_signal< sc_lv<56> > p_demorgan_fu_413_p2;
    sc_signal< sc_lv<56> > tmp_28_fu_419_p2;
    sc_signal< sc_lv<56> > tmp_25_fu_394_p3;
    sc_signal< sc_lv<56> > tmp_29_fu_425_p2;
    sc_signal< sc_lv<56> > tmp_30_fu_431_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<6> ap_const_lv6_11;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<6> ap_const_lv6_37;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<6> ap_const_lv6_2;
    static const sc_lv<56> ap_const_lv56_FFFFFFFFFFFFFF;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Lo_assign_fu_210_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_d_chunk_V_fu_270_p1();
    void thread_i_fu_302_p2();
    void thread_i_i_cast1_fu_182_p1();
    void thread_loc_V_fu_328_p1();
    void thread_p_Result_2_fu_308_p4();
    void thread_p_Result_3_fu_318_p4();
    void thread_p_Result_4_fu_437_p2();
    void thread_p_Result_s_fu_274_p3();
    void thread_p_demorgan_fu_413_p2();
    void thread_p_shl_i_cast_fu_206_p1();
    void thread_p_shl_i_fu_198_p3();
    void thread_q0_address0();
    void thread_q0_ce0();
    void thread_q1_address0();
    void thread_q1_ce0();
    void thread_q2_address0();
    void thread_q2_ce0();
    void thread_r0_address0();
    void thread_r0_ce0();
    void thread_r1_address0();
    void thread_r1_ce0();
    void thread_r2_address0();
    void thread_r2_ce0();
    void thread_tmp_10_fu_264_p2();
    void thread_tmp_12_fu_292_p2();
    void thread_tmp_13_fu_298_p1();
    void thread_tmp_14_fu_332_p2();
    void thread_tmp_15_fu_337_p2();
    void thread_tmp_16_fu_342_p3();
    void thread_tmp_17_fu_348_p3();
    void thread_tmp_18_fu_354_p3();
    void thread_tmp_19_fu_360_p2();
    void thread_tmp_1_fu_194_p1();
    void thread_tmp_20_fu_366_p1();
    void thread_tmp_21_fu_370_p1();
    void thread_tmp_22_fu_374_p1();
    void thread_tmp_23_fu_378_p2();
    void thread_tmp_24_fu_384_p4();
    void thread_tmp_25_fu_394_p3();
    void thread_tmp_26_fu_401_p2();
    void thread_tmp_27_fu_407_p2();
    void thread_tmp_28_fu_419_p2();
    void thread_tmp_29_fu_425_p2();
    void thread_tmp_2_fu_216_p1();
    void thread_tmp_30_fu_431_p2();
    void thread_tmp_3_fu_220_p2();
    void thread_tmp_4_fu_226_p1();
    void thread_tmp_5_fu_230_p4();
    void thread_tmp_6_fu_239_p2();
    void thread_tmp_7_fu_245_p3();
    void thread_tmp_8_fu_252_p3();
    void thread_tmp_9_fu_260_p1();
    void thread_tmp_fu_186_p3();
    void thread_tmp_i_i_fu_282_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
