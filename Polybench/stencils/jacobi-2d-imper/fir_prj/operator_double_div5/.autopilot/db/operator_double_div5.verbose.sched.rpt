

================================================================
== Vivado HLS Report for 'operator_double_div5'
================================================================
* Date:           Fri Aug 24 15:44:34 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        fir_prj
* Solution:       operator_double_div5
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.691|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   37|   37|   37|   37|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   36|   36|         2|          -|          -|    18|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp_10)
3 --> 
	2  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.69>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(double %in_r) nounwind, !map !187"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(double 0.000000e+00) nounwind, !map !193"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([21 x i8]* @operator_double_div5_1) nounwind"   --->   Operation 6 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%in_read = call double @_ssdm_op_Read.ap_auto.double(double %in_r) nounwind"   --->   Operation 7 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_Val2_s = bitcast double %in_read to i64" [jacobi-2d-imper.cpp:48->jacobi-2d-imper.cpp:134]   --->   Operation 8 'bitcast' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_Repl2_3 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_s, i32 63)" [jacobi-2d-imper.cpp:49->jacobi-2d-imper.cpp:134]   --->   Operation 9 'bitselect' 'p_Repl2_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%new_exp_V_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_s, i32 52, i32 62) nounwind" [jacobi-2d-imper.cpp:50->jacobi-2d-imper.cpp:134]   --->   Operation 10 'partselect' 'new_exp_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%new_mant_V_1 = trunc i64 %p_Val2_s to i52" [jacobi-2d-imper.cpp:51->jacobi-2d-imper.cpp:134]   --->   Operation 11 'trunc' 'new_mant_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%xf_V = zext i52 %new_mant_V_1 to i56" [jacobi-2d-imper.cpp:139]   --->   Operation 12 'zext' 'xf_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %p_Val2_s, i32 50, i32 51)" [jacobi-2d-imper.cpp:140]   --->   Operation 13 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.64ns)   --->   "%icmp = icmp eq i2 %tmp, 0" [jacobi-2d-imper.cpp:140]   --->   Operation 14 'icmp' 'icmp' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.65ns)   --->   "%shift_V_cast_cast = select i1 %icmp, i11 3, i11 2" [jacobi-2d-imper.cpp:140]   --->   Operation 15 'select' 'shift_V_cast_cast' <Predicate = true> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (1.32ns)   --->   "%tmp_1 = icmp ugt i11 %shift_V_cast_cast, %new_exp_V_1" [jacobi-2d-imper.cpp:142]   --->   Operation 16 'icmp' 'tmp_1' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (1.42ns)   --->   "%new_exp_V = sub i11 %new_exp_V_1, %shift_V_cast_cast" [jacobi-2d-imper.cpp:145]   --->   Operation 17 'sub' 'new_exp_V' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.32ns)   --->   "%tmp_3 = icmp eq i11 %new_exp_V_1, 0" [jacobi-2d-imper.cpp:146]   --->   Operation 18 'icmp' 'tmp_3' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (1.32ns)   --->   "%tmp_4 = icmp ult i11 %shift_V_cast_cast, %new_exp_V_1" [jacobi-2d-imper.cpp:149]   --->   Operation 19 'icmp' 'tmp_4' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_7 = call i10 @_ssdm_op_PartSelect.i10.i64.i32.i32(i64 %p_Val2_s, i32 53, i32 62)" [jacobi-2d-imper.cpp:150]   --->   Operation 20 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.29ns)   --->   "%icmp4 = icmp eq i10 %tmp_7, 0" [jacobi-2d-imper.cpp:150]   --->   Operation 21 'icmp' 'icmp4' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (1.42ns)   --->   "%shift_V = sub i11 1, %new_exp_V_1" [jacobi-2d-imper.cpp:151]   --->   Operation 22 'sub' 'shift_V' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (1.42ns)   --->   "%shift_V_1 = add i11 -1, %new_exp_V_1" [jacobi-2d-imper.cpp:153]   --->   Operation 23 'add' 'shift_V_1' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp2_demorgan = or i1 %tmp_3, %tmp_4" [jacobi-2d-imper.cpp:146]   --->   Operation 24 'or' 'sel_tmp2_demorgan' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp2 = xor i1 %sel_tmp2_demorgan, true" [jacobi-2d-imper.cpp:146]   --->   Operation 25 'xor' 'sel_tmp2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp3 = and i1 %icmp4, %sel_tmp2" [jacobi-2d-imper.cpp:150]   --->   Operation 26 'and' 'sel_tmp3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%shift_V_2 = select i1 %sel_tmp3, i11 %shift_V, i11 %shift_V_1" [jacobi-2d-imper.cpp:150]   --->   Operation 27 'select' 'shift_V_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.63ns) (out node of the LUT)   --->   "%shift_V_3 = select i1 %tmp_3, i11 0, i11 %shift_V_2" [jacobi-2d-imper.cpp:146]   --->   Operation 28 'select' 'shift_V_3' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node shift_V_4)   --->   "%sel_tmp6 = xor i1 %tmp_3, true" [jacobi-2d-imper.cpp:146]   --->   Operation 29 'xor' 'sel_tmp6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node shift_V_4)   --->   "%sel_tmp7 = and i1 %tmp_4, %sel_tmp6" [jacobi-2d-imper.cpp:149]   --->   Operation 30 'and' 'sel_tmp7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.63ns) (out node of the LUT)   --->   "%shift_V_4 = select i1 %sel_tmp7, i11 %shift_V_cast_cast, i11 %shift_V_3" [jacobi-2d-imper.cpp:149]   --->   Operation 31 'select' 'shift_V_4' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%tmp_9 = zext i11 %shift_V_4 to i56" [jacobi-2d-imper.cpp:157]   --->   Operation 32 'zext' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%tmp_9_cast = zext i11 %shift_V_4 to i52" [jacobi-2d-imper.cpp:157]   --->   Operation 33 'zext' 'tmp_9_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%r_V_1 = lshr i52 %new_mant_V_1, %tmp_9_cast" [jacobi-2d-imper.cpp:157]   --->   Operation 34 'lshr' 'r_V_1' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.00> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%r_V_1_cast = zext i52 %r_V_1 to i56" [jacobi-2d-imper.cpp:157]   --->   Operation 35 'zext' 'r_V_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%r_V_2 = shl i56 %xf_V, %tmp_9" [jacobi-2d-imper.cpp:159]   --->   Operation 36 'shl' 'r_V_2' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.00> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (2.91ns) (out node of the LUT)   --->   "%xf_V_7 = select i1 %icmp4, i56 %r_V_1_cast, i56 %r_V_2" [jacobi-2d-imper.cpp:156]   --->   Operation 37 'select' 'xf_V_7' <Predicate = true> <Delay = 2.91> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node xf_V_8)   --->   "%p_Result_s = call i56 @_ssdm_op_BitSet.i56.i56.i32.i1(i56 %xf_V_7, i32 52, i1 true)" [jacobi-2d-imper.cpp:161]   --->   Operation 38 'bitset' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node xf_V_8)   --->   "%xf_V_5 = select i1 %tmp_3, i56 %xf_V_7, i56 %p_Result_s" [jacobi-2d-imper.cpp:146]   --->   Operation 39 'select' 'xf_V_5' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.88ns) (out node of the LUT)   --->   "%xf_V_8 = add i56 2, %xf_V_5" [jacobi-2d-imper.cpp:162]   --->   Operation 40 'add' 'xf_V_8' <Predicate = true> <Delay = 1.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (1.06ns)   --->   "br label %0" [jacobi-2d-imper.cpp:86->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 41 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 8.34>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%p_Repl2_1 = phi i3 [ 0, %._crit_edge_ifconv ], [ %p_Result_3, %1 ]"   --->   Operation 42 'phi' 'p_Repl2_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%p_Val2_3 = phi i56 [ undef, %._crit_edge_ifconv ], [ %p_Result_5, %1 ]"   --->   Operation 43 'phi' 'p_Val2_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%i_i_i = phi i6 [ 17, %._crit_edge_ifconv ], [ %i, %1 ]"   --->   Operation 44 'phi' 'i_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%i_i_i_cast = sext i6 %i_i_i to i8" [jacobi-2d-imper.cpp:86->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 45 'sext' 'i_i_i_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %i_i_i, i32 5)" [jacobi-2d-imper.cpp:86->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 46 'bitselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 18, i64 18, i64 18) nounwind"   --->   Operation 47 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "br i1 %tmp_10, label %operator_int_56_div5.exit, label %1" [jacobi-2d-imper.cpp:86->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 48 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_12 = trunc i6 %i_i_i to i5" [jacobi-2d-imper.cpp:86->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 49 'trunc' 'tmp_12' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%p_shl_i_i = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %tmp_12, i2 0)" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 50 'bitconcatenate' 'p_shl_i_i' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%p_shl_i_i_cast = zext i7 %p_shl_i_i to i8" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 51 'zext' 'p_shl_i_i_cast' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (1.37ns)   --->   "%Lo_assign = sub i8 %p_shl_i_i_cast, %i_i_i_cast" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 52 'sub' 'Lo_assign' <Predicate = (!tmp_10)> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_13 = trunc i8 %Lo_assign to i6" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 53 'trunc' 'tmp_13' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (1.22ns)   --->   "%tmp_14 = icmp ugt i8 %Lo_assign, -3" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 54 'icmp' 'tmp_14' <Predicate = (!tmp_10)> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_15 = trunc i8 %Lo_assign to i6" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 55 'trunc' 'tmp_15' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node tmp_21)   --->   "%tmp_16 = call i56 @llvm.part.select.i56(i56 %xf_V_8, i32 55, i32 0)" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 56 'partselect' 'tmp_16' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (1.35ns)   --->   "%tmp_17 = sub i6 -9, %tmp_15" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 57 'sub' 'tmp_17' <Predicate = (!tmp_10)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node tmp_21)   --->   "%tmp_18 = select i1 %tmp_14, i56 %tmp_16, i56 %xf_V_8" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 58 'select' 'tmp_18' <Predicate = (!tmp_10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node tmp_21)   --->   "%tmp_19 = select i1 %tmp_14, i6 %tmp_17, i6 %tmp_15" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 59 'select' 'tmp_19' <Predicate = (!tmp_10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node tmp_21)   --->   "%tmp_20 = zext i6 %tmp_19 to i56" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 60 'zext' 'tmp_20' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (2.95ns) (out node of the LUT)   --->   "%tmp_21 = lshr i56 %tmp_18, %tmp_20" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 61 'lshr' 'tmp_21' <Predicate = (!tmp_10)> <Delay = 2.95> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.00> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%d_chunk_V = trunc i56 %tmp_21 to i3" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 62 'trunc' 'd_chunk_V' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%p_Result_2 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %p_Repl2_1, i3 %d_chunk_V) nounwind" [jacobi-2d-imper.cpp:63->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 63 'bitconcatenate' 'p_Result_2' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_i_i_i = zext i6 %p_Result_2 to i64" [jacobi-2d-imper.cpp:64->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 64 'zext' 'tmp_i_i_i' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%r0_addr = getelementptr [64 x i1]* @r0, i64 0, i64 %tmp_i_i_i" [jacobi-2d-imper.cpp:64->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 65 'getelementptr' 'r0_addr' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 66 [2/2] (2.66ns)   --->   "%r0_load = load i1* %r0_addr, align 1" [jacobi-2d-imper.cpp:64->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 66 'load' 'r0_load' <Predicate = (!tmp_10)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%r1_addr = getelementptr [64 x i1]* @r1, i64 0, i64 %tmp_i_i_i" [jacobi-2d-imper.cpp:65->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 67 'getelementptr' 'r1_addr' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 68 [2/2] (2.66ns)   --->   "%r1_load = load i1* %r1_addr, align 1" [jacobi-2d-imper.cpp:65->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 68 'load' 'r1_load' <Predicate = (!tmp_10)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%r2_addr = getelementptr [64 x i1]* @r2, i64 0, i64 %tmp_i_i_i" [jacobi-2d-imper.cpp:66->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 69 'getelementptr' 'r2_addr' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 70 [2/2] (2.66ns)   --->   "%r2_load = load i1* %r2_addr, align 1" [jacobi-2d-imper.cpp:66->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 70 'load' 'r2_load' <Predicate = (!tmp_10)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%q0_addr = getelementptr [64 x i1]* @q0, i64 0, i64 %tmp_i_i_i" [jacobi-2d-imper.cpp:67->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 71 'getelementptr' 'q0_addr' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 72 [2/2] (2.66ns)   --->   "%q0_load = load i1* %q0_addr, align 1" [jacobi-2d-imper.cpp:67->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 72 'load' 'q0_load' <Predicate = (!tmp_10)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%q1_addr = getelementptr [64 x i1]* @q1, i64 0, i64 %tmp_i_i_i" [jacobi-2d-imper.cpp:68->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 73 'getelementptr' 'q1_addr' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 74 [2/2] (2.66ns)   --->   "%q1_load = load i1* %q1_addr, align 1" [jacobi-2d-imper.cpp:68->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 74 'load' 'q1_load' <Predicate = (!tmp_10)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%q2_addr = getelementptr [64 x i1]* @q2, i64 0, i64 %tmp_i_i_i" [jacobi-2d-imper.cpp:69->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 75 'getelementptr' 'q2_addr' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 76 [2/2] (2.66ns)   --->   "%q2_load = load i1* %q2_addr, align 1" [jacobi-2d-imper.cpp:69->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 76 'load' 'q2_load' <Predicate = (!tmp_10)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_2 : Operation 77 [1/1] (1.22ns)   --->   "%tmp_23 = icmp ugt i8 %Lo_assign, -3" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 77 'icmp' 'tmp_23' <Predicate = (!tmp_10)> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_24 = trunc i8 %Lo_assign to i6" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 78 'trunc' 'tmp_24' <Predicate = (!tmp_10)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (1.35ns)   --->   "%i = add i6 -1, %i_i_i" [jacobi-2d-imper.cpp:86->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 79 'add' 'i' <Predicate = (!tmp_10)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%new_mant_V = trunc i56 %p_Val2_3 to i52" [jacobi-2d-imper.cpp:163]   --->   Operation 80 'trunc' 'new_mant_V' <Predicate = (tmp_10)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (1.32ns)   --->   "%tmp_2 = icmp eq i11 %new_exp_V_1, -1" [jacobi-2d-imper.cpp:164]   --->   Operation 81 'icmp' 'tmp_2' <Predicate = (tmp_10)> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_2)   --->   "%p_s = select i1 %tmp_2, i11 -1, i11 0" [jacobi-2d-imper.cpp:164]   --->   Operation 82 'select' 'p_s' <Predicate = (tmp_10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_2)   --->   "%tmp_6 = or i1 %tmp_2, %tmp_1" [jacobi-2d-imper.cpp:164]   --->   Operation 83 'or' 'tmp_6' <Predicate = (tmp_10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (0.63ns) (out node of the LUT)   --->   "%p_Repl2_2 = select i1 %tmp_6, i11 %p_s, i11 %new_exp_V" [jacobi-2d-imper.cpp:164]   --->   Operation 84 'select' 'p_Repl2_2' <Predicate = (tmp_10)> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (0.70ns)   --->   "%p_Repl2_s = select i1 %tmp_2, i52 %new_mant_V_1, i52 %new_mant_V" [jacobi-2d-imper.cpp:164]   --->   Operation 85 'select' 'p_Repl2_s' <Predicate = (tmp_10)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%p_Result_6 = call i64 @_ssdm_op_BitConcatenate.i64.i1.i11.i52(i1 %p_Repl2_3, i11 %p_Repl2_2, i52 %p_Repl2_s) nounwind" [jacobi-2d-imper.cpp:117->jacobi-2d-imper.cpp:168]   --->   Operation 86 'bitconcatenate' 'p_Result_6' <Predicate = (tmp_10)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%out = bitcast i64 %p_Result_6 to double" [jacobi-2d-imper.cpp:118->jacobi-2d-imper.cpp:168]   --->   Operation 87 'bitcast' 'out' <Predicate = (tmp_10)> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "ret double %out" [jacobi-2d-imper.cpp:169]   --->   Operation 88 'ret' <Predicate = (tmp_10)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.40>
ST_3 : Operation 89 [1/2] (2.66ns)   --->   "%r0_load = load i1* %r0_addr, align 1" [jacobi-2d-imper.cpp:64->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 89 'load' 'r0_load' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_3 : Operation 90 [1/2] (2.66ns)   --->   "%r1_load = load i1* %r1_addr, align 1" [jacobi-2d-imper.cpp:65->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 90 'load' 'r1_load' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_3 : Operation 91 [1/2] (2.66ns)   --->   "%r2_load = load i1* %r2_addr, align 1" [jacobi-2d-imper.cpp:66->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 91 'load' 'r2_load' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%p_Result_3 = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %r2_load, i1 %r1_load, i1 %r0_load) nounwind" [jacobi-2d-imper.cpp:66->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 92 'bitconcatenate' 'p_Result_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/2] (2.66ns)   --->   "%q0_load = load i1* %q0_addr, align 1" [jacobi-2d-imper.cpp:67->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 93 'load' 'q0_load' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_3 : Operation 94 [1/2] (2.66ns)   --->   "%q1_load = load i1* %q1_addr, align 1" [jacobi-2d-imper.cpp:68->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 94 'load' 'q1_load' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_3 : Operation 95 [1/2] (2.66ns)   --->   "%q2_load = load i1* %q2_addr, align 1" [jacobi-2d-imper.cpp:69->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 95 'load' 'q2_load' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 1> <Depth = 64> <ROM>
ST_3 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node tmp_34)   --->   "%p_Result_4 = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %q2_load, i1 %q1_load, i1 %q0_load) nounwind" [jacobi-2d-imper.cpp:69->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 96 'bitconcatenate' 'p_Result_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node tmp_34)   --->   "%loc_V = zext i3 %p_Result_4 to i56" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 97 'zext' 'loc_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (1.35ns)   --->   "%tmp_25 = add i6 2, %tmp_13" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 98 'add' 'tmp_25' <Predicate = true> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (1.35ns)   --->   "%tmp_26 = sub i6 -9, %tmp_24" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 99 'sub' 'tmp_26' <Predicate = (tmp_23)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node tmp_30)   --->   "%tmp_27 = select i1 %tmp_23, i6 %tmp_24, i6 %tmp_25" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 100 'select' 'tmp_27' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_28 = select i1 %tmp_23, i6 %tmp_25, i6 %tmp_24" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 101 'select' 'tmp_28' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node tmp_34)   --->   "%tmp_29 = select i1 %tmp_23, i6 %tmp_26, i6 %tmp_24" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 102 'select' 'tmp_29' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 103 [1/1] (1.35ns) (out node of the LUT)   --->   "%tmp_30 = sub i6 -9, %tmp_27" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 103 'sub' 'tmp_30' <Predicate = true> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node tmp_34)   --->   "%tmp_31 = zext i6 %tmp_29 to i56" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 104 'zext' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_32 = zext i6 %tmp_28 to i56" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 105 'zext' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_33 = zext i6 %tmp_30 to i56" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 106 'zext' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (2.00ns) (out node of the LUT)   --->   "%tmp_34 = shl i56 %loc_V, %tmp_31" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 107 'shl' 'tmp_34' <Predicate = true> <Delay = 2.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.00> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node p_Result_5)   --->   "%tmp_35 = call i56 @llvm.part.select.i56(i56 %tmp_34, i32 55, i32 0)" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 108 'partselect' 'tmp_35' <Predicate = (tmp_23)> <Delay = 0.00>
ST_3 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node p_Result_5)   --->   "%tmp_36 = select i1 %tmp_23, i56 %tmp_35, i56 %tmp_34" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 109 'select' 'tmp_36' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_37 = shl i56 -1, %tmp_32" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 110 'shl' 'tmp_37' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.00> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_38 = lshr i56 -1, %tmp_33" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 111 'lshr' 'tmp_38' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.00> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 112 [1/1] (2.00ns) (out node of the LUT)   --->   "%p_demorgan = and i56 %tmp_37, %tmp_38" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 112 'and' 'p_demorgan' <Predicate = true> <Delay = 2.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node p_Result_5)   --->   "%tmp_39 = xor i56 %p_demorgan, -1" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 113 'xor' 'tmp_39' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node p_Result_5)   --->   "%tmp_40 = and i56 %p_Val2_3, %tmp_39" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 114 'and' 'tmp_40' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node p_Result_5)   --->   "%tmp_41 = and i56 %tmp_36, %p_demorgan" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 115 'and' 'tmp_41' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 116 [1/1] (0.68ns) (out node of the LUT)   --->   "%p_Result_5 = or i56 %tmp_40, %tmp_41" [jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 116 'or' 'p_Result_5' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 117 [1/1] (0.00ns)   --->   "br label %0" [jacobi-2d-imper.cpp:86->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 117 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.69ns
The critical path consists of the following:
	wire read on port 'in_r' [11]  (0 ns)
	'icmp' operation ('icmp', jacobi-2d-imper.cpp:140) [18]  (0.644 ns)
	'select' operation ('shift_V_cast_cast', jacobi-2d-imper.cpp:140) [19]  (0.654 ns)
	'icmp' operation ('tmp_4', jacobi-2d-imper.cpp:149) [23]  (1.33 ns)
	'or' operation ('sel_tmp2_demorgan', jacobi-2d-imper.cpp:146) [28]  (0 ns)
	'xor' operation ('sel_tmp2', jacobi-2d-imper.cpp:146) [29]  (0 ns)
	'and' operation ('sel_tmp3', jacobi-2d-imper.cpp:150) [30]  (0 ns)
	'select' operation ('shift.V', jacobi-2d-imper.cpp:150) [31]  (0 ns)
	'select' operation ('shift.V', jacobi-2d-imper.cpp:146) [32]  (0.633 ns)
	'select' operation ('shift.V', jacobi-2d-imper.cpp:149) [35]  (0.633 ns)
	'lshr' operation ('r.V', jacobi-2d-imper.cpp:157) [38]  (0 ns)
	'select' operation ('xf.V', jacobi-2d-imper.cpp:156) [41]  (2.92 ns)
	'select' operation ('xf.V', jacobi-2d-imper.cpp:146) [43]  (0 ns)
	'add' operation ('xf.V', jacobi-2d-imper.cpp:162) [44]  (1.89 ns)

 <State 2>: 8.35ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', jacobi-2d-imper.cpp:86->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [49]  (0 ns)
	'sub' operation ('Lo', jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [58]  (1.37 ns)
	'sub' operation ('tmp_17', jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [63]  (1.36 ns)
	'select' operation ('tmp_19', jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [65]  (0 ns)
	'lshr' operation ('tmp_21', jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [67]  (2.95 ns)
	'getelementptr' operation ('r0_addr', jacobi-2d-imper.cpp:64->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [71]  (0 ns)
	'load' operation ('r0_load', jacobi-2d-imper.cpp:64->jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) on array 'r0' [72]  (2.66 ns)

 <State 3>: 5.4ns
The critical path consists of the following:
	'add' operation ('tmp_25', jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [88]  (1.36 ns)
	'select' operation ('tmp_27', jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [90]  (0 ns)
	'sub' operation ('tmp_30', jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [93]  (1.36 ns)
	'lshr' operation ('tmp_38', jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [101]  (0 ns)
	'and' operation ('p_demorgan', jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [102]  (2.01 ns)
	'xor' operation ('tmp_39', jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [103]  (0 ns)
	'and' operation ('tmp_40', jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [104]  (0 ns)
	'or' operation ('__Result__', jacobi-2d-imper.cpp:90->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) [106]  (0.684 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
