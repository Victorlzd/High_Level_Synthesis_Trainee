

================================================================
== Vivado HLS Report for 'operator_double_div5'
================================================================
* Date:           Fri Aug 24 16:53:56 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        pipelined
* Solution:       my_version
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.691|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   19|   19|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 20


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 1
  Pipeline-0 : II = 1, D = 20, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.69>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%in_read = call double @_ssdm_op_Read.ap_auto.double(double %in_r) nounwind"   --->   Operation 21 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%p_Val2_s = bitcast double %in_read to i64" [jacobi-2d-imper.cpp:48->jacobi-2d-imper.cpp:134]   --->   Operation 22 'bitcast' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%p_Repl2_2 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_s, i32 63)" [jacobi-2d-imper.cpp:49->jacobi-2d-imper.cpp:134]   --->   Operation 23 'bitselect' 'p_Repl2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%new_exp_V_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_s, i32 52, i32 62) nounwind" [jacobi-2d-imper.cpp:50->jacobi-2d-imper.cpp:134]   --->   Operation 24 'partselect' 'new_exp_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%new_mant_V_1 = trunc i64 %p_Val2_s to i52" [jacobi-2d-imper.cpp:51->jacobi-2d-imper.cpp:134]   --->   Operation 25 'trunc' 'new_mant_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%xf_V = zext i52 %new_mant_V_1 to i56" [jacobi-2d-imper.cpp:139]   --->   Operation 26 'zext' 'xf_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %p_Val2_s, i32 50, i32 51)" [jacobi-2d-imper.cpp:140]   --->   Operation 27 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.64ns)   --->   "%icmp = icmp eq i2 %tmp, 0" [jacobi-2d-imper.cpp:140]   --->   Operation 28 'icmp' 'icmp' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.65ns)   --->   "%shift_V_cast_cast = select i1 %icmp, i11 3, i11 2" [jacobi-2d-imper.cpp:140]   --->   Operation 29 'select' 'shift_V_cast_cast' <Predicate = true> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (1.32ns)   --->   "%tmp_1 = icmp ugt i11 %shift_V_cast_cast, %new_exp_V_1" [jacobi-2d-imper.cpp:142]   --->   Operation 30 'icmp' 'tmp_1' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.42ns)   --->   "%new_exp_V = sub i11 %new_exp_V_1, %shift_V_cast_cast" [jacobi-2d-imper.cpp:145]   --->   Operation 31 'sub' 'new_exp_V' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.32ns)   --->   "%tmp_3 = icmp eq i11 %new_exp_V_1, 0" [jacobi-2d-imper.cpp:146]   --->   Operation 32 'icmp' 'tmp_3' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (1.32ns)   --->   "%tmp_4 = icmp ult i11 %shift_V_cast_cast, %new_exp_V_1" [jacobi-2d-imper.cpp:149]   --->   Operation 33 'icmp' 'tmp_4' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_7 = call i10 @_ssdm_op_PartSelect.i10.i64.i32.i32(i64 %p_Val2_s, i32 53, i32 62)" [jacobi-2d-imper.cpp:150]   --->   Operation 34 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (1.29ns)   --->   "%icmp4 = icmp eq i10 %tmp_7, 0" [jacobi-2d-imper.cpp:150]   --->   Operation 35 'icmp' 'icmp4' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (1.42ns)   --->   "%shift_V = sub i11 1, %new_exp_V_1" [jacobi-2d-imper.cpp:151]   --->   Operation 36 'sub' 'shift_V' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (1.42ns)   --->   "%shift_V_1 = add i11 -1, %new_exp_V_1" [jacobi-2d-imper.cpp:153]   --->   Operation 37 'add' 'shift_V_1' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp2_demorgan = or i1 %tmp_3, %tmp_4" [jacobi-2d-imper.cpp:146]   --->   Operation 38 'or' 'sel_tmp2_demorgan' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp2 = xor i1 %sel_tmp2_demorgan, true" [jacobi-2d-imper.cpp:146]   --->   Operation 39 'xor' 'sel_tmp2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp3 = and i1 %icmp4, %sel_tmp2" [jacobi-2d-imper.cpp:150]   --->   Operation 40 'and' 'sel_tmp3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%shift_V_2 = select i1 %sel_tmp3, i11 %shift_V, i11 %shift_V_1" [jacobi-2d-imper.cpp:150]   --->   Operation 41 'select' 'shift_V_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.63ns) (out node of the LUT)   --->   "%shift_V_3 = select i1 %tmp_3, i11 0, i11 %shift_V_2" [jacobi-2d-imper.cpp:146]   --->   Operation 42 'select' 'shift_V_3' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node shift_V_4)   --->   "%sel_tmp6 = xor i1 %tmp_3, true" [jacobi-2d-imper.cpp:146]   --->   Operation 43 'xor' 'sel_tmp6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node shift_V_4)   --->   "%sel_tmp7 = and i1 %tmp_4, %sel_tmp6" [jacobi-2d-imper.cpp:149]   --->   Operation 44 'and' 'sel_tmp7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.63ns) (out node of the LUT)   --->   "%shift_V_4 = select i1 %sel_tmp7, i11 %shift_V_cast_cast, i11 %shift_V_3" [jacobi-2d-imper.cpp:149]   --->   Operation 45 'select' 'shift_V_4' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%tmp_9 = zext i11 %shift_V_4 to i56" [jacobi-2d-imper.cpp:157]   --->   Operation 46 'zext' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%tmp_9_cast = zext i11 %shift_V_4 to i52" [jacobi-2d-imper.cpp:157]   --->   Operation 47 'zext' 'tmp_9_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%r_V_20 = lshr i52 %new_mant_V_1, %tmp_9_cast" [jacobi-2d-imper.cpp:157]   --->   Operation 48 'lshr' 'r_V_20' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.91> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%r_V_18_cast = zext i52 %r_V_20 to i56" [jacobi-2d-imper.cpp:157]   --->   Operation 49 'zext' 'r_V_18_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node xf_V_7)   --->   "%r_V_21 = shl i56 %xf_V, %tmp_9" [jacobi-2d-imper.cpp:159]   --->   Operation 50 'shl' 'r_V_21' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.91> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (2.91ns) (out node of the LUT)   --->   "%xf_V_7 = select i1 %icmp4, i56 %r_V_18_cast, i56 %r_V_21" [jacobi-2d-imper.cpp:156]   --->   Operation 51 'select' 'xf_V_7' <Predicate = true> <Delay = 2.91> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node xf_V_8)   --->   "%p_Result_s = call i56 @_ssdm_op_BitSet.i56.i56.i32.i1(i56 %xf_V_7, i32 52, i1 true)" [jacobi-2d-imper.cpp:161]   --->   Operation 52 'bitset' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node xf_V_8)   --->   "%xf_V_5 = select i1 %tmp_3, i56 %xf_V_7, i56 %p_Result_s" [jacobi-2d-imper.cpp:146]   --->   Operation 53 'select' 'xf_V_5' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (1.88ns) (out node of the LUT)   --->   "%xf_V_8 = add i56 2, %xf_V_5" [jacobi-2d-imper.cpp:162]   --->   Operation 54 'add' 'xf_V_8' <Predicate = true> <Delay = 1.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%p_Result_i_i = call i2 @_ssdm_op_PartSelect.i2.i56.i32.i32(i56 %xf_V_8, i32 54, i32 55) nounwind" [jacobi-2d-imper.cpp:82->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 55 'partselect' 'p_Result_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%d_chunk_V = zext i2 %p_Result_i_i to i3" [jacobi-2d-imper.cpp:82->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 56 'zext' 'd_chunk_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [2/2] (0.00ns)   --->   "%call_ret1_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %d_chunk_V, i3 0) nounwind" [jacobi-2d-imper.cpp:83->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 57 'call' 'call_ret1_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%p_Result_24_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 51, i32 53) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 58 'partselect' 'p_Result_24_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%p_Result_24_1_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 48, i32 50) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 59 'partselect' 'p_Result_24_1_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%p_Result_24_2_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 45, i32 47) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 60 'partselect' 'p_Result_24_2_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%p_Result_24_3_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 42, i32 44) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 61 'partselect' 'p_Result_24_3_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%p_Result_24_4_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 39, i32 41) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 62 'partselect' 'p_Result_24_4_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%p_Result_24_5_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 36, i32 38) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 63 'partselect' 'p_Result_24_5_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%p_Result_24_6_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 33, i32 35) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 64 'partselect' 'p_Result_24_6_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%p_Result_24_7_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 30, i32 32) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 65 'partselect' 'p_Result_24_7_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%p_Result_24_8_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 27, i32 29) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 66 'partselect' 'p_Result_24_8_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%p_Result_24_9_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 24, i32 26) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 67 'partselect' 'p_Result_24_9_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%p_Result_24_i_i_10 = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 21, i32 23) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 68 'partselect' 'p_Result_24_i_i_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%p_Result_24_10_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 18, i32 20) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 69 'partselect' 'p_Result_24_10_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%p_Result_24_11_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 15, i32 17) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 70 'partselect' 'p_Result_24_11_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%p_Result_24_12_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 12, i32 14) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 71 'partselect' 'p_Result_24_12_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%p_Result_24_13_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 9, i32 11) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 72 'partselect' 'p_Result_24_13_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%p_Result_24_14_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 6, i32 8) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 73 'partselect' 'p_Result_24_14_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%p_Result_24_15_i_i = call i3 @_ssdm_op_PartSelect.i3.i56.i32.i32(i56 %xf_V_8, i32 3, i32 5) nounwind" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 74 'partselect' 'p_Result_24_15_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_10 = trunc i56 %xf_V_8 to i3" [jacobi-2d-imper.cpp:88->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 75 'trunc' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (1.32ns)   --->   "%tmp_2 = icmp eq i11 %new_exp_V_1, -1" [jacobi-2d-imper.cpp:164]   --->   Operation 76 'icmp' 'tmp_2' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%p_s = select i1 %tmp_2, i11 -1, i11 0" [jacobi-2d-imper.cpp:164]   --->   Operation 77 'select' 'p_s' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%tmp_6 = or i1 %tmp_2, %tmp_1" [jacobi-2d-imper.cpp:164]   --->   Operation 78 'or' 'tmp_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 79 [1/1] (0.63ns) (out node of the LUT)   --->   "%p_Repl2_1 = select i1 %tmp_6, i11 %p_s, i11 %new_exp_V" [jacobi-2d-imper.cpp:164]   --->   Operation 79 'select' 'p_Repl2_1' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 2 <SV = 1> <Delay = 2.66>
ST_2 : Operation 80 [1/2] (2.66ns)   --->   "%call_ret1_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %d_chunk_V, i3 0) nounwind" [jacobi-2d-imper.cpp:83->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 80 'call' 'call_ret1_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%r_V = extractvalue { i3, i3 } %call_ret1_i_i, 1" [jacobi-2d-imper.cpp:83->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 81 'extractvalue' 'r_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [2/2] (0.00ns)   --->   "%call_ret2_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_i_i, i3 %r_V) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 82 'call' 'call_ret2_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 2.66>
ST_3 : Operation 83 [1/2] (2.66ns)   --->   "%call_ret2_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_i_i, i3 %r_V) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 83 'call' 'call_ret2_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%r_V_1 = extractvalue { i3, i3 } %call_ret2_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 84 'extractvalue' 'r_V_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [2/2] (0.00ns)   --->   "%call_ret3_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_1_i_i, i3 %r_V_1) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 85 'call' 'call_ret3_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 2.66>
ST_4 : Operation 86 [1/2] (2.66ns)   --->   "%call_ret3_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_1_i_i, i3 %r_V_1) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 86 'call' 'call_ret3_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%r_V_2 = extractvalue { i3, i3 } %call_ret3_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 87 'extractvalue' 'r_V_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 88 [2/2] (0.00ns)   --->   "%call_ret4_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_2_i_i, i3 %r_V_2) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 88 'call' 'call_ret4_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 2.66>
ST_5 : Operation 89 [1/2] (2.66ns)   --->   "%call_ret4_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_2_i_i, i3 %r_V_2) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 89 'call' 'call_ret4_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%r_V_3 = extractvalue { i3, i3 } %call_ret4_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 90 'extractvalue' 'r_V_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 91 [2/2] (0.00ns)   --->   "%call_ret5_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_3_i_i, i3 %r_V_3) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 91 'call' 'call_ret5_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 2.66>
ST_6 : Operation 92 [1/2] (2.66ns)   --->   "%call_ret5_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_3_i_i, i3 %r_V_3) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 92 'call' 'call_ret5_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "%r_V_4 = extractvalue { i3, i3 } %call_ret5_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 93 'extractvalue' 'r_V_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 94 [2/2] (0.00ns)   --->   "%call_ret6_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_4_i_i, i3 %r_V_4) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 94 'call' 'call_ret6_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 2.66>
ST_7 : Operation 95 [1/2] (2.66ns)   --->   "%call_ret6_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_4_i_i, i3 %r_V_4) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 95 'call' 'call_ret6_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "%r_V_5 = extractvalue { i3, i3 } %call_ret6_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 96 'extractvalue' 'r_V_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 97 [2/2] (0.00ns)   --->   "%call_ret7_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_5_i_i, i3 %r_V_5) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 97 'call' 'call_ret7_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 2.66>
ST_8 : Operation 98 [1/2] (2.66ns)   --->   "%call_ret7_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_5_i_i, i3 %r_V_5) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 98 'call' 'call_ret7_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 99 [1/1] (0.00ns)   --->   "%r_V_6 = extractvalue { i3, i3 } %call_ret7_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 99 'extractvalue' 'r_V_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 100 [2/2] (0.00ns)   --->   "%call_ret8_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_6_i_i, i3 %r_V_6) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 100 'call' 'call_ret8_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 2.66>
ST_9 : Operation 101 [1/2] (2.66ns)   --->   "%call_ret8_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_6_i_i, i3 %r_V_6) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 101 'call' 'call_ret8_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 102 [1/1] (0.00ns)   --->   "%r_V_7 = extractvalue { i3, i3 } %call_ret8_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 102 'extractvalue' 'r_V_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 103 [2/2] (0.00ns)   --->   "%call_ret9_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_7_i_i, i3 %r_V_7) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 103 'call' 'call_ret9_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 2.66>
ST_10 : Operation 104 [1/2] (2.66ns)   --->   "%call_ret9_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_7_i_i, i3 %r_V_7) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 104 'call' 'call_ret9_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%r_V_8 = extractvalue { i3, i3 } %call_ret9_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 105 'extractvalue' 'r_V_8' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 106 [2/2] (0.00ns)   --->   "%call_ret10_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_8_i_i, i3 %r_V_8) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 106 'call' 'call_ret10_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 2.66>
ST_11 : Operation 107 [1/2] (2.66ns)   --->   "%call_ret10_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_8_i_i, i3 %r_V_8) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 107 'call' 'call_ret10_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 108 [1/1] (0.00ns)   --->   "%r_V_9 = extractvalue { i3, i3 } %call_ret10_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 108 'extractvalue' 'r_V_9' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 109 [2/2] (0.00ns)   --->   "%call_ret11_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_9_i_i, i3 %r_V_9) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 109 'call' 'call_ret11_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 2.66>
ST_12 : Operation 110 [1/2] (2.66ns)   --->   "%call_ret11_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_9_i_i, i3 %r_V_9) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 110 'call' 'call_ret11_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 111 [1/1] (0.00ns)   --->   "%r_V_12 = extractvalue { i3, i3 } %call_ret11_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 111 'extractvalue' 'r_V_12' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 112 [2/2] (0.00ns)   --->   "%call_ret12_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_i_i_10, i3 %r_V_12) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 112 'call' 'call_ret12_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 2.66>
ST_13 : Operation 113 [1/2] (2.66ns)   --->   "%call_ret12_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_i_i_10, i3 %r_V_12) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 113 'call' 'call_ret12_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 114 [1/1] (0.00ns)   --->   "%r_V_13 = extractvalue { i3, i3 } %call_ret12_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 114 'extractvalue' 'r_V_13' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 115 [2/2] (0.00ns)   --->   "%call_ret13_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_10_i_i, i3 %r_V_13) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 115 'call' 'call_ret13_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 2.66>
ST_14 : Operation 116 [1/2] (2.66ns)   --->   "%call_ret13_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_10_i_i, i3 %r_V_13) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 116 'call' 'call_ret13_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 117 [1/1] (0.00ns)   --->   "%r_V_14 = extractvalue { i3, i3 } %call_ret13_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 117 'extractvalue' 'r_V_14' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 118 [2/2] (0.00ns)   --->   "%call_ret14_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_11_i_i, i3 %r_V_14) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 118 'call' 'call_ret14_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 2.66>
ST_15 : Operation 119 [1/2] (2.66ns)   --->   "%call_ret14_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_11_i_i, i3 %r_V_14) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 119 'call' 'call_ret14_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 120 [1/1] (0.00ns)   --->   "%r_V_15 = extractvalue { i3, i3 } %call_ret14_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 120 'extractvalue' 'r_V_15' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 121 [2/2] (0.00ns)   --->   "%call_ret15_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_12_i_i, i3 %r_V_15) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 121 'call' 'call_ret15_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 2.66>
ST_16 : Operation 122 [1/2] (2.66ns)   --->   "%call_ret15_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_12_i_i, i3 %r_V_15) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 122 'call' 'call_ret15_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 123 [1/1] (0.00ns)   --->   "%r_V_16 = extractvalue { i3, i3 } %call_ret15_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 123 'extractvalue' 'r_V_16' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 124 [2/2] (0.00ns)   --->   "%call_ret16_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_13_i_i, i3 %r_V_16) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 124 'call' 'call_ret16_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 2.66>
ST_17 : Operation 125 [1/2] (2.66ns)   --->   "%call_ret16_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_13_i_i, i3 %r_V_16) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 125 'call' 'call_ret16_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 126 [1/1] (0.00ns)   --->   "%r_V_17 = extractvalue { i3, i3 } %call_ret16_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 126 'extractvalue' 'r_V_17' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 127 [2/2] (0.00ns)   --->   "%call_ret17_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_14_i_i, i3 %r_V_17) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 127 'call' 'call_ret17_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 2.66>
ST_18 : Operation 128 [1/2] (2.66ns)   --->   "%call_ret17_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_14_i_i, i3 %r_V_17) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 128 'call' 'call_ret17_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 129 [1/1] (0.00ns)   --->   "%r_V_18 = extractvalue { i3, i3 } %call_ret17_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 129 'extractvalue' 'r_V_18' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 130 [2/2] (0.00ns)   --->   "%call_ret18_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_15_i_i, i3 %r_V_18) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 130 'call' 'call_ret18_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 18> <Delay = 2.66>
ST_19 : Operation 131 [1/2] (2.66ns)   --->   "%call_ret18_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_24_15_i_i, i3 %r_V_18) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 131 'call' 'call_ret18_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 132 [1/1] (0.00ns)   --->   "%r_V_19 = extractvalue { i3, i3 } %call_ret18_i_i, 1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 132 'extractvalue' 'r_V_19' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 133 [2/2] (0.00ns)   --->   "%call_ret_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %tmp_10, i3 %r_V_19) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 133 'call' 'call_ret_i_i' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 19> <Delay = 3.37>
ST_20 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V = extractvalue { i3, i3 } %call_ret2_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 134 'extractvalue' 'q_chunk_V' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_1 = extractvalue { i3, i3 } %call_ret3_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 135 'extractvalue' 'q_chunk_V_1' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_2 = extractvalue { i3, i3 } %call_ret4_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 136 'extractvalue' 'q_chunk_V_2' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_3 = extractvalue { i3, i3 } %call_ret5_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 137 'extractvalue' 'q_chunk_V_3' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_4 = extractvalue { i3, i3 } %call_ret6_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 138 'extractvalue' 'q_chunk_V_4' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_5 = extractvalue { i3, i3 } %call_ret7_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 139 'extractvalue' 'q_chunk_V_5' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_6 = extractvalue { i3, i3 } %call_ret8_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 140 'extractvalue' 'q_chunk_V_6' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_7 = extractvalue { i3, i3 } %call_ret9_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 141 'extractvalue' 'q_chunk_V_7' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_8 = extractvalue { i3, i3 } %call_ret10_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 142 'extractvalue' 'q_chunk_V_8' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_9 = extractvalue { i3, i3 } %call_ret11_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 143 'extractvalue' 'q_chunk_V_9' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_10 = extractvalue { i3, i3 } %call_ret12_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 144 'extractvalue' 'q_chunk_V_10' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_11 = extractvalue { i3, i3 } %call_ret13_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 145 'extractvalue' 'q_chunk_V_11' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_12 = extractvalue { i3, i3 } %call_ret14_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 146 'extractvalue' 'q_chunk_V_12' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_13 = extractvalue { i3, i3 } %call_ret15_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 147 'extractvalue' 'q_chunk_V_13' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_14 = extractvalue { i3, i3 } %call_ret16_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 148 'extractvalue' 'q_chunk_V_14' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_15 = extractvalue { i3, i3 } %call_ret17_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 149 'extractvalue' 'q_chunk_V_15' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_16 = extractvalue { i3, i3 } %call_ret18_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 150 'extractvalue' 'q_chunk_V_16' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 151 [1/2] (2.66ns)   --->   "%call_ret_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %tmp_10, i3 %r_V_19) nounwind" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 151 'call' 'call_ret_i_i' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_17 = extractvalue { i3, i3 } %call_ret_i_i, 0" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 152 'extractvalue' 'q_chunk_V_17' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%tmp_11 = trunc i3 %q_chunk_V to i1" [jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163]   --->   Operation 153 'trunc' 'tmp_11' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%new_mant_V = call i52 @_ssdm_op_BitConcatenate.i52.i1.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3(i1 %tmp_11, i3 %q_chunk_V_1, i3 %q_chunk_V_2, i3 %q_chunk_V_3, i3 %q_chunk_V_4, i3 %q_chunk_V_5, i3 %q_chunk_V_6, i3 %q_chunk_V_7, i3 %q_chunk_V_8, i3 %q_chunk_V_9, i3 %q_chunk_V_10, i3 %q_chunk_V_11, i3 %q_chunk_V_12, i3 %q_chunk_V_13, i3 %q_chunk_V_14, i3 %q_chunk_V_15, i3 %q_chunk_V_16, i3 %q_chunk_V_17)" [jacobi-2d-imper.cpp:163]   --->   Operation 154 'bitconcatenate' 'new_mant_V' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_20 : Operation 155 [1/1] (0.70ns) (out node of the LUT)   --->   "%p_Repl2_s = select i1 %tmp_2, i52 %new_mant_V_1, i52 %new_mant_V" [jacobi-2d-imper.cpp:164]   --->   Operation 155 'select' 'p_Repl2_s' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 156 [1/1] (0.00ns)   --->   "%p_Result_1 = call i64 @_ssdm_op_BitConcatenate.i64.i1.i11.i52(i1 %p_Repl2_2, i11 %p_Repl2_1, i52 %p_Repl2_s) nounwind" [jacobi-2d-imper.cpp:117->jacobi-2d-imper.cpp:168]   --->   Operation 156 'bitconcatenate' 'p_Result_1' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 157 [1/1] (0.00ns)   --->   "%out = bitcast i64 %p_Result_1 to double" [jacobi-2d-imper.cpp:118->jacobi-2d-imper.cpp:168]   --->   Operation 157 'bitcast' 'out' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 158 [1/1] (0.00ns)   --->   "ret double %out" [jacobi-2d-imper.cpp:169]   --->   Operation 158 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.69ns
The critical path consists of the following:
	wire read on port 'in_r' [8]  (0 ns)
	'icmp' operation ('icmp', jacobi-2d-imper.cpp:140) [15]  (0.644 ns)
	'select' operation ('shift_V_cast_cast', jacobi-2d-imper.cpp:140) [16]  (0.654 ns)
	'icmp' operation ('tmp_4', jacobi-2d-imper.cpp:149) [20]  (1.33 ns)
	'or' operation ('sel_tmp2_demorgan', jacobi-2d-imper.cpp:146) [25]  (0 ns)
	'xor' operation ('sel_tmp2', jacobi-2d-imper.cpp:146) [26]  (0 ns)
	'and' operation ('sel_tmp3', jacobi-2d-imper.cpp:150) [27]  (0 ns)
	'select' operation ('shift.V', jacobi-2d-imper.cpp:150) [28]  (0 ns)
	'select' operation ('shift.V', jacobi-2d-imper.cpp:146) [29]  (0.633 ns)
	'select' operation ('shift.V', jacobi-2d-imper.cpp:149) [32]  (0.633 ns)
	'lshr' operation ('r.V', jacobi-2d-imper.cpp:157) [35]  (0 ns)
	'select' operation ('xf.V', jacobi-2d-imper.cpp:156) [38]  (2.92 ns)
	'select' operation ('xf.V', jacobi-2d-imper.cpp:146) [40]  (0 ns)
	'add' operation ('xf.V', jacobi-2d-imper.cpp:162) [41]  (1.89 ns)

 <State 2>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret1_i_i', jacobi-2d-imper.cpp:83->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [44]  (2.66 ns)

 <State 3>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret2_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [47]  (2.66 ns)

 <State 4>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret3_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [51]  (2.66 ns)

 <State 5>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret4_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [55]  (2.66 ns)

 <State 6>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret5_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [59]  (2.66 ns)

 <State 7>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret6_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [63]  (2.66 ns)

 <State 8>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret7_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [67]  (2.66 ns)

 <State 9>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret8_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [71]  (2.66 ns)

 <State 10>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret9_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [75]  (2.66 ns)

 <State 11>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret10_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [79]  (2.66 ns)

 <State 12>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret11_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [83]  (2.66 ns)

 <State 13>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret12_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [87]  (2.66 ns)

 <State 14>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret13_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [91]  (2.66 ns)

 <State 15>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret14_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [95]  (2.66 ns)

 <State 16>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret15_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [99]  (2.66 ns)

 <State 17>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret16_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [103]  (2.66 ns)

 <State 18>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret17_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [107]  (2.66 ns)

 <State 19>: 2.66ns
The critical path consists of the following:
	'call' operation ('call_ret18_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [111]  (2.66 ns)

 <State 20>: 3.37ns
The critical path consists of the following:
	'call' operation ('call_ret_i_i', jacobi-2d-imper.cpp:89->jacobi-2d-imper.cpp:97->jacobi-2d-imper.cpp:163) to 'lut_div5_chunk' [115]  (2.66 ns)
	'select' operation ('__Repl2__', jacobi-2d-imper.cpp:164) [123]  (0.708 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
