// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_fdtd_2d_optimized,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.292000,HLS_SYN_LAT=8538303751,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=14,HLS_SYN_FF=5627,HLS_SYN_LUT=4924,HLS_VERSION=2018_2}" *)

module kernel_fdtd_2d_optimized (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmax,
        nx,
        ny,
        ex_address0,
        ex_ce0,
        ex_we0,
        ex_d0,
        ex_q0,
        ex_address1,
        ex_ce1,
        ex_q1,
        ey_address0,
        ey_ce0,
        ey_we0,
        ey_d0,
        ey_q0,
        hz_address0,
        hz_ce0,
        hz_q0,
        hz_address1,
        hz_ce1,
        hz_we1,
        hz_d1,
        hz_q1,
        p_fict_s_address0,
        p_fict_s_ce0,
        p_fict_s_q0
);

parameter    ap_ST_fsm_state1 = 189'd1;
parameter    ap_ST_fsm_state2 = 189'd2;
parameter    ap_ST_fsm_state3 = 189'd4;
parameter    ap_ST_fsm_state4 = 189'd8;
parameter    ap_ST_fsm_state5 = 189'd16;
parameter    ap_ST_fsm_state6 = 189'd32;
parameter    ap_ST_fsm_state7 = 189'd64;
parameter    ap_ST_fsm_state8 = 189'd128;
parameter    ap_ST_fsm_state9 = 189'd256;
parameter    ap_ST_fsm_state10 = 189'd512;
parameter    ap_ST_fsm_state11 = 189'd1024;
parameter    ap_ST_fsm_state12 = 189'd2048;
parameter    ap_ST_fsm_state13 = 189'd4096;
parameter    ap_ST_fsm_state14 = 189'd8192;
parameter    ap_ST_fsm_state15 = 189'd16384;
parameter    ap_ST_fsm_state16 = 189'd32768;
parameter    ap_ST_fsm_state17 = 189'd65536;
parameter    ap_ST_fsm_state18 = 189'd131072;
parameter    ap_ST_fsm_state19 = 189'd262144;
parameter    ap_ST_fsm_state20 = 189'd524288;
parameter    ap_ST_fsm_state21 = 189'd1048576;
parameter    ap_ST_fsm_state22 = 189'd2097152;
parameter    ap_ST_fsm_state23 = 189'd4194304;
parameter    ap_ST_fsm_state24 = 189'd8388608;
parameter    ap_ST_fsm_state25 = 189'd16777216;
parameter    ap_ST_fsm_state26 = 189'd33554432;
parameter    ap_ST_fsm_state27 = 189'd67108864;
parameter    ap_ST_fsm_state28 = 189'd134217728;
parameter    ap_ST_fsm_state29 = 189'd268435456;
parameter    ap_ST_fsm_state30 = 189'd536870912;
parameter    ap_ST_fsm_state31 = 189'd1073741824;
parameter    ap_ST_fsm_state32 = 189'd2147483648;
parameter    ap_ST_fsm_state33 = 189'd4294967296;
parameter    ap_ST_fsm_state34 = 189'd8589934592;
parameter    ap_ST_fsm_state35 = 189'd17179869184;
parameter    ap_ST_fsm_state36 = 189'd34359738368;
parameter    ap_ST_fsm_state37 = 189'd68719476736;
parameter    ap_ST_fsm_state38 = 189'd137438953472;
parameter    ap_ST_fsm_state39 = 189'd274877906944;
parameter    ap_ST_fsm_state40 = 189'd549755813888;
parameter    ap_ST_fsm_state41 = 189'd1099511627776;
parameter    ap_ST_fsm_state42 = 189'd2199023255552;
parameter    ap_ST_fsm_state43 = 189'd4398046511104;
parameter    ap_ST_fsm_state44 = 189'd8796093022208;
parameter    ap_ST_fsm_state45 = 189'd17592186044416;
parameter    ap_ST_fsm_state46 = 189'd35184372088832;
parameter    ap_ST_fsm_state47 = 189'd70368744177664;
parameter    ap_ST_fsm_state48 = 189'd140737488355328;
parameter    ap_ST_fsm_state49 = 189'd281474976710656;
parameter    ap_ST_fsm_state50 = 189'd562949953421312;
parameter    ap_ST_fsm_state51 = 189'd1125899906842624;
parameter    ap_ST_fsm_state52 = 189'd2251799813685248;
parameter    ap_ST_fsm_state53 = 189'd4503599627370496;
parameter    ap_ST_fsm_state54 = 189'd9007199254740992;
parameter    ap_ST_fsm_state55 = 189'd18014398509481984;
parameter    ap_ST_fsm_state56 = 189'd36028797018963968;
parameter    ap_ST_fsm_state57 = 189'd72057594037927936;
parameter    ap_ST_fsm_state58 = 189'd144115188075855872;
parameter    ap_ST_fsm_state59 = 189'd288230376151711744;
parameter    ap_ST_fsm_state60 = 189'd576460752303423488;
parameter    ap_ST_fsm_state61 = 189'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 189'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 189'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 189'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 189'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 189'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 189'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 189'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 189'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 189'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 189'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 189'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 189'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 189'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 189'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 189'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 189'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 189'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 189'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 189'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 189'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 189'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 189'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 189'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 189'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 189'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 189'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 189'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 189'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 189'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 189'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 189'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 189'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 189'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 189'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 189'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 189'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 189'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 189'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 189'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 189'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 189'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 189'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 189'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 189'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 189'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 189'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 189'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 189'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 189'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 189'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 189'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 189'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 189'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 189'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 189'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 189'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 189'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 189'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 189'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 189'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 189'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 189'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 189'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 189'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 189'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 189'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 189'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 189'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 189'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 189'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 189'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 189'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 189'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 189'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 189'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 189'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 189'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 189'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 189'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 189'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 189'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 189'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 189'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 189'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 189'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 189'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 189'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 189'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 189'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 189'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 189'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 189'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 189'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 189'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 189'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 189'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 189'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 189'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 189'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 189'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 189'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 189'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 189'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 189'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 189'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 189'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 189'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 189'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 189'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 189'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 189'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 189'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 189'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 189'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 189'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 189'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 189'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 189'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 189'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 189'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 189'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 189'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 189'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 189'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 189'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 189'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 189'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 189'd392318858461667547739736838950479151006397215279002157056;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] tmax;
input  [31:0] nx;
input  [31:0] ny;
output  [19:0] ex_address0;
output   ex_ce0;
output   ex_we0;
output  [63:0] ex_d0;
input  [63:0] ex_q0;
output  [19:0] ex_address1;
output   ex_ce1;
input  [63:0] ex_q1;
output  [19:0] ey_address0;
output   ey_ce0;
output   ey_we0;
output  [63:0] ey_d0;
input  [63:0] ey_q0;
output  [19:0] hz_address0;
output   hz_ce0;
input  [63:0] hz_q0;
output  [19:0] hz_address1;
output   hz_ce1;
output   hz_we1;
output  [63:0] hz_d1;
input  [63:0] hz_q1;
output  [5:0] p_fict_s_address0;
output   p_fict_s_ce0;
input  [63:0] p_fict_s_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[19:0] ex_address0;
reg ex_ce0;
reg ex_we0;
reg ex_ce1;
reg[19:0] ey_address0;
reg ey_ce0;
reg ey_we0;
reg[63:0] ey_d0;
reg[19:0] hz_address0;
reg hz_ce0;
reg[19:0] hz_address1;
reg hz_ce1;
reg hz_we1;
reg p_fict_s_ce0;

(* fsm_encoding = "none" *) reg   [188:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_331;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state173;
reg   [63:0] reg_336;
wire   [63:0] grp_fu_322_p2;
reg   [63:0] reg_341;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state127;
wire    ap_CS_fsm_state141;
wire    ap_CS_fsm_state155;
wire    ap_CS_fsm_state187;
reg   [63:0] reg_350;
wire    ap_CS_fsm_state40;
reg   [63:0] reg_356;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state113;
wire   [5:0] t_1_fu_367_p2;
reg   [5:0] t_1_reg_943;
wire    ap_CS_fsm_state2;
reg   [5:0] p_fict_addr_reg_948;
wire   [0:0] exitcond7_fu_361_p2;
wire   [9:0] j_4_fu_384_p2;
reg   [9:0] j_4_reg_956;
wire    ap_CS_fsm_state3;
reg   [63:0] p_fict_load_reg_961;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [9:0] tmp_2_fu_401_p2;
reg   [9:0] tmp_2_reg_974;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond5_fu_395_p2;
wire    ap_CS_fsm_state9;
wire   [19:0] grp_fu_922_p2;
reg   [19:0] tmp_1_reg_989;
wire    ap_CS_fsm_state12;
wire   [19:0] grp_fu_928_p2;
reg   [19:0] tmp_3_reg_994;
wire   [9:0] j_5_fu_420_p2;
reg   [9:0] j_5_reg_1002;
wire    ap_CS_fsm_state13;
(* use_dsp48 = "no" *) wire   [19:0] tmp_4_fu_430_p2;
reg   [19:0] tmp_4_reg_1007;
wire   [0:0] exitcond4_fu_414_p2;
(* use_dsp48 = "no" *) wire   [19:0] tmp_5_fu_435_p2;
reg   [19:0] tmp_5_reg_1012;
wire   [9:0] i_3_fu_440_p2;
reg   [19:0] ey_addr_1_reg_1022;
wire    ap_CS_fsm_state14;
reg   [0:0] p_Repl2_2_reg_1037;
wire    ap_CS_fsm_state32;
wire   [10:0] new_exp_V_1_fu_467_p4;
reg   [10:0] new_exp_V_1_reg_1042;
wire   [51:0] new_mant_V_1_fu_477_p1;
reg   [51:0] new_mant_V_1_reg_1049;
wire   [0:0] tmp_i_fu_481_p2;
reg   [0:0] tmp_i_reg_1056;
wire   [1:0] p_0272_2_i_fu_529_p3;
reg   [1:0] p_0272_2_i_reg_1061;
wire    ap_CS_fsm_state33;
wire   [51:0] grp_fu_546_p2;
reg   [51:0] r_V_reg_1082;
wire    ap_CS_fsm_state39;
wire   [53:0] grp_fu_551_p2;
reg   [53:0] r_V_1_reg_1087;
wire   [10:0] p_Repl2_1_fu_595_p3;
reg   [10:0] p_Repl2_1_reg_1092;
wire   [51:0] p_Repl2_s_fu_603_p3;
reg   [51:0] p_Repl2_s_reg_1097;
wire   [63:0] out_fu_617_p1;
wire    ap_CS_fsm_state41;
wire   [19:0] next_mul_fu_622_p2;
reg   [19:0] next_mul_reg_1107;
wire    ap_CS_fsm_state57;
wire   [9:0] i_5_fu_634_p2;
reg   [9:0] i_5_reg_1115;
wire   [9:0] tmp_12_fu_646_p2;
reg   [9:0] tmp_12_reg_1123;
wire    ap_CS_fsm_state58;
wire   [0:0] exitcond2_fu_640_p2;
wire   [19:0] tmp_10_fu_656_p2;
reg   [19:0] tmp_10_reg_1128;
wire    ap_CS_fsm_state59;
wire   [19:0] tmp_14_fu_665_p2;
reg   [19:0] tmp_14_reg_1133;
wire   [9:0] j_6_fu_671_p2;
reg   [9:0] j_6_reg_1138;
reg   [19:0] ex_addr_reg_1143;
wire    ap_CS_fsm_state60;
reg   [0:0] p_Repl2_5_reg_1158;
wire    ap_CS_fsm_state78;
wire   [10:0] new_exp_V_3_fu_698_p4;
reg   [10:0] new_exp_V_3_reg_1163;
wire   [51:0] new_mant_V_3_fu_708_p1;
reg   [51:0] new_mant_V_3_reg_1170;
wire   [0:0] tmp_i6_fu_712_p2;
reg   [0:0] tmp_i6_reg_1177;
wire   [1:0] p_0272_2_i1_fu_760_p3;
reg   [1:0] p_0272_2_i1_reg_1182;
wire    ap_CS_fsm_state79;
wire   [51:0] grp_fu_777_p2;
reg   [51:0] r_V_2_reg_1203;
wire    ap_CS_fsm_state85;
wire   [53:0] grp_fu_782_p2;
reg   [53:0] r_V_3_reg_1208;
wire   [10:0] p_Repl2_4_fu_826_p3;
reg   [10:0] p_Repl2_4_reg_1213;
wire   [51:0] p_Repl2_3_fu_834_p3;
reg   [51:0] p_Repl2_3_reg_1218;
wire   [63:0] out_1_fu_848_p1;
wire    ap_CS_fsm_state87;
wire   [19:0] next_mul2_fu_853_p2;
reg   [19:0] next_mul2_reg_1228;
wire    ap_CS_fsm_state103;
wire   [9:0] i_4_fu_865_p2;
reg   [9:0] i_4_reg_1236;
wire    ap_CS_fsm_state104;
wire   [19:0] grp_fu_934_p2;
reg   [19:0] tmp_9_reg_1247;
wire    ap_CS_fsm_state107;
wire   [9:0] j_7_fu_880_p2;
reg   [9:0] j_7_reg_1255;
wire    ap_CS_fsm_state108;
wire   [19:0] tmp_25_fu_890_p2;
reg   [19:0] tmp_25_reg_1261;
wire    ap_CS_fsm_state109;
(* use_dsp48 = "no" *) wire   [19:0] tmp_26_fu_896_p2;
reg   [19:0] tmp_26_reg_1266;
wire   [19:0] tmp_27_fu_904_p2;
reg   [19:0] tmp_27_reg_1271;
wire   [63:0] tmp_33_cast_fu_910_p1;
reg   [63:0] tmp_33_cast_reg_1276;
wire    ap_CS_fsm_state110;
reg   [63:0] ex_load_2_reg_1292;
wire    ap_CS_fsm_state124;
wire    ap_CS_fsm_state138;
reg   [19:0] hz_addr_4_reg_1307;
wire   [63:0] grp_fu_326_p2;
reg   [63:0] tmp_22_reg_1313;
reg   [5:0] t_reg_206;
wire   [0:0] exitcond1_fu_859_p2;
reg   [9:0] j_reg_217;
wire    ap_CS_fsm_state7;
reg   [9:0] i_reg_229;
wire   [0:0] exitcond6_fu_378_p2;
reg   [9:0] j_1_reg_241;
wire    ap_CS_fsm_state56;
reg   [9:0] i_1_reg_252;
reg   [19:0] phi_mul_reg_263;
reg   [9:0] j_2_reg_275;
wire    ap_CS_fsm_state102;
wire   [0:0] exitcond3_fu_628_p2;
reg   [9:0] i_2_reg_287;
wire   [0:0] exitcond_fu_874_p2;
reg   [19:0] phi_mul1_reg_298;
reg   [9:0] j_3_reg_310;
wire    ap_CS_fsm_state189;
wire   [63:0] tmp_fu_373_p1;
wire   [63:0] tmp_s_fu_390_p1;
wire   [63:0] tmp_25_cast_fu_446_p1;
wire   [63:0] tmp_28_cast_fu_451_p1;
wire   [63:0] tmp_31_cast_fu_677_p1;
wire   [63:0] tmp_32_cast_fu_682_p1;
wire   [63:0] tmp_35_cast_fu_914_p1;
wire   [63:0] tmp_34_cast_fu_918_p1;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state126;
wire    ap_CS_fsm_state139;
wire    ap_CS_fsm_state140;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state170;
wire    ap_CS_fsm_state171;
wire    ap_CS_fsm_state172;
wire    ap_CS_fsm_state188;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state112;
reg   [63:0] grp_fu_322_p0;
reg   [63:0] grp_fu_322_p1;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state128;
wire    ap_CS_fsm_state142;
wire    ap_CS_fsm_state174;
wire    ap_CS_fsm_state156;
wire   [19:0] tmp_5_cast_fu_426_p1;
wire   [63:0] p_Val2_s_fu_455_p1;
wire   [9:0] tmp_11_fu_487_p4;
wire   [1:0] tmp_6_fu_503_p4;
wire   [0:0] icmp_fu_497_p2;
wire   [0:0] tmp_7_fu_523_p2;
wire   [1:0] p_shift_V_i_fu_519_p1;
wire   [1:0] shift_V_i_cast_fu_513_p2;
wire   [51:0] grp_fu_546_p1;
wire   [53:0] grp_fu_551_p0;
wire   [53:0] grp_fu_551_p1;
wire   [0:0] tmp_6_i_fu_562_p2;
wire   [51:0] tmp_13_fu_567_p1;
wire   [0:0] tmp_i_9_fu_577_p2;
wire   [0:0] tmp_1_i_fu_590_p2;
wire   [10:0] p_i_fu_582_p3;
wire   [10:0] new_exp_V_fu_557_p2;
wire   [51:0] xf_V_fu_570_p3;
wire   [63:0] p_Result_s_fu_610_p4;
wire   [19:0] tmp_11_cast_fu_652_p1;
wire   [19:0] tmp_13_cast_fu_662_p1;
wire   [63:0] p_Val2_2_fu_686_p1;
wire   [9:0] tmp_18_fu_718_p4;
wire   [1:0] tmp_15_fu_734_p4;
wire   [0:0] icmp5_fu_728_p2;
wire   [0:0] tmp_17_fu_754_p2;
wire   [1:0] p_shift_V_i1_fu_750_p1;
wire   [1:0] shift_V_i9_cast_fu_744_p2;
wire   [51:0] grp_fu_777_p1;
wire   [53:0] grp_fu_782_p0;
wire   [53:0] grp_fu_782_p1;
wire   [0:0] tmp_6_i1_fu_793_p2;
wire   [51:0] tmp_24_fu_798_p1;
wire   [0:0] tmp_i1_fu_808_p2;
wire   [0:0] tmp_1_i1_fu_821_p2;
wire   [10:0] p_i1_fu_813_p3;
wire   [10:0] new_exp_V_2_fu_788_p2;
wire   [51:0] xf_V_6_fu_801_p3;
wire   [63:0] p_Result_1_fu_841_p4;
wire   [19:0] tmp_17_cast_fu_886_p1;
wire   [19:0] tmp_18_cast_fu_901_p1;
wire   [9:0] grp_fu_922_p0;
wire   [10:0] grp_fu_922_p1;
wire   [9:0] grp_fu_928_p0;
wire   [10:0] grp_fu_928_p1;
wire   [9:0] grp_fu_934_p0;
wire   [10:0] grp_fu_934_p1;
reg   [1:0] grp_fu_322_opcode;
reg   [188:0] ap_NS_fsm;
wire   [19:0] grp_fu_922_p00;
wire   [19:0] grp_fu_928_p00;
wire   [19:0] grp_fu_934_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 189'd1;
end

kernel_fdtd_2d_opbkb #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_fdtd_2d_opbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_322_p0),
    .din1(grp_fu_322_p1),
    .opcode(grp_fu_322_opcode),
    .ce(1'b1),
    .dout(grp_fu_322_p2)
);

kernel_fdtd_2d_opcud #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_fdtd_2d_opcud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_341),
    .din1(64'd4604480259023595110),
    .ce(1'b1),
    .dout(grp_fu_326_p2)
);

kernel_fdtd_2d_opdEe #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 52 ))
kernel_fdtd_2d_opdEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(new_mant_V_1_reg_1049),
    .din1(grp_fu_546_p1),
    .ce(1'b1),
    .dout(grp_fu_546_p2)
);

kernel_fdtd_2d_opeOg #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 54 ))
kernel_fdtd_2d_opeOg_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_551_p0),
    .din1(grp_fu_551_p1),
    .ce(1'b1),
    .dout(grp_fu_551_p2)
);

kernel_fdtd_2d_opdEe #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 52 ))
kernel_fdtd_2d_opdEe_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(new_mant_V_3_reg_1170),
    .din1(grp_fu_777_p1),
    .ce(1'b1),
    .dout(grp_fu_777_p2)
);

kernel_fdtd_2d_opeOg #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 54 ))
kernel_fdtd_2d_opeOg_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_782_p0),
    .din1(grp_fu_782_p1),
    .ce(1'b1),
    .dout(grp_fu_782_p2)
);

kernel_fdtd_2d_opfYi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_fdtd_2d_opfYi_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_922_p0),
    .din1(grp_fu_922_p1),
    .ce(1'b1),
    .dout(grp_fu_922_p2)
);

kernel_fdtd_2d_opfYi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_fdtd_2d_opfYi_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_928_p0),
    .din1(grp_fu_928_p1),
    .ce(1'b1),
    .dout(grp_fu_928_p2)
);

kernel_fdtd_2d_opfYi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_fdtd_2d_opfYi_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_934_p0),
    .din1(grp_fu_934_p1),
    .ce(1'b1),
    .dout(grp_fu_934_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_395_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_1_reg_252 <= 10'd0;
    end else if (((exitcond2_fu_640_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
        i_1_reg_252 <= i_5_reg_1115;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_628_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        i_2_reg_287 <= 10'd0;
    end else if (((exitcond_fu_874_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state108))) begin
        i_2_reg_287 <= i_4_reg_1236;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_229 <= 10'd1;
    end else if (((exitcond4_fu_414_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_reg_229 <= i_3_fu_440_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_1_reg_241 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        j_1_reg_241 <= j_5_reg_1002;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_628_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
        j_2_reg_275 <= 10'd1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        j_2_reg_275 <= j_6_reg_1138;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        j_3_reg_310 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state189)) begin
        j_3_reg_310 <= j_7_reg_1255;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_361_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_217 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        j_reg_217 <= j_4_reg_956;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_628_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        phi_mul1_reg_298 <= 20'd0;
    end else if (((exitcond_fu_874_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state108))) begin
        phi_mul1_reg_298 <= next_mul2_reg_1228;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_395_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        phi_mul_reg_263 <= 20'd0;
    end else if (((exitcond2_fu_640_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
        phi_mul_reg_263 <= next_mul_reg_1107;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_859_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
        t_reg_206 <= t_1_reg_943;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_reg_206 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ex_addr_reg_1143 <= tmp_31_cast_fu_677_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        ex_load_2_reg_1292 <= ex_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ey_addr_1_reg_1022 <= tmp_25_cast_fu_446_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        hz_addr_4_reg_1307 <= tmp_33_cast_reg_1276;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        i_4_reg_1236 <= i_4_fu_865_p2;
        next_mul2_reg_1228 <= next_mul2_fu_853_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        i_5_reg_1115 <= i_5_fu_634_p2;
        next_mul_reg_1107 <= next_mul_fu_622_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_4_reg_956 <= j_4_fu_384_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j_5_reg_1002 <= j_5_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        j_6_reg_1138 <= j_6_fu_671_p2;
        tmp_10_reg_1128 <= tmp_10_fu_656_p2;
        tmp_14_reg_1133 <= tmp_14_fu_665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        j_7_reg_1255 <= j_7_fu_880_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        new_exp_V_1_reg_1042 <= {{p_Val2_s_fu_455_p1[62:52]}};
        new_mant_V_1_reg_1049 <= new_mant_V_1_fu_477_p1;
        p_0272_2_i_reg_1061 <= p_0272_2_i_fu_529_p3;
        p_Repl2_2_reg_1037 <= p_Val2_s_fu_455_p1[32'd63];
        tmp_i_reg_1056 <= tmp_i_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        new_exp_V_3_reg_1163 <= {{p_Val2_2_fu_686_p1[62:52]}};
        new_mant_V_3_reg_1170 <= new_mant_V_3_fu_708_p1;
        p_0272_2_i1_reg_1182 <= p_0272_2_i1_fu_760_p3;
        p_Repl2_5_reg_1158 <= p_Val2_2_fu_686_p1[32'd63];
        tmp_i6_reg_1177 <= tmp_i6_fu_712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        p_Repl2_1_reg_1092 <= p_Repl2_1_fu_595_p3;
        p_Repl2_s_reg_1097 <= p_Repl2_s_fu_603_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        p_Repl2_3_reg_1218 <= p_Repl2_3_fu_834_p3;
        p_Repl2_4_reg_1213 <= p_Repl2_4_fu_826_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_361_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_fict_addr_reg_948 <= tmp_fu_373_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_fict_load_reg_961 <= p_fict_s_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        r_V_1_reg_1087 <= grp_fu_551_p2;
        r_V_reg_1082 <= grp_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        r_V_2_reg_1203 <= grp_fu_777_p2;
        r_V_3_reg_1208 <= grp_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_331 <= hz_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_336 <= hz_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_341 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state127))) begin
        reg_350 <= ey_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state86))) begin
        reg_356 <= ex_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        t_1_reg_943 <= t_1_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_640_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state58))) begin
        tmp_12_reg_1123 <= tmp_12_fu_646_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_1_reg_989 <= grp_fu_922_p2;
        tmp_3_reg_994 <= grp_fu_928_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state173)) begin
        tmp_22_reg_1313 <= grp_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        tmp_25_reg_1261 <= tmp_25_fu_890_p2;
        tmp_26_reg_1266 <= tmp_26_fu_896_p2;
        tmp_27_reg_1271 <= tmp_27_fu_904_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_2_reg_974 <= tmp_2_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        tmp_33_cast_reg_1276[19 : 0] <= tmp_33_cast_fu_910_p1[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_414_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        tmp_4_reg_1007 <= tmp_4_fu_430_p2;
        tmp_5_reg_1012 <= tmp_5_fu_435_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        tmp_9_reg_1247 <= grp_fu_934_p2;
    end
end

always @ (*) begin
    if (((exitcond7_fu_361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond7_fu_361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        ex_address0 = tmp_35_cast_fu_914_p1;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state83))) begin
        ex_address0 = ex_addr_reg_1143;
    end else begin
        ex_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state86))) begin
        ex_ce0 = 1'b1;
    end else begin
        ex_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state113))) begin
        ex_ce1 = 1'b1;
    end else begin
        ex_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        ex_we0 = 1'b1;
    end else begin
        ex_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        ey_address0 = tmp_33_cast_reg_1276;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        ey_address0 = tmp_34_cast_fu_918_p1;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state37))) begin
        ey_address0 = ey_addr_1_reg_1022;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ey_address0 = tmp_s_fu_390_p1;
    end else begin
        ey_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state127))) begin
        ey_ce0 = 1'b1;
    end else begin
        ey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ey_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ey_d0 = p_fict_load_reg_961;
    end else begin
        ey_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state6))) begin
        ey_we0 = 1'b1;
    end else begin
        ey_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_322_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_fu_322_opcode = 2'd0;
    end else begin
        grp_fu_322_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state128))) begin
        grp_fu_322_p0 = reg_341;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state87))) begin
        grp_fu_322_p0 = reg_356;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_322_p0 = reg_350;
    end else if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_322_p0 = reg_331;
    end else begin
        grp_fu_322_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_322_p1 = tmp_22_reg_1313;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state128))) begin
        grp_fu_322_p1 = reg_350;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_322_p1 = ex_load_2_reg_1292;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_322_p1 = out_1_fu_848_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_322_p1 = out_fu_617_p1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_322_p1 = reg_336;
    end else begin
        grp_fu_322_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state170)) begin
        hz_address0 = hz_addr_4_reg_1307;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        hz_address0 = tmp_31_cast_fu_677_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        hz_address0 = tmp_25_cast_fu_446_p1;
    end else begin
        hz_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state188)) begin
        hz_address1 = hz_addr_4_reg_1307;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        hz_address1 = tmp_32_cast_fu_682_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        hz_address1 = tmp_28_cast_fu_451_p1;
    end else begin
        hz_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state172) | (1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state17))) begin
        hz_ce0 = 1'b1;
    end else begin
        hz_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state189) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state17))) begin
        hz_ce1 = 1'b1;
    end else begin
        hz_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state188)) begin
        hz_we1 = 1'b1;
    end else begin
        hz_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        p_fict_s_ce0 = 1'b1;
    end else begin
        p_fict_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond7_fu_361_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond6_fu_378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond5_fu_395_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((exitcond4_fu_414_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state57 : begin
            if (((exitcond3_fu_628_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((exitcond2_fu_640_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state103 : begin
            if (((exitcond1_fu_859_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            if (((exitcond_fu_874_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state108))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd169];

assign ap_CS_fsm_state171 = ap_CS_fsm[32'd170];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd171];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd172];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd173];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state187 = ap_CS_fsm[32'd186];

assign ap_CS_fsm_state188 = ap_CS_fsm[32'd187];

assign ap_CS_fsm_state189 = ap_CS_fsm[32'd188];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ex_address1 = tmp_33_cast_fu_910_p1;

assign ex_d0 = reg_341;

assign exitcond1_fu_859_p2 = ((i_2_reg_287 == 10'd999) ? 1'b1 : 1'b0);

assign exitcond2_fu_640_p2 = ((j_2_reg_275 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond3_fu_628_p2 = ((i_1_reg_252 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond4_fu_414_p2 = ((j_1_reg_241 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond5_fu_395_p2 = ((i_reg_229 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond6_fu_378_p2 = ((j_reg_217 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond7_fu_361_p2 = ((t_reg_206 == 6'd50) ? 1'b1 : 1'b0);

assign exitcond_fu_874_p2 = ((j_3_reg_310 == 10'd999) ? 1'b1 : 1'b0);

assign grp_fu_546_p1 = p_0272_2_i_reg_1061;

assign grp_fu_551_p0 = new_mant_V_1_reg_1049;

assign grp_fu_551_p1 = p_0272_2_i_reg_1061;

assign grp_fu_777_p1 = p_0272_2_i1_reg_1182;

assign grp_fu_782_p0 = new_mant_V_3_reg_1170;

assign grp_fu_782_p1 = p_0272_2_i1_reg_1182;

assign grp_fu_922_p0 = grp_fu_922_p00;

assign grp_fu_922_p00 = i_reg_229;

assign grp_fu_922_p1 = 20'd1000;

assign grp_fu_928_p0 = grp_fu_928_p00;

assign grp_fu_928_p00 = tmp_2_reg_974;

assign grp_fu_928_p1 = 20'd1000;

assign grp_fu_934_p0 = grp_fu_934_p00;

assign grp_fu_934_p00 = i_4_reg_1236;

assign grp_fu_934_p1 = 20'd1000;

assign hz_d1 = reg_341;

assign i_3_fu_440_p2 = (i_reg_229 + 10'd1);

assign i_4_fu_865_p2 = (i_2_reg_287 + 10'd1);

assign i_5_fu_634_p2 = (i_1_reg_252 + 10'd1);

assign icmp5_fu_728_p2 = ((tmp_18_fu_718_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_497_p2 = ((tmp_11_fu_487_p4 != 10'd0) ? 1'b1 : 1'b0);

assign j_4_fu_384_p2 = (j_reg_217 + 10'd1);

assign j_5_fu_420_p2 = (j_1_reg_241 + 10'd1);

assign j_6_fu_671_p2 = (10'd1 + j_2_reg_275);

assign j_7_fu_880_p2 = (j_3_reg_310 + 10'd1);

assign new_exp_V_1_fu_467_p4 = {{p_Val2_s_fu_455_p1[62:52]}};

assign new_exp_V_2_fu_788_p2 = ($signed(11'd2047) + $signed(new_exp_V_3_reg_1163));

assign new_exp_V_3_fu_698_p4 = {{p_Val2_2_fu_686_p1[62:52]}};

assign new_exp_V_fu_557_p2 = ($signed(11'd2047) + $signed(new_exp_V_1_reg_1042));

assign new_mant_V_1_fu_477_p1 = p_Val2_s_fu_455_p1[51:0];

assign new_mant_V_3_fu_708_p1 = p_Val2_2_fu_686_p1[51:0];

assign next_mul2_fu_853_p2 = (phi_mul1_reg_298 + 20'd1000);

assign next_mul_fu_622_p2 = (phi_mul_reg_263 + 20'd1000);

assign out_1_fu_848_p1 = p_Result_1_fu_841_p4;

assign out_fu_617_p1 = p_Result_s_fu_610_p4;

assign p_0272_2_i1_fu_760_p3 = ((tmp_17_fu_754_p2[0:0] === 1'b1) ? p_shift_V_i1_fu_750_p1 : shift_V_i9_cast_fu_744_p2);

assign p_0272_2_i_fu_529_p3 = ((tmp_7_fu_523_p2[0:0] === 1'b1) ? p_shift_V_i_fu_519_p1 : shift_V_i_cast_fu_513_p2);

assign p_Repl2_1_fu_595_p3 = ((tmp_1_i_fu_590_p2[0:0] === 1'b1) ? p_i_fu_582_p3 : new_exp_V_fu_557_p2);

assign p_Repl2_3_fu_834_p3 = ((tmp_i1_fu_808_p2[0:0] === 1'b1) ? new_mant_V_3_reg_1170 : xf_V_6_fu_801_p3);

assign p_Repl2_4_fu_826_p3 = ((tmp_1_i1_fu_821_p2[0:0] === 1'b1) ? p_i1_fu_813_p3 : new_exp_V_2_fu_788_p2);

assign p_Repl2_s_fu_603_p3 = ((tmp_i_9_fu_577_p2[0:0] === 1'b1) ? new_mant_V_1_reg_1049 : xf_V_fu_570_p3);

assign p_Result_1_fu_841_p4 = {{{p_Repl2_5_reg_1158}, {p_Repl2_4_reg_1213}}, {p_Repl2_3_reg_1218}};

assign p_Result_s_fu_610_p4 = {{{p_Repl2_2_reg_1037}, {p_Repl2_1_reg_1092}}, {p_Repl2_s_reg_1097}};

assign p_Val2_2_fu_686_p1 = reg_341;

assign p_Val2_s_fu_455_p1 = reg_341;

assign p_fict_s_address0 = p_fict_addr_reg_948;

assign p_i1_fu_813_p3 = ((tmp_i1_fu_808_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign p_i_fu_582_p3 = ((tmp_i_9_fu_577_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign p_shift_V_i1_fu_750_p1 = tmp_i6_fu_712_p2;

assign p_shift_V_i_fu_519_p1 = tmp_i_fu_481_p2;

assign shift_V_i9_cast_fu_744_p2 = ($signed(2'd2) - $signed(tmp_15_fu_734_p4));

assign shift_V_i_cast_fu_513_p2 = ($signed(2'd2) - $signed(tmp_6_fu_503_p4));

assign t_1_fu_367_p2 = (t_reg_206 + 6'd1);

assign tmp_10_fu_656_p2 = (tmp_11_cast_fu_652_p1 + phi_mul_reg_263);

assign tmp_11_cast_fu_652_p1 = j_2_reg_275;

assign tmp_11_fu_487_p4 = {{p_Val2_s_fu_455_p1[62:53]}};

assign tmp_12_fu_646_p2 = ($signed(10'd1023) + $signed(j_2_reg_275));

assign tmp_13_cast_fu_662_p1 = tmp_12_reg_1123;

assign tmp_13_fu_567_p1 = r_V_1_reg_1087[51:0];

assign tmp_14_fu_665_p2 = (tmp_13_cast_fu_662_p1 + phi_mul_reg_263);

assign tmp_15_fu_734_p4 = {{p_Val2_2_fu_686_p1[53:52]}};

assign tmp_17_cast_fu_886_p1 = j_3_reg_310;

assign tmp_17_fu_754_p2 = (tmp_i6_fu_712_p2 | icmp5_fu_728_p2);

assign tmp_18_cast_fu_901_p1 = j_7_reg_1255;

assign tmp_18_fu_718_p4 = {{p_Val2_2_fu_686_p1[62:53]}};

assign tmp_1_i1_fu_821_p2 = (tmp_i6_reg_1177 | tmp_i1_fu_808_p2);

assign tmp_1_i_fu_590_p2 = (tmp_i_reg_1056 | tmp_i_9_fu_577_p2);

assign tmp_24_fu_798_p1 = r_V_3_reg_1208[51:0];

assign tmp_25_cast_fu_446_p1 = tmp_4_reg_1007;

assign tmp_25_fu_890_p2 = (phi_mul1_reg_298 + tmp_17_cast_fu_886_p1);

assign tmp_26_fu_896_p2 = (tmp_9_reg_1247 + tmp_17_cast_fu_886_p1);

assign tmp_27_fu_904_p2 = (phi_mul1_reg_298 + tmp_18_cast_fu_901_p1);

assign tmp_28_cast_fu_451_p1 = tmp_5_reg_1012;

assign tmp_2_fu_401_p2 = ($signed(i_reg_229) + $signed(10'd1023));

assign tmp_31_cast_fu_677_p1 = tmp_10_reg_1128;

assign tmp_32_cast_fu_682_p1 = tmp_14_reg_1133;

assign tmp_33_cast_fu_910_p1 = tmp_25_reg_1261;

assign tmp_34_cast_fu_918_p1 = tmp_26_reg_1266;

assign tmp_35_cast_fu_914_p1 = tmp_27_reg_1271;

assign tmp_4_fu_430_p2 = (tmp_5_cast_fu_426_p1 + tmp_1_reg_989);

assign tmp_5_cast_fu_426_p1 = j_1_reg_241;

assign tmp_5_fu_435_p2 = (tmp_5_cast_fu_426_p1 + tmp_3_reg_994);

assign tmp_6_fu_503_p4 = {{p_Val2_s_fu_455_p1[53:52]}};

assign tmp_6_i1_fu_793_p2 = ((new_exp_V_3_reg_1163 < 11'd3) ? 1'b1 : 1'b0);

assign tmp_6_i_fu_562_p2 = ((new_exp_V_1_reg_1042 < 11'd3) ? 1'b1 : 1'b0);

assign tmp_7_fu_523_p2 = (tmp_i_fu_481_p2 | icmp_fu_497_p2);

assign tmp_fu_373_p1 = t_reg_206;

assign tmp_i1_fu_808_p2 = ((new_exp_V_3_reg_1163 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_i6_fu_712_p2 = ((new_exp_V_3_fu_698_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_i_9_fu_577_p2 = ((new_exp_V_1_reg_1042 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_i_fu_481_p2 = ((new_exp_V_1_fu_467_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_390_p1 = j_reg_217;

assign xf_V_6_fu_801_p3 = ((tmp_6_i1_fu_793_p2[0:0] === 1'b1) ? r_V_2_reg_1203 : tmp_24_fu_798_p1);

assign xf_V_fu_570_p3 = ((tmp_6_i_fu_562_p2[0:0] === 1'b1) ? r_V_reg_1082 : tmp_13_fu_567_p1);

always @ (posedge ap_clk) begin
    tmp_33_cast_reg_1276[63:20] <= 44'b00000000000000000000000000000000000000000000;
end

endmodule //kernel_fdtd_2d_optimized
