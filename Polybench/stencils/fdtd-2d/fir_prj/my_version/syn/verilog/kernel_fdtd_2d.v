// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_fdtd_2d,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.334000,HLS_SYN_LAT=3245651601,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=17,HLS_SYN_FF=1781,HLS_SYN_LUT=3275,HLS_VERSION=2018_2}" *)

module kernel_fdtd_2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmax,
        nx,
        ny,
        ex_address0,
        ex_ce0,
        ex_we0,
        ex_d0,
        ex_q0,
        ex_address1,
        ex_ce1,
        ex_q1,
        ey_address0,
        ey_ce0,
        ey_we0,
        ey_d0,
        ey_q0,
        hz_address0,
        hz_ce0,
        hz_q0,
        hz_address1,
        hz_ce1,
        hz_we1,
        hz_d1,
        hz_q1,
        p_fict_s_address0,
        p_fict_s_ce0,
        p_fict_s_q0
);

parameter    ap_ST_fsm_state1 = 73'd1;
parameter    ap_ST_fsm_state2 = 73'd2;
parameter    ap_ST_fsm_state3 = 73'd4;
parameter    ap_ST_fsm_state4 = 73'd8;
parameter    ap_ST_fsm_state5 = 73'd16;
parameter    ap_ST_fsm_state6 = 73'd32;
parameter    ap_ST_fsm_state7 = 73'd64;
parameter    ap_ST_fsm_state8 = 73'd128;
parameter    ap_ST_fsm_state9 = 73'd256;
parameter    ap_ST_fsm_state10 = 73'd512;
parameter    ap_ST_fsm_state11 = 73'd1024;
parameter    ap_ST_fsm_state12 = 73'd2048;
parameter    ap_ST_fsm_state13 = 73'd4096;
parameter    ap_ST_fsm_state14 = 73'd8192;
parameter    ap_ST_fsm_state15 = 73'd16384;
parameter    ap_ST_fsm_state16 = 73'd32768;
parameter    ap_ST_fsm_state17 = 73'd65536;
parameter    ap_ST_fsm_state18 = 73'd131072;
parameter    ap_ST_fsm_state19 = 73'd262144;
parameter    ap_ST_fsm_state20 = 73'd524288;
parameter    ap_ST_fsm_state21 = 73'd1048576;
parameter    ap_ST_fsm_state22 = 73'd2097152;
parameter    ap_ST_fsm_state23 = 73'd4194304;
parameter    ap_ST_fsm_state24 = 73'd8388608;
parameter    ap_ST_fsm_state25 = 73'd16777216;
parameter    ap_ST_fsm_state26 = 73'd33554432;
parameter    ap_ST_fsm_state27 = 73'd67108864;
parameter    ap_ST_fsm_state28 = 73'd134217728;
parameter    ap_ST_fsm_state29 = 73'd268435456;
parameter    ap_ST_fsm_state30 = 73'd536870912;
parameter    ap_ST_fsm_state31 = 73'd1073741824;
parameter    ap_ST_fsm_state32 = 73'd2147483648;
parameter    ap_ST_fsm_state33 = 73'd4294967296;
parameter    ap_ST_fsm_state34 = 73'd8589934592;
parameter    ap_ST_fsm_state35 = 73'd17179869184;
parameter    ap_ST_fsm_state36 = 73'd34359738368;
parameter    ap_ST_fsm_state37 = 73'd68719476736;
parameter    ap_ST_fsm_state38 = 73'd137438953472;
parameter    ap_ST_fsm_state39 = 73'd274877906944;
parameter    ap_ST_fsm_state40 = 73'd549755813888;
parameter    ap_ST_fsm_state41 = 73'd1099511627776;
parameter    ap_ST_fsm_state42 = 73'd2199023255552;
parameter    ap_ST_fsm_state43 = 73'd4398046511104;
parameter    ap_ST_fsm_state44 = 73'd8796093022208;
parameter    ap_ST_fsm_state45 = 73'd17592186044416;
parameter    ap_ST_fsm_state46 = 73'd35184372088832;
parameter    ap_ST_fsm_state47 = 73'd70368744177664;
parameter    ap_ST_fsm_state48 = 73'd140737488355328;
parameter    ap_ST_fsm_state49 = 73'd281474976710656;
parameter    ap_ST_fsm_state50 = 73'd562949953421312;
parameter    ap_ST_fsm_state51 = 73'd1125899906842624;
parameter    ap_ST_fsm_state52 = 73'd2251799813685248;
parameter    ap_ST_fsm_state53 = 73'd4503599627370496;
parameter    ap_ST_fsm_state54 = 73'd9007199254740992;
parameter    ap_ST_fsm_state55 = 73'd18014398509481984;
parameter    ap_ST_fsm_state56 = 73'd36028797018963968;
parameter    ap_ST_fsm_state57 = 73'd72057594037927936;
parameter    ap_ST_fsm_state58 = 73'd144115188075855872;
parameter    ap_ST_fsm_state59 = 73'd288230376151711744;
parameter    ap_ST_fsm_state60 = 73'd576460752303423488;
parameter    ap_ST_fsm_state61 = 73'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 73'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 73'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 73'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 73'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 73'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 73'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 73'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 73'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 73'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 73'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 73'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 73'd4722366482869645213696;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] tmax;
input  [31:0] nx;
input  [31:0] ny;
output  [19:0] ex_address0;
output   ex_ce0;
output   ex_we0;
output  [63:0] ex_d0;
input  [63:0] ex_q0;
output  [19:0] ex_address1;
output   ex_ce1;
input  [63:0] ex_q1;
output  [19:0] ey_address0;
output   ey_ce0;
output   ey_we0;
output  [63:0] ey_d0;
input  [63:0] ey_q0;
output  [19:0] hz_address0;
output   hz_ce0;
input  [63:0] hz_q0;
output  [19:0] hz_address1;
output   hz_ce1;
output   hz_we1;
output  [63:0] hz_d1;
input  [63:0] hz_q1;
output  [5:0] p_fict_s_address0;
output   p_fict_s_ce0;
input  [63:0] p_fict_s_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[19:0] ex_address0;
reg ex_ce0;
reg ex_we0;
reg ex_ce1;
reg[19:0] ey_address0;
reg ey_ce0;
reg ey_we0;
reg[63:0] ey_d0;
reg[19:0] hz_address0;
reg hz_ce0;
reg[19:0] hz_address1;
reg hz_ce1;
reg hz_we1;
reg p_fict_s_ce0;

(* fsm_encoding = "none" *) reg   [72:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_334;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state66;
reg   [63:0] reg_339;
wire   [63:0] grp_fu_325_p2;
reg   [63:0] reg_344;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state71;
reg   [63:0] reg_353;
wire    ap_CS_fsm_state16;
reg   [63:0] reg_359;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state46;
wire   [5:0] t_1_fu_370_p2;
reg   [5:0] t_1_reg_1026;
wire    ap_CS_fsm_state2;
reg   [5:0] p_fict_addr_reg_1031;
wire   [0:0] exitcond7_fu_364_p2;
wire   [9:0] j_4_fu_387_p2;
reg   [9:0] j_4_reg_1039;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [19:0] tmp_1_fu_1005_p2;
reg   [19:0] tmp_1_reg_1057;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond5_fu_398_p2;
wire   [19:0] tmp_3_fu_1011_p2;
reg   [19:0] tmp_3_reg_1062;
wire   [9:0] j_5_fu_424_p2;
reg   [9:0] j_5_reg_1070;
wire    ap_CS_fsm_state7;
reg   [19:0] ey_addr_1_reg_1075;
wire   [0:0] exitcond4_fu_418_p2;
wire   [9:0] i_3_fu_455_p2;
reg   [0:0] p_Repl2_2_reg_1095;
wire   [10:0] p_Repl2_1_fu_523_p3;
reg   [10:0] p_Repl2_1_reg_1100;
wire   [51:0] new_mant_V_6_fu_643_p3;
reg   [51:0] new_mant_V_6_reg_1105;
wire   [63:0] out_fu_658_p1;
wire    ap_CS_fsm_state17;
wire   [19:0] next_mul_fu_663_p2;
reg   [19:0] next_mul_reg_1115;
wire    ap_CS_fsm_state24;
wire   [9:0] i_5_fu_675_p2;
reg   [9:0] i_5_reg_1123;
reg   [19:0] ex_addr_reg_1131;
wire    ap_CS_fsm_state25;
wire   [0:0] exitcond2_fu_681_p2;
wire   [9:0] j_6_fu_724_p2;
reg   [9:0] j_6_reg_1146;
reg   [0:0] p_Repl2_5_reg_1151;
wire   [10:0] p_Repl2_4_fu_792_p3;
reg   [10:0] p_Repl2_4_reg_1156;
wire   [51:0] new_mant_V_7_fu_912_p3;
reg   [51:0] new_mant_V_7_reg_1161;
wire   [63:0] out_1_fu_927_p1;
wire    ap_CS_fsm_state35;
wire   [19:0] next_mul2_fu_932_p2;
reg   [19:0] next_mul2_reg_1171;
wire    ap_CS_fsm_state42;
wire   [9:0] i_4_fu_944_p2;
reg   [9:0] i_4_reg_1179;
wire   [19:0] tmp_10_fu_1017_p2;
reg   [19:0] tmp_10_reg_1184;
wire   [0:0] exitcond1_fu_938_p2;
wire   [9:0] j_7_fu_960_p2;
reg   [9:0] j_7_reg_1192;
wire    ap_CS_fsm_state43;
wire   [63:0] tmp_39_cast_fu_976_p1;
reg   [63:0] tmp_39_cast_reg_1197;
wire   [0:0] exitcond_fu_954_p2;
(* use_dsp48 = "no" *) wire   [19:0] tmp_30_fu_981_p2;
reg   [19:0] tmp_30_reg_1208;
reg   [63:0] ex_load_2_reg_1218;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state53;
reg   [19:0] hz_addr_4_reg_1233;
wire   [63:0] grp_fu_329_p2;
reg   [63:0] tmp_22_reg_1239;
reg   [5:0] t_reg_211;
reg   [9:0] j_reg_222;
wire    ap_CS_fsm_state5;
reg   [9:0] i_reg_234;
wire   [0:0] exitcond6_fu_381_p2;
reg   [9:0] j_1_reg_246;
wire    ap_CS_fsm_state23;
reg   [9:0] i_1_reg_257;
reg   [19:0] phi_mul_reg_268;
reg   [9:0] j_2_reg_280;
wire    ap_CS_fsm_state41;
wire   [0:0] exitcond3_fu_669_p2;
reg   [9:0] i_2_reg_291;
reg   [19:0] phi_mul1_reg_302;
reg   [9:0] j_3_reg_314;
wire    ap_CS_fsm_state73;
wire   [63:0] tmp_fu_376_p1;
wire   [63:0] tmp_s_fu_393_p1;
wire   [63:0] tmp_33_cast_fu_439_p1;
wire   [63:0] tmp_34_cast_fu_450_p1;
wire   [63:0] tmp_37_cast_fu_697_p1;
wire   [63:0] tmp_38_cast_fu_719_p1;
wire   [63:0] tmp_41_cast_fu_996_p1;
wire   [63:0] tmp_40_cast_fu_1001_p1;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
reg   [63:0] grp_fu_325_p0;
reg   [63:0] grp_fu_325_p1;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state62;
wire   [9:0] tmp_2_fu_408_p2;
wire   [19:0] tmp_5_cast_fu_430_p1;
(* use_dsp48 = "no" *) wire   [19:0] tmp_4_fu_434_p2;
(* use_dsp48 = "no" *) wire   [19:0] tmp_5_fu_445_p2;
wire   [63:0] p_Val2_s_fu_461_p1;
wire   [51:0] new_mant_V_fu_483_p1;
wire   [10:0] new_exp_V_fu_473_p4;
wire   [0:0] tmp_i_fu_491_p2;
wire   [0:0] tmp_1_i_fu_497_p2;
wire   [0:0] tmp_6_fu_517_p2;
wire   [10:0] p_new_exp_V_1_i_fu_509_p3;
wire   [10:0] new_exp_V_1_fu_503_p2;
wire   [9:0] tmp_11_fu_531_p4;
wire   [1:0] tmp_7_fu_547_p4;
wire   [0:0] icmp_fu_541_p2;
wire   [0:0] tmp_9_fu_567_p2;
wire   [1:0] p_shift_V_i_fu_563_p1;
wire   [1:0] shift_V_i_cast_fu_557_p2;
wire   [52:0] xf_V_4_i_cast_fu_487_p1;
wire   [52:0] tmp_2_i_fu_581_p3;
wire   [52:0] xf_V_fu_589_p3;
wire   [1:0] p_0274_2_i_fu_573_p3;
wire   [52:0] tmp_9_i_cast_fu_611_p1;
wire   [54:0] p_i_cast_fu_597_p1;
wire   [54:0] tmp_9_i_fu_607_p1;
wire   [52:0] r_V_fu_615_p2;
wire   [54:0] r_V_1_fu_621_p2;
wire   [0:0] tmp_8_i_fu_601_p2;
wire   [51:0] tmp_13_fu_627_p1;
wire   [51:0] tmp_14_fu_631_p1;
wire   [51:0] new_mant_V_1_fu_635_p3;
wire   [63:0] p_Result_s_fu_651_p4;
wire   [19:0] tmp_11_cast_fu_687_p1;
wire   [19:0] tmp_15_fu_691_p2;
wire   [9:0] tmp_12_fu_703_p2;
wire   [19:0] tmp_13_cast_fu_709_p1;
wire   [19:0] tmp_17_fu_713_p2;
wire   [63:0] p_Val2_1_fu_730_p1;
wire   [51:0] new_mant_V_4_fu_752_p1;
wire   [10:0] new_exp_V_2_fu_742_p4;
wire   [0:0] tmp_i6_fu_760_p2;
wire   [0:0] tmp_1_i7_fu_766_p2;
wire   [0:0] tmp_18_fu_786_p2;
wire   [10:0] p_new_exp_V_1_i9_fu_778_p3;
wire   [10:0] new_exp_V_3_fu_772_p2;
wire   [9:0] tmp_25_fu_800_p4;
wire   [1:0] tmp_24_fu_816_p4;
wire   [0:0] icmp5_fu_810_p2;
wire   [0:0] tmp_26_fu_836_p2;
wire   [1:0] p_shift_V_i1_fu_832_p1;
wire   [1:0] shift_V_i12_cast_fu_826_p2;
wire   [52:0] xf_V_4_i5_cast_fu_756_p1;
wire   [52:0] tmp_2_i1_fu_850_p3;
wire   [52:0] xf_V_3_fu_858_p3;
wire   [1:0] p_0274_2_i1_fu_842_p3;
wire   [52:0] tmp_9_i19_cast_fu_880_p1;
wire   [54:0] p_i17_cast_fu_866_p1;
wire   [54:0] tmp_9_i1_fu_876_p1;
wire   [52:0] r_V_2_fu_884_p2;
wire   [54:0] r_V_3_fu_890_p2;
wire   [0:0] tmp_8_i1_fu_870_p2;
wire   [51:0] tmp_27_fu_896_p1;
wire   [51:0] tmp_28_fu_900_p1;
wire   [51:0] new_mant_V_3_fu_904_p3;
wire   [63:0] p_Result_1_fu_920_p4;
wire   [19:0] tmp_17_cast_fu_966_p1;
wire   [19:0] tmp_29_fu_970_p2;
wire   [19:0] tmp_18_cast_fu_986_p1;
wire   [19:0] tmp_31_fu_990_p2;
wire   [9:0] tmp_1_fu_1005_p0;
wire   [10:0] tmp_1_fu_1005_p1;
wire   [9:0] tmp_3_fu_1011_p0;
wire   [10:0] tmp_3_fu_1011_p1;
wire   [9:0] tmp_10_fu_1017_p0;
wire   [10:0] tmp_10_fu_1017_p1;
reg   [1:0] grp_fu_325_opcode;
reg   [72:0] ap_NS_fsm;
wire   [19:0] tmp_10_fu_1017_p00;
wire   [19:0] tmp_1_fu_1005_p00;
wire   [19:0] tmp_3_fu_1011_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 73'd1;
end

kernel_fdtd_2d_dabkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_fdtd_2d_dabkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_325_p0),
    .din1(grp_fu_325_p1),
    .opcode(grp_fu_325_opcode),
    .ce(1'b1),
    .dout(grp_fu_325_p2)
);

kernel_fdtd_2d_dmcud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_fdtd_2d_dmcud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(64'd4604480259023595110),
    .ce(1'b1),
    .dout(grp_fu_329_p2)
);

kernel_fdtd_2d_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_fdtd_2d_mudEe_U3(
    .din0(tmp_1_fu_1005_p0),
    .din1(tmp_1_fu_1005_p1),
    .dout(tmp_1_fu_1005_p2)
);

kernel_fdtd_2d_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_fdtd_2d_mudEe_U4(
    .din0(tmp_3_fu_1011_p0),
    .din1(tmp_3_fu_1011_p1),
    .dout(tmp_3_fu_1011_p2)
);

kernel_fdtd_2d_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_fdtd_2d_mudEe_U5(
    .din0(tmp_10_fu_1017_p0),
    .din1(tmp_10_fu_1017_p1),
    .dout(tmp_10_fu_1017_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_398_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_1_reg_257 <= 10'd0;
    end else if (((exitcond2_fu_681_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        i_1_reg_257 <= i_5_reg_1123;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        i_2_reg_291 <= 10'd0;
    end else if (((exitcond_fu_954_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        i_2_reg_291 <= i_4_reg_1179;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_381_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_234 <= 10'd1;
    end else if (((exitcond4_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i_reg_234 <= i_3_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_398_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        j_1_reg_246 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        j_1_reg_246 <= j_5_reg_1070;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_669_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        j_2_reg_280 <= 10'd1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        j_2_reg_280 <= j_6_reg_1146;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        j_3_reg_314 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        j_3_reg_314 <= j_7_reg_1192;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_222 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_reg_222 <= j_4_reg_1039;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        phi_mul1_reg_302 <= 20'd0;
    end else if (((exitcond_fu_954_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        phi_mul1_reg_302 <= next_mul2_reg_1171;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_398_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul_reg_268 <= 20'd0;
    end else if (((exitcond2_fu_681_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        phi_mul_reg_268 <= next_mul_reg_1115;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        t_reg_211 <= t_1_reg_1026;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_reg_211 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_681_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        ex_addr_reg_1131 <= tmp_37_cast_fu_697_p1;
        j_6_reg_1146 <= j_6_fu_724_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ex_load_2_reg_1218 <= ex_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_418_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        ey_addr_1_reg_1075 <= tmp_33_cast_fu_439_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        hz_addr_4_reg_1233 <= tmp_39_cast_reg_1197;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        i_4_reg_1179 <= i_4_fu_944_p2;
        next_mul2_reg_1171 <= next_mul2_fu_932_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_5_reg_1123 <= i_5_fu_675_p2;
        next_mul_reg_1115 <= next_mul_fu_663_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_4_reg_1039 <= j_4_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j_5_reg_1070 <= j_5_fu_424_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        j_7_reg_1192 <= j_7_fu_960_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        new_mant_V_6_reg_1105 <= new_mant_V_6_fu_643_p3;
        p_Repl2_1_reg_1100 <= p_Repl2_1_fu_523_p3;
        p_Repl2_2_reg_1095 <= p_Val2_s_fu_461_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        new_mant_V_7_reg_1161 <= new_mant_V_7_fu_912_p3;
        p_Repl2_4_reg_1156 <= p_Repl2_4_fu_792_p3;
        p_Repl2_5_reg_1151 <= p_Val2_1_fu_730_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_fict_addr_reg_1031 <= tmp_fu_376_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_334 <= hz_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_339 <= hz_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_344 <= grp_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state51))) begin
        reg_353 <= ey_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        reg_359 <= ex_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        t_1_reg_1026 <= t_1_fu_370_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        tmp_10_reg_1184 <= tmp_10_fu_1017_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_398_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_1_reg_1057 <= tmp_1_fu_1005_p2;
        tmp_3_reg_1062 <= tmp_3_fu_1011_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        tmp_22_reg_1239 <= grp_fu_329_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_954_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        tmp_30_reg_1208 <= tmp_30_fu_981_p2;
        tmp_39_cast_reg_1197[19 : 0] <= tmp_39_cast_fu_976_p1[19 : 0];
    end
end

always @ (*) begin
    if (((exitcond7_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond7_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        ex_address0 = tmp_41_cast_fu_996_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state31))) begin
        ex_address0 = ex_addr_reg_1131;
    end else begin
        ex_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        ex_ce0 = 1'b1;
    end else begin
        ex_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state46))) begin
        ex_ce1 = 1'b1;
    end else begin
        ex_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ex_we0 = 1'b1;
    end else begin
        ex_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ey_address0 = tmp_39_cast_reg_1197;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        ey_address0 = tmp_40_cast_fu_1001_p1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13))) begin
        ey_address0 = ey_addr_1_reg_1075;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ey_address0 = tmp_s_fu_393_p1;
    end else begin
        ey_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state15))) begin
        ey_ce0 = 1'b1;
    end else begin
        ey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ey_d0 = reg_344;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ey_d0 = p_fict_s_q0;
    end else begin
        ey_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state4))) begin
        ey_we0 = 1'b1;
    end else begin
        ey_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_325_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_325_opcode = 2'd0;
    end else begin
        grp_fu_325_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state52))) begin
        grp_fu_325_p0 = reg_344;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_325_p0 = reg_359;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_325_p0 = reg_353;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_325_p0 = reg_334;
    end else begin
        grp_fu_325_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_325_p1 = tmp_22_reg_1239;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state52))) begin
        grp_fu_325_p1 = reg_353;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_325_p1 = ex_load_2_reg_1218;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_325_p1 = out_1_fu_927_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_325_p1 = out_fu_658_p1;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_325_p1 = reg_339;
    end else begin
        grp_fu_325_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        hz_address0 = hz_addr_4_reg_1233;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        hz_address0 = tmp_37_cast_fu_697_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        hz_address0 = tmp_33_cast_fu_439_p1;
    end else begin
        hz_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        hz_address1 = hz_addr_4_reg_1233;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        hz_address1 = tmp_38_cast_fu_719_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        hz_address1 = tmp_34_cast_fu_450_p1;
    end else begin
        hz_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state10))) begin
        hz_ce0 = 1'b1;
    end else begin
        hz_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state10))) begin
        hz_ce1 = 1'b1;
    end else begin
        hz_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        hz_we1 = 1'b1;
    end else begin
        hz_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_fict_s_ce0 = 1'b1;
    end else begin
        p_fict_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond7_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond6_fu_381_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if (((exitcond5_fu_398_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((exitcond4_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state24 : begin
            if (((exitcond3_fu_669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((exitcond2_fu_681_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state42 : begin
            if (((exitcond1_fu_938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((exitcond_fu_954_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ex_address1 = tmp_39_cast_fu_976_p1;

assign ex_d0 = reg_344;

assign exitcond1_fu_938_p2 = ((i_2_reg_291 == 10'd999) ? 1'b1 : 1'b0);

assign exitcond2_fu_681_p2 = ((j_2_reg_280 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond3_fu_669_p2 = ((i_1_reg_257 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond4_fu_418_p2 = ((j_1_reg_246 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond5_fu_398_p2 = ((i_reg_234 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond6_fu_381_p2 = ((j_reg_222 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond7_fu_364_p2 = ((t_reg_211 == 6'd50) ? 1'b1 : 1'b0);

assign exitcond_fu_954_p2 = ((j_3_reg_314 == 10'd999) ? 1'b1 : 1'b0);

assign hz_d1 = reg_344;

assign i_3_fu_455_p2 = (i_reg_234 + 10'd1);

assign i_4_fu_944_p2 = (i_2_reg_291 + 10'd1);

assign i_5_fu_675_p2 = (i_1_reg_257 + 10'd1);

assign icmp5_fu_810_p2 = ((tmp_25_fu_800_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_541_p2 = ((tmp_11_fu_531_p4 != 10'd0) ? 1'b1 : 1'b0);

assign j_4_fu_387_p2 = (j_reg_222 + 10'd1);

assign j_5_fu_424_p2 = (j_1_reg_246 + 10'd1);

assign j_6_fu_724_p2 = (10'd1 + j_2_reg_280);

assign j_7_fu_960_p2 = (j_3_reg_314 + 10'd1);

assign new_exp_V_1_fu_503_p2 = ($signed(11'd2047) + $signed(new_exp_V_fu_473_p4));

assign new_exp_V_2_fu_742_p4 = {{p_Val2_1_fu_730_p1[62:52]}};

assign new_exp_V_3_fu_772_p2 = ($signed(11'd2047) + $signed(new_exp_V_2_fu_742_p4));

assign new_exp_V_fu_473_p4 = {{p_Val2_s_fu_461_p1[62:52]}};

assign new_mant_V_1_fu_635_p3 = ((tmp_8_i_fu_601_p2[0:0] === 1'b1) ? tmp_13_fu_627_p1 : tmp_14_fu_631_p1);

assign new_mant_V_3_fu_904_p3 = ((tmp_8_i1_fu_870_p2[0:0] === 1'b1) ? tmp_27_fu_896_p1 : tmp_28_fu_900_p1);

assign new_mant_V_4_fu_752_p1 = p_Val2_1_fu_730_p1[51:0];

assign new_mant_V_6_fu_643_p3 = ((tmp_i_fu_491_p2[0:0] === 1'b1) ? new_mant_V_fu_483_p1 : new_mant_V_1_fu_635_p3);

assign new_mant_V_7_fu_912_p3 = ((tmp_i6_fu_760_p2[0:0] === 1'b1) ? new_mant_V_4_fu_752_p1 : new_mant_V_3_fu_904_p3);

assign new_mant_V_fu_483_p1 = p_Val2_s_fu_461_p1[51:0];

assign next_mul2_fu_932_p2 = (phi_mul1_reg_302 + 20'd1000);

assign next_mul_fu_663_p2 = (phi_mul_reg_268 + 20'd1000);

assign out_1_fu_927_p1 = p_Result_1_fu_920_p4;

assign out_fu_658_p1 = p_Result_s_fu_651_p4;

assign p_0274_2_i1_fu_842_p3 = ((tmp_26_fu_836_p2[0:0] === 1'b1) ? p_shift_V_i1_fu_832_p1 : shift_V_i12_cast_fu_826_p2);

assign p_0274_2_i_fu_573_p3 = ((tmp_9_fu_567_p2[0:0] === 1'b1) ? p_shift_V_i_fu_563_p1 : shift_V_i_cast_fu_557_p2);

assign p_Repl2_1_fu_523_p3 = ((tmp_6_fu_517_p2[0:0] === 1'b1) ? p_new_exp_V_1_i_fu_509_p3 : new_exp_V_1_fu_503_p2);

assign p_Repl2_4_fu_792_p3 = ((tmp_18_fu_786_p2[0:0] === 1'b1) ? p_new_exp_V_1_i9_fu_778_p3 : new_exp_V_3_fu_772_p2);

assign p_Result_1_fu_920_p4 = {{{p_Repl2_5_reg_1151}, {p_Repl2_4_reg_1156}}, {new_mant_V_7_reg_1161}};

assign p_Result_s_fu_651_p4 = {{{p_Repl2_2_reg_1095}, {p_Repl2_1_reg_1100}}, {new_mant_V_6_reg_1105}};

assign p_Val2_1_fu_730_p1 = reg_344;

assign p_Val2_s_fu_461_p1 = reg_344;

assign p_fict_s_address0 = p_fict_addr_reg_1031;

assign p_i17_cast_fu_866_p1 = xf_V_3_fu_858_p3;

assign p_i_cast_fu_597_p1 = xf_V_fu_589_p3;

assign p_new_exp_V_1_i9_fu_778_p3 = ((tmp_i6_fu_760_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign p_new_exp_V_1_i_fu_509_p3 = ((tmp_i_fu_491_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign p_shift_V_i1_fu_832_p1 = tmp_1_i7_fu_766_p2;

assign p_shift_V_i_fu_563_p1 = tmp_1_i_fu_497_p2;

assign r_V_1_fu_621_p2 = p_i_cast_fu_597_p1 << tmp_9_i_fu_607_p1;

assign r_V_2_fu_884_p2 = xf_V_3_fu_858_p3 >> tmp_9_i19_cast_fu_880_p1;

assign r_V_3_fu_890_p2 = p_i17_cast_fu_866_p1 << tmp_9_i1_fu_876_p1;

assign r_V_fu_615_p2 = xf_V_fu_589_p3 >> tmp_9_i_cast_fu_611_p1;

assign shift_V_i12_cast_fu_826_p2 = ($signed(2'd2) - $signed(tmp_24_fu_816_p4));

assign shift_V_i_cast_fu_557_p2 = ($signed(2'd2) - $signed(tmp_7_fu_547_p4));

assign t_1_fu_370_p2 = (t_reg_211 + 6'd1);

assign tmp_10_fu_1017_p0 = tmp_10_fu_1017_p00;

assign tmp_10_fu_1017_p00 = i_4_fu_944_p2;

assign tmp_10_fu_1017_p1 = 20'd1000;

assign tmp_11_cast_fu_687_p1 = j_2_reg_280;

assign tmp_11_fu_531_p4 = {{p_Val2_s_fu_461_p1[62:53]}};

assign tmp_12_fu_703_p2 = ($signed(10'd1023) + $signed(j_2_reg_280));

assign tmp_13_cast_fu_709_p1 = tmp_12_fu_703_p2;

assign tmp_13_fu_627_p1 = r_V_fu_615_p2[51:0];

assign tmp_14_fu_631_p1 = r_V_1_fu_621_p2[51:0];

assign tmp_15_fu_691_p2 = (tmp_11_cast_fu_687_p1 + phi_mul_reg_268);

assign tmp_17_cast_fu_966_p1 = j_3_reg_314;

assign tmp_17_fu_713_p2 = (tmp_13_cast_fu_709_p1 + phi_mul_reg_268);

assign tmp_18_cast_fu_986_p1 = j_7_fu_960_p2;

assign tmp_18_fu_786_p2 = (tmp_i6_fu_760_p2 | tmp_1_i7_fu_766_p2);

assign tmp_1_fu_1005_p0 = tmp_1_fu_1005_p00;

assign tmp_1_fu_1005_p00 = i_reg_234;

assign tmp_1_fu_1005_p1 = 20'd1000;

assign tmp_1_i7_fu_766_p2 = ((new_exp_V_2_fu_742_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_1_i_fu_497_p2 = ((new_exp_V_fu_473_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_24_fu_816_p4 = {{p_Val2_1_fu_730_p1[53:52]}};

assign tmp_25_fu_800_p4 = {{p_Val2_1_fu_730_p1[62:53]}};

assign tmp_26_fu_836_p2 = (tmp_1_i7_fu_766_p2 | icmp5_fu_810_p2);

assign tmp_27_fu_896_p1 = r_V_2_fu_884_p2[51:0];

assign tmp_28_fu_900_p1 = r_V_3_fu_890_p2[51:0];

assign tmp_29_fu_970_p2 = (phi_mul1_reg_302 + tmp_17_cast_fu_966_p1);

assign tmp_2_fu_408_p2 = ($signed(i_reg_234) + $signed(10'd1023));

assign tmp_2_i1_fu_850_p3 = {{1'd1}, {new_mant_V_4_fu_752_p1}};

assign tmp_2_i_fu_581_p3 = {{1'd1}, {new_mant_V_fu_483_p1}};

assign tmp_30_fu_981_p2 = (tmp_10_reg_1184 + tmp_17_cast_fu_966_p1);

assign tmp_31_fu_990_p2 = (phi_mul1_reg_302 + tmp_18_cast_fu_986_p1);

assign tmp_33_cast_fu_439_p1 = tmp_4_fu_434_p2;

assign tmp_34_cast_fu_450_p1 = tmp_5_fu_445_p2;

assign tmp_37_cast_fu_697_p1 = tmp_15_fu_691_p2;

assign tmp_38_cast_fu_719_p1 = tmp_17_fu_713_p2;

assign tmp_39_cast_fu_976_p1 = tmp_29_fu_970_p2;

assign tmp_3_fu_1011_p0 = tmp_3_fu_1011_p00;

assign tmp_3_fu_1011_p00 = tmp_2_fu_408_p2;

assign tmp_3_fu_1011_p1 = 20'd1000;

assign tmp_40_cast_fu_1001_p1 = tmp_30_reg_1208;

assign tmp_41_cast_fu_996_p1 = tmp_31_fu_990_p2;

assign tmp_4_fu_434_p2 = (tmp_5_cast_fu_430_p1 + tmp_1_reg_1057);

assign tmp_5_cast_fu_430_p1 = j_1_reg_246;

assign tmp_5_fu_445_p2 = (tmp_5_cast_fu_430_p1 + tmp_3_reg_1062);

assign tmp_6_fu_517_p2 = (tmp_i_fu_491_p2 | tmp_1_i_fu_497_p2);

assign tmp_7_fu_547_p4 = {{p_Val2_s_fu_461_p1[53:52]}};

assign tmp_8_i1_fu_870_p2 = ((new_exp_V_2_fu_742_p4 < 11'd3) ? 1'b1 : 1'b0);

assign tmp_8_i_fu_601_p2 = ((new_exp_V_fu_473_p4 < 11'd3) ? 1'b1 : 1'b0);

assign tmp_9_fu_567_p2 = (tmp_1_i_fu_497_p2 | icmp_fu_541_p2);

assign tmp_9_i19_cast_fu_880_p1 = p_0274_2_i1_fu_842_p3;

assign tmp_9_i1_fu_876_p1 = p_0274_2_i1_fu_842_p3;

assign tmp_9_i_cast_fu_611_p1 = p_0274_2_i_fu_573_p3;

assign tmp_9_i_fu_607_p1 = p_0274_2_i_fu_573_p3;

assign tmp_fu_376_p1 = t_reg_211;

assign tmp_i6_fu_760_p2 = ((new_exp_V_2_fu_742_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_i_fu_491_p2 = ((new_exp_V_fu_473_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_s_fu_393_p1 = j_reg_222;

assign xf_V_3_fu_858_p3 = ((tmp_1_i7_fu_766_p2[0:0] === 1'b1) ? xf_V_4_i5_cast_fu_756_p1 : tmp_2_i1_fu_850_p3);

assign xf_V_4_i5_cast_fu_756_p1 = new_mant_V_4_fu_752_p1;

assign xf_V_4_i_cast_fu_487_p1 = new_mant_V_fu_483_p1;

assign xf_V_fu_589_p3 = ((tmp_1_i_fu_497_p2[0:0] === 1'b1) ? xf_V_4_i_cast_fu_487_p1 : tmp_2_i_fu_581_p3);

always @ (posedge ap_clk) begin
    tmp_39_cast_reg_1197[63:20] <= 44'b00000000000000000000000000000000000000000000;
end

endmodule //kernel_fdtd_2d
