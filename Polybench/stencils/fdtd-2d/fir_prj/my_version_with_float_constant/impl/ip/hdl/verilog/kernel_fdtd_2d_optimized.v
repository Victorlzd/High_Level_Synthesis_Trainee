// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_fdtd_2d_optimized,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.024425,HLS_SYN_LAT=11731906951,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=3,HLS_SYN_FF=8247,HLS_SYN_LUT=7840,HLS_VERSION=2018_2}" *)

module kernel_fdtd_2d_optimized (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmax,
        nx,
        ny,
        ex_address0,
        ex_ce0,
        ex_we0,
        ex_d0,
        ex_q0,
        ex_address1,
        ex_ce1,
        ex_q1,
        ey_address0,
        ey_ce0,
        ey_we0,
        ey_d0,
        ey_q0,
        hz_address0,
        hz_ce0,
        hz_q0,
        hz_address1,
        hz_ce1,
        hz_we1,
        hz_d1,
        hz_q1,
        p_fict_s_address0,
        p_fict_s_ce0,
        p_fict_s_q0
);

parameter    ap_ST_fsm_state1 = 185'd1;
parameter    ap_ST_fsm_state2 = 185'd2;
parameter    ap_ST_fsm_state3 = 185'd4;
parameter    ap_ST_fsm_state4 = 185'd8;
parameter    ap_ST_fsm_state5 = 185'd16;
parameter    ap_ST_fsm_state6 = 185'd32;
parameter    ap_ST_fsm_state7 = 185'd64;
parameter    ap_ST_fsm_state8 = 185'd128;
parameter    ap_ST_fsm_state9 = 185'd256;
parameter    ap_ST_fsm_state10 = 185'd512;
parameter    ap_ST_fsm_state11 = 185'd1024;
parameter    ap_ST_fsm_state12 = 185'd2048;
parameter    ap_ST_fsm_state13 = 185'd4096;
parameter    ap_ST_fsm_state14 = 185'd8192;
parameter    ap_ST_fsm_state15 = 185'd16384;
parameter    ap_ST_fsm_state16 = 185'd32768;
parameter    ap_ST_fsm_state17 = 185'd65536;
parameter    ap_ST_fsm_state18 = 185'd131072;
parameter    ap_ST_fsm_state19 = 185'd262144;
parameter    ap_ST_fsm_state20 = 185'd524288;
parameter    ap_ST_fsm_state21 = 185'd1048576;
parameter    ap_ST_fsm_state22 = 185'd2097152;
parameter    ap_ST_fsm_state23 = 185'd4194304;
parameter    ap_ST_fsm_state24 = 185'd8388608;
parameter    ap_ST_fsm_state25 = 185'd16777216;
parameter    ap_ST_fsm_state26 = 185'd33554432;
parameter    ap_ST_fsm_state27 = 185'd67108864;
parameter    ap_ST_fsm_state28 = 185'd134217728;
parameter    ap_ST_fsm_state29 = 185'd268435456;
parameter    ap_ST_fsm_state30 = 185'd536870912;
parameter    ap_ST_fsm_state31 = 185'd1073741824;
parameter    ap_ST_fsm_state32 = 185'd2147483648;
parameter    ap_ST_fsm_state33 = 185'd4294967296;
parameter    ap_ST_fsm_state34 = 185'd8589934592;
parameter    ap_ST_fsm_state35 = 185'd17179869184;
parameter    ap_ST_fsm_state36 = 185'd34359738368;
parameter    ap_ST_fsm_state37 = 185'd68719476736;
parameter    ap_ST_fsm_state38 = 185'd137438953472;
parameter    ap_ST_fsm_state39 = 185'd274877906944;
parameter    ap_ST_fsm_state40 = 185'd549755813888;
parameter    ap_ST_fsm_state41 = 185'd1099511627776;
parameter    ap_ST_fsm_state42 = 185'd2199023255552;
parameter    ap_ST_fsm_state43 = 185'd4398046511104;
parameter    ap_ST_fsm_state44 = 185'd8796093022208;
parameter    ap_ST_fsm_state45 = 185'd17592186044416;
parameter    ap_ST_fsm_state46 = 185'd35184372088832;
parameter    ap_ST_fsm_state47 = 185'd70368744177664;
parameter    ap_ST_fsm_state48 = 185'd140737488355328;
parameter    ap_ST_fsm_state49 = 185'd281474976710656;
parameter    ap_ST_fsm_state50 = 185'd562949953421312;
parameter    ap_ST_fsm_state51 = 185'd1125899906842624;
parameter    ap_ST_fsm_state52 = 185'd2251799813685248;
parameter    ap_ST_fsm_state53 = 185'd4503599627370496;
parameter    ap_ST_fsm_state54 = 185'd9007199254740992;
parameter    ap_ST_fsm_state55 = 185'd18014398509481984;
parameter    ap_ST_fsm_state56 = 185'd36028797018963968;
parameter    ap_ST_fsm_state57 = 185'd72057594037927936;
parameter    ap_ST_fsm_state58 = 185'd144115188075855872;
parameter    ap_ST_fsm_state59 = 185'd288230376151711744;
parameter    ap_ST_fsm_state60 = 185'd576460752303423488;
parameter    ap_ST_fsm_state61 = 185'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 185'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 185'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 185'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 185'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 185'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 185'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 185'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 185'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 185'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 185'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 185'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 185'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 185'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 185'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 185'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 185'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 185'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 185'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 185'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 185'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 185'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 185'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 185'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 185'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 185'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 185'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 185'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 185'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 185'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 185'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 185'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 185'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 185'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 185'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 185'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 185'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 185'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 185'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 185'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 185'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 185'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 185'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 185'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 185'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 185'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 185'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 185'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 185'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 185'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 185'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 185'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 185'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 185'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 185'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 185'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 185'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 185'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 185'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 185'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 185'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 185'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 185'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 185'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 185'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 185'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 185'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 185'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 185'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 185'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 185'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 185'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 185'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 185'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 185'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 185'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 185'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 185'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 185'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 185'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 185'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 185'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 185'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 185'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 185'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 185'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 185'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 185'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 185'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 185'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 185'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 185'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 185'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 185'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 185'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 185'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 185'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 185'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 185'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 185'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 185'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 185'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 185'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 185'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 185'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 185'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 185'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 185'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 185'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 185'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 185'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 185'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 185'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 185'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 185'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 185'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 185'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 185'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 185'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 185'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 185'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 185'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 185'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 185'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 185'd24519928653854221733733552434404946937899825954937634816;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] tmax;
input  [31:0] nx;
input  [31:0] ny;
output  [19:0] ex_address0;
output   ex_ce0;
output   ex_we0;
output  [63:0] ex_d0;
input  [63:0] ex_q0;
output  [19:0] ex_address1;
output   ex_ce1;
input  [63:0] ex_q1;
output  [19:0] ey_address0;
output   ey_ce0;
output   ey_we0;
output  [63:0] ey_d0;
input  [63:0] ey_q0;
output  [19:0] hz_address0;
output   hz_ce0;
input  [63:0] hz_q0;
output  [19:0] hz_address1;
output   hz_ce1;
output   hz_we1;
output  [63:0] hz_d1;
input  [63:0] hz_q1;
output  [5:0] p_fict_s_address0;
output   p_fict_s_ce0;
input  [63:0] p_fict_s_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[19:0] ex_address0;
reg ex_ce0;
reg ex_we0;
reg ex_ce1;
reg[19:0] ey_address0;
reg ey_ce0;
reg ey_we0;
reg[63:0] ey_d0;
reg[19:0] hz_address0;
reg hz_ce0;
reg[19:0] hz_address1;
reg hz_ce1;
reg hz_we1;
reg p_fict_s_ce0;

(* fsm_encoding = "none" *) reg   [184:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_409;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state169;
reg   [63:0] reg_414;
wire   [63:0] grp_fu_405_p2;
reg   [63:0] reg_419;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state127;
wire    ap_CS_fsm_state141;
wire    ap_CS_fsm_state155;
wire    ap_CS_fsm_state183;
reg   [63:0] reg_428;
wire    ap_CS_fsm_state40;
reg   [63:0] reg_434;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state113;
wire   [5:0] t_1_fu_445_p2;
reg   [5:0] t_1_reg_1342;
wire    ap_CS_fsm_state2;
reg   [5:0] p_fict_addr_reg_1347;
wire   [0:0] exitcond7_fu_439_p2;
wire   [9:0] j_4_fu_462_p2;
reg   [9:0] j_4_reg_1355;
wire    ap_CS_fsm_state3;
reg   [63:0] p_fict_load_reg_1360;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [9:0] tmp_9_fu_479_p2;
reg   [9:0] tmp_9_reg_1373;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond5_fu_473_p2;
wire    ap_CS_fsm_state9;
wire   [19:0] grp_fu_1321_p2;
reg   [19:0] tmp_1_reg_1388;
wire    ap_CS_fsm_state12;
wire   [19:0] grp_fu_1327_p2;
reg   [19:0] tmp_3_reg_1393;
wire   [9:0] j_5_fu_498_p2;
reg   [9:0] j_5_reg_1401;
wire    ap_CS_fsm_state13;
(* use_dsp48 = "no" *) wire   [19:0] tmp_2_fu_508_p2;
reg   [19:0] tmp_2_reg_1406;
wire   [0:0] exitcond4_fu_492_p2;
(* use_dsp48 = "no" *) wire   [19:0] tmp_4_fu_513_p2;
reg   [19:0] tmp_4_reg_1411;
wire   [9:0] i_3_fu_518_p2;
reg   [19:0] ey_addr_1_reg_1421;
wire    ap_CS_fsm_state14;
reg   [0:0] p_Repl2_4_reg_1436;
wire    ap_CS_fsm_state32;
wire   [10:0] new_exp_V_2_fu_545_p4;
reg   [10:0] new_exp_V_2_reg_1441;
wire   [51:0] new_mant_V_3_fu_555_p1;
reg   [51:0] new_mant_V_3_reg_1448;
wire   [0:0] tmp_i_fu_559_p2;
reg   [0:0] tmp_i_reg_1455;
wire   [1:0] p_0272_2_i_fu_607_p3;
reg   [1:0] p_0272_2_i_reg_1460;
wire    ap_CS_fsm_state33;
wire   [51:0] grp_fu_624_p2;
reg   [51:0] r_V_28_reg_1481;
wire    ap_CS_fsm_state39;
wire   [53:0] grp_fu_629_p2;
reg   [53:0] r_V_29_reg_1486;
wire   [10:0] p_Repl2_3_fu_673_p3;
reg   [10:0] p_Repl2_3_reg_1491;
wire   [51:0] p_Repl2_s_fu_681_p3;
reg   [51:0] p_Repl2_s_reg_1496;
wire   [63:0] out_fu_695_p1;
wire    ap_CS_fsm_state41;
wire   [19:0] next_mul_fu_700_p2;
reg   [19:0] next_mul_reg_1506;
wire    ap_CS_fsm_state57;
wire   [9:0] i_5_fu_712_p2;
reg   [9:0] i_5_reg_1514;
wire   [9:0] tmp_11_fu_724_p2;
reg   [9:0] tmp_11_reg_1522;
wire    ap_CS_fsm_state58;
wire   [0:0] exitcond2_fu_718_p2;
wire   [19:0] tmp_10_fu_734_p2;
reg   [19:0] tmp_10_reg_1527;
wire    ap_CS_fsm_state59;
wire   [19:0] tmp_12_fu_743_p2;
reg   [19:0] tmp_12_reg_1532;
wire   [9:0] j_6_fu_749_p2;
reg   [9:0] j_6_reg_1537;
reg   [19:0] ex_addr_reg_1542;
wire    ap_CS_fsm_state60;
reg   [0:0] p_Repl2_7_reg_1557;
wire    ap_CS_fsm_state78;
wire   [10:0] new_exp_V_4_fu_776_p4;
reg   [10:0] new_exp_V_4_reg_1562;
wire   [51:0] new_mant_V_5_fu_786_p1;
reg   [51:0] new_mant_V_5_reg_1569;
wire   [0:0] tmp_i6_fu_790_p2;
reg   [0:0] tmp_i6_reg_1576;
wire   [1:0] p_0272_2_i1_fu_838_p3;
reg   [1:0] p_0272_2_i1_reg_1581;
wire    ap_CS_fsm_state79;
wire   [51:0] grp_fu_855_p2;
reg   [51:0] r_V_30_reg_1602;
wire    ap_CS_fsm_state85;
wire   [53:0] grp_fu_860_p2;
reg   [53:0] r_V_31_reg_1607;
wire   [10:0] p_Repl2_6_fu_904_p3;
reg   [10:0] p_Repl2_6_reg_1612;
wire   [51:0] p_Repl2_5_fu_912_p3;
reg   [51:0] p_Repl2_5_reg_1617;
wire   [63:0] out_1_fu_926_p1;
wire    ap_CS_fsm_state87;
wire   [19:0] next_mul2_fu_931_p2;
reg   [19:0] next_mul2_reg_1627;
wire    ap_CS_fsm_state103;
wire   [9:0] i_4_fu_943_p2;
reg   [9:0] i_4_reg_1635;
wire    ap_CS_fsm_state104;
wire   [19:0] grp_fu_1333_p2;
reg   [19:0] tmp_8_reg_1646;
wire    ap_CS_fsm_state107;
wire   [9:0] j_7_fu_958_p2;
reg   [9:0] j_7_reg_1654;
wire    ap_CS_fsm_state108;
wire   [19:0] tmp_18_fu_968_p2;
reg   [19:0] tmp_18_reg_1660;
wire    ap_CS_fsm_state109;
(* use_dsp48 = "no" *) wire   [19:0] tmp_21_fu_974_p2;
reg   [19:0] tmp_21_reg_1665;
wire   [19:0] tmp_22_fu_982_p2;
reg   [19:0] tmp_22_reg_1670;
wire   [63:0] tmp_27_cast_fu_988_p1;
reg   [63:0] tmp_27_cast_reg_1675;
wire    ap_CS_fsm_state110;
reg   [63:0] ex_load_2_reg_1691;
wire    ap_CS_fsm_state124;
wire    ap_CS_fsm_state138;
reg   [19:0] hz_addr_4_reg_1706;
wire   [63:0] grp_operator_double_div1_fu_388_ap_return;
reg   [63:0] in_assign_2_reg_1712;
wire    ap_CS_fsm_state157;
wire    grp_operator_double_div1_fu_388_ap_idle;
wire    grp_operator_double_div1_fu_388_ap_ready;
wire    grp_operator_double_div1_fu_388_ap_done;
wire   [63:0] p_Val2_6_fu_1000_p1;
reg   [63:0] p_Val2_6_reg_1717;
wire    ap_CS_fsm_state158;
reg   [0:0] p_Repl2_10_reg_1722;
wire   [51:0] new_mant_V_9_fu_1021_p1;
reg   [51:0] new_mant_V_9_reg_1727;
wire   [0:0] tmp_i1_fu_1025_p2;
reg   [0:0] tmp_i1_reg_1732;
wire   [55:0] xf_V_fu_1047_p2;
reg   [55:0] xf_V_reg_1739;
reg   [55:0] p_Result_6_fu_1053_p4;
reg   [55:0] p_Result_6_reg_1747;
wire   [0:0] tmp_6_i_fu_1063_p2;
reg   [0:0] tmp_6_i_reg_1752;
wire   [0:0] tmp_2_i_fu_1069_p2;
reg   [0:0] tmp_2_i_reg_1759;
reg   [7:0] tmp_26_reg_1765;
wire   [5:0] clz_V_fu_1100_p1;
reg   [5:0] clz_V_reg_1770;
wire    ap_CS_fsm_state159;
reg   [3:0] tmp_29_reg_1775;
wire   [0:0] icmp8_fu_1114_p2;
reg   [0:0] icmp8_reg_1780;
wire    ap_CS_fsm_state160;
wire  signed [6:0] r_V_32_fu_1128_p2;
reg  signed [6:0] r_V_32_reg_1786;
wire   [51:0] new_mant_V_8_fu_1161_p3;
reg   [51:0] new_mant_V_8_reg_1793;
wire   [8:0] sel_tmp12_i_fu_1195_p3;
reg   [8:0] sel_tmp12_i_reg_1799;
wire   [6:0] tmp_i1_22_fu_1211_p2;
reg   [6:0] tmp_i1_22_reg_1804;
wire    ap_CS_fsm_state161;
wire   [0:0] sel_tmp14_i_fu_1221_p2;
reg   [0:0] sel_tmp14_i_reg_1809;
wire   [8:0] p_Repl2_9_fu_1226_p3;
reg   [8:0] p_Repl2_9_reg_1814;
wire    ap_CS_fsm_state162;
wire   [55:0] grp_fu_1243_p2;
reg   [55:0] r_V_reg_1829;
wire    ap_CS_fsm_state168;
wire   [55:0] grp_fu_1252_p2;
reg   [55:0] r_V_27_reg_1834;
wire   [51:0] new_mant_V_fu_1299_p3;
reg   [51:0] new_mant_V_reg_1839;
wire   [63:0] out_2_fu_1316_p1;
wire    ap_CS_fsm_state170;
wire    grp_operator_double_div1_fu_388_ap_start;
reg   [5:0] t_reg_272;
wire   [0:0] exitcond1_fu_937_p2;
reg   [9:0] j_reg_283;
wire    ap_CS_fsm_state7;
reg   [9:0] i_reg_295;
wire   [0:0] exitcond6_fu_456_p2;
reg   [9:0] j_1_reg_307;
wire    ap_CS_fsm_state56;
reg   [9:0] i_1_reg_318;
reg   [19:0] phi_mul_reg_329;
reg   [9:0] j_2_reg_341;
wire    ap_CS_fsm_state102;
wire   [0:0] exitcond3_fu_706_p2;
reg   [9:0] i_2_reg_353;
wire   [0:0] exitcond_fu_952_p2;
reg   [19:0] phi_mul1_reg_364;
reg   [9:0] j_3_reg_376;
wire    ap_CS_fsm_state185;
reg    grp_operator_double_div1_fu_388_ap_start_reg;
wire    ap_CS_fsm_state156;
wire   [63:0] tmp_fu_451_p1;
wire   [63:0] tmp_s_fu_468_p1;
wire   [63:0] tmp_10_cast_fu_524_p1;
wire   [63:0] tmp_11_cast_fu_529_p1;
wire   [63:0] tmp_19_cast_fu_755_p1;
wire   [63:0] tmp_24_cast_fu_760_p1;
wire   [63:0] tmp_35_cast_fu_992_p1;
wire   [63:0] tmp_32_cast_fu_996_p1;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state126;
wire    ap_CS_fsm_state139;
wire    ap_CS_fsm_state140;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state166;
wire    ap_CS_fsm_state167;
wire    ap_CS_fsm_state184;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state112;
reg   [63:0] grp_fu_405_p0;
reg   [63:0] grp_fu_405_p1;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state128;
wire    ap_CS_fsm_state142;
wire   [19:0] tmp_6_cast_fu_504_p1;
wire   [63:0] p_Val2_s_fu_533_p1;
wire   [9:0] tmp_15_fu_565_p4;
wire   [1:0] tmp_7_fu_581_p4;
wire   [0:0] icmp_fu_575_p2;
wire   [0:0] tmp_5_fu_601_p2;
wire   [1:0] p_shift_V_i_fu_597_p1;
wire   [1:0] shift_V_i_cast_fu_591_p2;
wire   [51:0] grp_fu_624_p1;
wire   [53:0] grp_fu_629_p0;
wire   [53:0] grp_fu_629_p1;
wire   [0:0] tmp_12_i_fu_640_p2;
wire   [51:0] tmp_16_fu_645_p1;
wire   [0:0] tmp_14_i_fu_655_p2;
wire   [0:0] tmp_1_i_fu_668_p2;
wire   [10:0] p_i_fu_660_p3;
wire   [10:0] new_exp_V_fu_635_p2;
wire   [51:0] xf_V_14_fu_648_p3;
wire   [63:0] p_Result_s_fu_688_p4;
wire   [19:0] tmp_18_cast_fu_730_p1;
wire   [19:0] tmp_21_cast_fu_740_p1;
wire   [63:0] p_Val2_4_fu_764_p1;
wire   [9:0] tmp_19_fu_796_p4;
wire   [1:0] tmp_13_fu_812_p4;
wire   [0:0] icmp5_fu_806_p2;
wire   [0:0] tmp_14_fu_832_p2;
wire   [1:0] p_shift_V_i1_fu_828_p1;
wire   [1:0] shift_V_i9_cast_fu_822_p2;
wire   [51:0] grp_fu_855_p1;
wire   [53:0] grp_fu_860_p0;
wire   [53:0] grp_fu_860_p1;
wire   [0:0] tmp_12_i1_fu_871_p2;
wire   [51:0] tmp_20_fu_876_p1;
wire   [0:0] tmp_14_i1_fu_886_p2;
wire   [0:0] tmp_1_i1_fu_899_p2;
wire   [10:0] p_i1_fu_891_p3;
wire   [10:0] new_exp_V_3_fu_866_p2;
wire   [51:0] xf_V_15_fu_879_p3;
wire   [63:0] p_Result_5_fu_919_p4;
wire   [19:0] tmp_26_cast_fu_964_p1;
wire   [19:0] tmp_28_cast_fu_979_p1;
wire   [10:0] new_exp_V_5_fu_1011_p4;
wire   [54:0] p_shl_i_fu_1035_p3;
wire   [55:0] p_shl_i_cast_fu_1043_p1;
wire   [55:0] tmp_1_i2_fu_1031_p1;
wire   [63:0] p_Result_7_fu_1085_p3;
reg   [63:0] tmp_3_i_fu_1092_p3;
wire   [6:0] tmp_7_i_cast_fu_1119_p1;
wire   [0:0] sel_tmp_i_fu_1143_p2;
wire   [0:0] sel_tmp1_i_fu_1148_p2;
wire   [51:0] new_mant_V_6_fu_1134_p4;
wire   [51:0] new_mant_V_7_fu_1153_p3;
wire   [6:0] new_exp_V_6_fu_1122_p2;
wire   [6:0] p_i2_fu_1167_p3;
wire   [7:0] new_exp_V_2_i_cast_fu_1179_p2;
wire   [7:0] new_exp_V_2_i_fu_1184_p3;
wire  signed [8:0] p_i36_cast_fu_1175_p1;
wire   [8:0] new_exp_V_2_i_cast_23_fu_1191_p1;
wire   [0:0] sel_tmp13_i_fu_1216_p2;
wire   [8:0] ssdm_int_V_write_ass_fu_1202_p4;
wire  signed [31:0] tmp_i34_cast_fu_1236_p1;
wire   [55:0] grp_fu_1243_p1;
wire  signed [31:0] tmp_4_i_fu_1233_p1;
wire   [55:0] grp_fu_1252_p1;
wire   [0:0] tmp_30_fu_1257_p3;
wire   [0:0] sel_tmp8_i_fu_1264_p2;
wire   [51:0] tmp_31_fu_1269_p1;
wire   [51:0] tmp_32_fu_1272_p1;
wire   [51:0] tmp_35_fu_1275_p3;
wire   [51:0] tmp_36_fu_1283_p1;
wire   [51:0] new_mant_V_11_fu_1286_p3;
wire   [51:0] new_mant_V_12_fu_1293_p3;
wire  signed [10:0] p_Repl2_1_i_cast_fu_1305_p1;
wire   [63:0] p_Result_8_fu_1308_p4;
wire   [9:0] grp_fu_1321_p0;
wire   [10:0] grp_fu_1321_p1;
wire   [9:0] grp_fu_1327_p0;
wire   [10:0] grp_fu_1327_p1;
wire   [9:0] grp_fu_1333_p0;
wire   [10:0] grp_fu_1333_p1;
reg   [1:0] grp_fu_405_opcode;
reg   [184:0] ap_NS_fsm;
wire   [19:0] grp_fu_1321_p00;
wire   [19:0] grp_fu_1327_p00;
wire   [19:0] grp_fu_1333_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 185'd1;
#0 grp_operator_double_div1_fu_388_ap_start_reg = 1'b0;
end

operator_double_div1 grp_operator_double_div1_fu_388(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_operator_double_div1_fu_388_ap_start),
    .ap_done(grp_operator_double_div1_fu_388_ap_done),
    .ap_idle(grp_operator_double_div1_fu_388_ap_idle),
    .ap_ready(grp_operator_double_div1_fu_388_ap_ready),
    .in_r(reg_419),
    .ap_return(grp_operator_double_div1_fu_388_ap_return)
);

kernel_fdtd_2d_opdEe #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_fdtd_2d_opdEe_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_405_p0),
    .din1(grp_fu_405_p1),
    .opcode(grp_fu_405_opcode),
    .ce(1'b1),
    .dout(grp_fu_405_p2)
);

kernel_fdtd_2d_opeOg #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 52 ))
kernel_fdtd_2d_opeOg_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(new_mant_V_3_reg_1448),
    .din1(grp_fu_624_p1),
    .ce(1'b1),
    .dout(grp_fu_624_p2)
);

kernel_fdtd_2d_opfYi #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 54 ))
kernel_fdtd_2d_opfYi_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_629_p0),
    .din1(grp_fu_629_p1),
    .ce(1'b1),
    .dout(grp_fu_629_p2)
);

kernel_fdtd_2d_opeOg #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 52 ))
kernel_fdtd_2d_opeOg_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(new_mant_V_5_reg_1569),
    .din1(grp_fu_855_p1),
    .ce(1'b1),
    .dout(grp_fu_855_p2)
);

kernel_fdtd_2d_opfYi #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 54 ))
kernel_fdtd_2d_opfYi_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_860_p0),
    .din1(grp_fu_860_p1),
    .ce(1'b1),
    .dout(grp_fu_860_p2)
);

kernel_fdtd_2d_opg8j #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
kernel_fdtd_2d_opg8j_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xf_V_reg_1739),
    .din1(grp_fu_1243_p1),
    .ce(1'b1),
    .dout(grp_fu_1243_p2)
);

kernel_fdtd_2d_ophbi #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
kernel_fdtd_2d_ophbi_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xf_V_reg_1739),
    .din1(grp_fu_1252_p1),
    .ce(1'b1),
    .dout(grp_fu_1252_p2)
);

kernel_fdtd_2d_opibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_fdtd_2d_opibs_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1321_p0),
    .din1(grp_fu_1321_p1),
    .ce(1'b1),
    .dout(grp_fu_1321_p2)
);

kernel_fdtd_2d_opibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_fdtd_2d_opibs_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1327_p0),
    .din1(grp_fu_1327_p1),
    .ce(1'b1),
    .dout(grp_fu_1327_p2)
);

kernel_fdtd_2d_opibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_fdtd_2d_opibs_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1333_p0),
    .din1(grp_fu_1333_p1),
    .ce(1'b1),
    .dout(grp_fu_1333_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_operator_double_div1_fu_388_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state156)) begin
            grp_operator_double_div1_fu_388_ap_start_reg <= 1'b1;
        end else if ((grp_operator_double_div1_fu_388_ap_ready == 1'b1)) begin
            grp_operator_double_div1_fu_388_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_1_reg_318 <= 10'd0;
    end else if (((exitcond2_fu_718_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
        i_1_reg_318 <= i_5_reg_1514;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_706_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        i_2_reg_353 <= 10'd0;
    end else if (((exitcond_fu_952_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state108))) begin
        i_2_reg_353 <= i_4_reg_1635;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_456_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_295 <= 10'd1;
    end else if (((exitcond4_fu_492_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_reg_295 <= i_3_fu_518_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_1_reg_307 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        j_1_reg_307 <= j_5_reg_1401;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
        j_2_reg_341 <= 10'd1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        j_2_reg_341 <= j_6_reg_1537;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        j_3_reg_376 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state185)) begin
        j_3_reg_376 <= j_7_reg_1654;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_439_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_283 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        j_reg_283 <= j_4_reg_1355;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_706_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        phi_mul1_reg_364 <= 20'd0;
    end else if (((exitcond_fu_952_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state108))) begin
        phi_mul1_reg_364 <= next_mul2_reg_1627;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        phi_mul_reg_329 <= 20'd0;
    end else if (((exitcond2_fu_718_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
        phi_mul_reg_329 <= next_mul_reg_1506;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_937_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
        t_reg_272 <= t_1_reg_1342;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_reg_272 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        clz_V_reg_1770 <= clz_V_fu_1100_p1;
        tmp_29_reg_1775 <= {{tmp_3_i_fu_1092_p3[5:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ex_addr_reg_1542 <= tmp_19_cast_fu_755_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        ex_load_2_reg_1691 <= ex_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ey_addr_1_reg_1421 <= tmp_10_cast_fu_524_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        hz_addr_4_reg_1706 <= tmp_27_cast_reg_1675;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        i_4_reg_1635 <= i_4_fu_943_p2;
        next_mul2_reg_1627 <= next_mul2_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        i_5_reg_1514 <= i_5_fu_712_p2;
        next_mul_reg_1506 <= next_mul_fu_700_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state160)) begin
        icmp8_reg_1780 <= icmp8_fu_1114_p2;
        new_mant_V_8_reg_1793 <= new_mant_V_8_fu_1161_p3;
        sel_tmp12_i_reg_1799 <= sel_tmp12_i_fu_1195_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_operator_double_div1_fu_388_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state157))) begin
        in_assign_2_reg_1712 <= grp_operator_double_div1_fu_388_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_4_reg_1355 <= j_4_fu_462_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j_5_reg_1401 <= j_5_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        j_6_reg_1537 <= j_6_fu_749_p2;
        tmp_10_reg_1527 <= tmp_10_fu_734_p2;
        tmp_12_reg_1532 <= tmp_12_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        j_7_reg_1654 <= j_7_fu_958_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        new_exp_V_2_reg_1441 <= {{p_Val2_s_fu_533_p1[62:52]}};
        new_mant_V_3_reg_1448 <= new_mant_V_3_fu_555_p1;
        p_0272_2_i_reg_1460 <= p_0272_2_i_fu_607_p3;
        p_Repl2_4_reg_1436 <= p_Val2_s_fu_533_p1[32'd63];
        tmp_i_reg_1455 <= tmp_i_fu_559_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        new_exp_V_4_reg_1562 <= {{p_Val2_4_fu_764_p1[62:52]}};
        new_mant_V_5_reg_1569 <= new_mant_V_5_fu_786_p1;
        p_0272_2_i1_reg_1581 <= p_0272_2_i1_fu_838_p3;
        p_Repl2_7_reg_1557 <= p_Val2_4_fu_764_p1[32'd63];
        tmp_i6_reg_1576 <= tmp_i6_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        new_mant_V_9_reg_1727 <= new_mant_V_9_fu_1021_p1;
        p_Repl2_10_reg_1722 <= p_Val2_6_fu_1000_p1[32'd63];
        p_Result_6_reg_1747 <= p_Result_6_fu_1053_p4;
        p_Val2_6_reg_1717 <= p_Val2_6_fu_1000_p1;
        tmp_26_reg_1765 <= {{p_Val2_6_fu_1000_p1[59:52]}};
        tmp_2_i_reg_1759 <= tmp_2_i_fu_1069_p2;
        tmp_6_i_reg_1752 <= tmp_6_i_fu_1063_p2;
        tmp_i1_reg_1732 <= tmp_i1_fu_1025_p2;
        xf_V_reg_1739 <= xf_V_fu_1047_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state169)) begin
        new_mant_V_reg_1839 <= new_mant_V_fu_1299_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        p_Repl2_3_reg_1491 <= p_Repl2_3_fu_673_p3;
        p_Repl2_s_reg_1496 <= p_Repl2_s_fu_681_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        p_Repl2_5_reg_1617 <= p_Repl2_5_fu_912_p3;
        p_Repl2_6_reg_1612 <= p_Repl2_6_fu_904_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state161)) begin
        p_Repl2_9_reg_1814 <= p_Repl2_9_fu_1226_p3;
        sel_tmp14_i_reg_1809 <= sel_tmp14_i_fu_1221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_439_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_fict_addr_reg_1347 <= tmp_fu_451_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_fict_load_reg_1360 <= p_fict_s_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp8_reg_1780 == 1'd1) & (tmp_i1_reg_1732 == 1'd1) & (sel_tmp14_i_reg_1809 == 1'd0) & (1'b1 == ap_CS_fsm_state168))) begin
        r_V_27_reg_1834 <= grp_fu_1252_p2;
        r_V_reg_1829 <= grp_fu_1243_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        r_V_28_reg_1481 <= grp_fu_624_p2;
        r_V_29_reg_1486 <= grp_fu_629_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        r_V_30_reg_1602 <= grp_fu_855_p2;
        r_V_31_reg_1607 <= grp_fu_860_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i1_reg_1732 == 1'd1) & (1'b1 == ap_CS_fsm_state160))) begin
        r_V_32_reg_1786 <= r_V_32_fu_1128_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_409 <= hz_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_414 <= hz_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_419 <= grp_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state127))) begin
        reg_428 <= ey_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state86))) begin
        reg_434 <= ex_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        t_1_reg_1342 <= t_1_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_718_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state58))) begin
        tmp_11_reg_1522 <= tmp_11_fu_724_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        tmp_18_reg_1660 <= tmp_18_fu_968_p2;
        tmp_21_reg_1665 <= tmp_21_fu_974_p2;
        tmp_22_reg_1670 <= tmp_22_fu_982_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_1_reg_1388 <= grp_fu_1321_p2;
        tmp_3_reg_1393 <= grp_fu_1327_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        tmp_27_cast_reg_1675[19 : 0] <= tmp_27_cast_fu_988_p1[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_492_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        tmp_2_reg_1406 <= tmp_2_fu_508_p2;
        tmp_4_reg_1411 <= tmp_4_fu_513_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        tmp_8_reg_1646 <= grp_fu_1333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_473_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_9_reg_1373 <= tmp_9_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp8_reg_1780 == 1'd1) & (tmp_i1_reg_1732 == 1'd1) & (1'b1 == ap_CS_fsm_state161))) begin
        tmp_i1_22_reg_1804 <= tmp_i1_22_fu_1211_p2;
    end
end

always @ (*) begin
    if (((exitcond7_fu_439_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond7_fu_439_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        ex_address0 = tmp_35_cast_fu_992_p1;
    end else if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state83))) begin
        ex_address0 = ex_addr_reg_1542;
    end else begin
        ex_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state86))) begin
        ex_ce0 = 1'b1;
    end else begin
        ex_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state113))) begin
        ex_ce1 = 1'b1;
    end else begin
        ex_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        ex_we0 = 1'b1;
    end else begin
        ex_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        ey_address0 = tmp_27_cast_reg_1675;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        ey_address0 = tmp_32_cast_fu_996_p1;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state37))) begin
        ey_address0 = ey_addr_1_reg_1421;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ey_address0 = tmp_s_fu_468_p1;
    end else begin
        ey_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state127))) begin
        ey_ce0 = 1'b1;
    end else begin
        ey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ey_d0 = reg_419;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ey_d0 = p_fict_load_reg_1360;
    end else begin
        ey_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state6))) begin
        ey_we0 = 1'b1;
    end else begin
        ey_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_405_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        grp_fu_405_opcode = 2'd0;
    end else begin
        grp_fu_405_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state128))) begin
        grp_fu_405_p0 = reg_419;
    end else if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state114))) begin
        grp_fu_405_p0 = reg_434;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_405_p0 = reg_428;
    end else if (((1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_405_p0 = reg_409;
    end else begin
        grp_fu_405_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state170)) begin
        grp_fu_405_p1 = out_2_fu_1316_p1;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state128))) begin
        grp_fu_405_p1 = reg_428;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_405_p1 = ex_load_2_reg_1691;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_405_p1 = out_1_fu_926_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_405_p1 = out_fu_695_p1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_405_p1 = reg_414;
    end else begin
        grp_fu_405_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        hz_address0 = hz_addr_4_reg_1706;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        hz_address0 = tmp_19_cast_fu_755_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        hz_address0 = tmp_10_cast_fu_524_p1;
    end else begin
        hz_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state184)) begin
        hz_address1 = hz_addr_4_reg_1706;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        hz_address1 = tmp_24_cast_fu_760_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        hz_address1 = tmp_11_cast_fu_529_p1;
    end else begin
        hz_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state17))) begin
        hz_ce0 = 1'b1;
    end else begin
        hz_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state184) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state185) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state17))) begin
        hz_ce1 = 1'b1;
    end else begin
        hz_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state184)) begin
        hz_we1 = 1'b1;
    end else begin
        hz_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        p_fict_s_ce0 = 1'b1;
    end else begin
        p_fict_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond7_fu_439_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond6_fu_456_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond5_fu_473_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((exitcond4_fu_492_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state57 : begin
            if (((exitcond3_fu_706_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((exitcond2_fu_718_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state103 : begin
            if (((exitcond1_fu_937_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            if (((exitcond_fu_952_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state108))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            if (((grp_operator_double_div1_fu_388_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state157))) begin
                ap_NS_fsm = ap_ST_fsm_state158;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state157;
            end
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd156];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd159];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd160];

assign ap_CS_fsm_state162 = ap_CS_fsm[32'd161];

assign ap_CS_fsm_state166 = ap_CS_fsm[32'd165];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd166];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd167];

assign ap_CS_fsm_state169 = ap_CS_fsm[32'd168];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd169];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state183 = ap_CS_fsm[32'd182];

assign ap_CS_fsm_state184 = ap_CS_fsm[32'd183];

assign ap_CS_fsm_state185 = ap_CS_fsm[32'd184];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign clz_V_fu_1100_p1 = tmp_3_i_fu_1092_p3[5:0];

assign ex_address1 = tmp_27_cast_fu_988_p1;

assign ex_d0 = reg_419;

assign exitcond1_fu_937_p2 = ((i_2_reg_353 == 10'd999) ? 1'b1 : 1'b0);

assign exitcond2_fu_718_p2 = ((j_2_reg_341 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond3_fu_706_p2 = ((i_1_reg_318 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond4_fu_492_p2 = ((j_1_reg_307 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond5_fu_473_p2 = ((i_reg_295 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond6_fu_456_p2 = ((j_reg_283 == 10'd1000) ? 1'b1 : 1'b0);

assign exitcond7_fu_439_p2 = ((t_reg_272 == 6'd50) ? 1'b1 : 1'b0);

assign exitcond_fu_952_p2 = ((j_3_reg_376 == 10'd999) ? 1'b1 : 1'b0);

assign grp_fu_1243_p1 = $unsigned(tmp_i34_cast_fu_1236_p1);

assign grp_fu_1252_p1 = $unsigned(tmp_4_i_fu_1233_p1);

assign grp_fu_1321_p0 = grp_fu_1321_p00;

assign grp_fu_1321_p00 = i_reg_295;

assign grp_fu_1321_p1 = 20'd1000;

assign grp_fu_1327_p0 = grp_fu_1327_p00;

assign grp_fu_1327_p00 = tmp_9_reg_1373;

assign grp_fu_1327_p1 = 20'd1000;

assign grp_fu_1333_p0 = grp_fu_1333_p00;

assign grp_fu_1333_p00 = i_4_reg_1635;

assign grp_fu_1333_p1 = 20'd1000;

assign grp_fu_624_p1 = p_0272_2_i_reg_1460;

assign grp_fu_629_p0 = new_mant_V_3_reg_1448;

assign grp_fu_629_p1 = p_0272_2_i_reg_1460;

assign grp_fu_855_p1 = p_0272_2_i1_reg_1581;

assign grp_fu_860_p0 = new_mant_V_5_reg_1569;

assign grp_fu_860_p1 = p_0272_2_i1_reg_1581;

assign grp_operator_double_div1_fu_388_ap_start = grp_operator_double_div1_fu_388_ap_start_reg;

assign hz_d1 = reg_419;

assign i_3_fu_518_p2 = (i_reg_295 + 10'd1);

assign i_4_fu_943_p2 = (i_2_reg_353 + 10'd1);

assign i_5_fu_712_p2 = (i_1_reg_318 + 10'd1);

assign icmp5_fu_806_p2 = ((tmp_19_fu_796_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp8_fu_1114_p2 = ((tmp_29_reg_1775 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_fu_575_p2 = ((tmp_15_fu_565_p4 != 10'd0) ? 1'b1 : 1'b0);

assign j_4_fu_462_p2 = (j_reg_283 + 10'd1);

assign j_5_fu_498_p2 = (j_1_reg_307 + 10'd1);

assign j_6_fu_749_p2 = (10'd1 + j_2_reg_341);

assign j_7_fu_958_p2 = (j_3_reg_376 + 10'd1);

assign new_exp_V_2_fu_545_p4 = {{p_Val2_s_fu_533_p1[62:52]}};

assign new_exp_V_2_i_cast_23_fu_1191_p1 = new_exp_V_2_i_fu_1184_p3;

assign new_exp_V_2_i_cast_fu_1179_p2 = (8'd2 + tmp_26_reg_1765);

assign new_exp_V_2_i_fu_1184_p3 = ((tmp_2_i_reg_1759[0:0] === 1'b1) ? new_exp_V_2_i_cast_fu_1179_p2 : 8'd255);

assign new_exp_V_3_fu_866_p2 = ($signed(11'd2047) + $signed(new_exp_V_4_reg_1562));

assign new_exp_V_4_fu_776_p4 = {{p_Val2_4_fu_764_p1[62:52]}};

assign new_exp_V_5_fu_1011_p4 = {{p_Val2_6_fu_1000_p1[62:52]}};

assign new_exp_V_6_fu_1122_p2 = (7'd4 - tmp_7_i_cast_fu_1119_p1);

assign new_exp_V_fu_635_p2 = ($signed(11'd2047) + $signed(new_exp_V_2_reg_1441));

assign new_mant_V_11_fu_1286_p3 = ((icmp8_reg_1780[0:0] === 1'b1) ? tmp_35_fu_1275_p3 : tmp_36_fu_1283_p1);

assign new_mant_V_12_fu_1293_p3 = ((tmp_i1_reg_1732[0:0] === 1'b1) ? new_mant_V_11_fu_1286_p3 : new_mant_V_8_reg_1793);

assign new_mant_V_3_fu_555_p1 = p_Val2_s_fu_533_p1[51:0];

assign new_mant_V_5_fu_786_p1 = p_Val2_4_fu_764_p1[51:0];

assign new_mant_V_6_fu_1134_p4 = {{xf_V_reg_1739[53:2]}};

assign new_mant_V_7_fu_1153_p3 = ((sel_tmp1_i_fu_1148_p2[0:0] === 1'b1) ? new_mant_V_6_fu_1134_p4 : 52'd0);

assign new_mant_V_8_fu_1161_p3 = ((tmp_6_i_reg_1752[0:0] === 1'b1) ? new_mant_V_9_reg_1727 : new_mant_V_7_fu_1153_p3);

assign new_mant_V_9_fu_1021_p1 = p_Val2_6_fu_1000_p1[51:0];

assign new_mant_V_fu_1299_p3 = ((sel_tmp14_i_reg_1809[0:0] === 1'b1) ? new_mant_V_8_reg_1793 : new_mant_V_12_fu_1293_p3);

assign next_mul2_fu_931_p2 = (phi_mul1_reg_364 + 20'd1000);

assign next_mul_fu_700_p2 = (phi_mul_reg_329 + 20'd1000);

assign out_1_fu_926_p1 = p_Result_5_fu_919_p4;

assign out_2_fu_1316_p1 = p_Result_8_fu_1308_p4;

assign out_fu_695_p1 = p_Result_s_fu_688_p4;

assign p_0272_2_i1_fu_838_p3 = ((tmp_14_fu_832_p2[0:0] === 1'b1) ? p_shift_V_i1_fu_828_p1 : shift_V_i9_cast_fu_822_p2);

assign p_0272_2_i_fu_607_p3 = ((tmp_5_fu_601_p2[0:0] === 1'b1) ? p_shift_V_i_fu_597_p1 : shift_V_i_cast_fu_591_p2);

assign p_Repl2_1_i_cast_fu_1305_p1 = $signed(p_Repl2_9_reg_1814);

assign p_Repl2_3_fu_673_p3 = ((tmp_1_i_fu_668_p2[0:0] === 1'b1) ? p_i_fu_660_p3 : new_exp_V_fu_635_p2);

assign p_Repl2_5_fu_912_p3 = ((tmp_14_i1_fu_886_p2[0:0] === 1'b1) ? new_mant_V_5_reg_1569 : xf_V_15_fu_879_p3);

assign p_Repl2_6_fu_904_p3 = ((tmp_1_i1_fu_899_p2[0:0] === 1'b1) ? p_i1_fu_891_p3 : new_exp_V_3_fu_866_p2);

assign p_Repl2_9_fu_1226_p3 = ((sel_tmp14_i_fu_1221_p2[0:0] === 1'b1) ? ssdm_int_V_write_ass_fu_1202_p4 : sel_tmp12_i_reg_1799);

assign p_Repl2_s_fu_681_p3 = ((tmp_14_i_fu_655_p2[0:0] === 1'b1) ? new_mant_V_3_reg_1448 : xf_V_14_fu_648_p3);

assign p_Result_5_fu_919_p4 = {{{p_Repl2_7_reg_1557}, {p_Repl2_6_reg_1612}}, {p_Repl2_5_reg_1617}};

integer ap_tvar_int_0;

always @ (xf_V_fu_1047_p2) begin
    for (ap_tvar_int_0 = 56 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 55 - 0) begin
            p_Result_6_fu_1053_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_6_fu_1053_p4[ap_tvar_int_0] = xf_V_fu_1047_p2[55 - ap_tvar_int_0];
        end
    end
end

assign p_Result_7_fu_1085_p3 = {{8'd255}, {p_Result_6_reg_1747}};

assign p_Result_8_fu_1308_p4 = {{{p_Repl2_10_reg_1722}, {p_Repl2_1_i_cast_fu_1305_p1}}, {new_mant_V_reg_1839}};

assign p_Result_s_fu_688_p4 = {{{p_Repl2_4_reg_1436}, {p_Repl2_3_reg_1491}}, {p_Repl2_s_reg_1496}};

assign p_Val2_4_fu_764_p1 = reg_419;

assign p_Val2_6_fu_1000_p1 = in_assign_2_reg_1712;

assign p_Val2_s_fu_533_p1 = reg_419;

assign p_fict_s_address0 = p_fict_addr_reg_1347;

assign p_i1_fu_891_p3 = ((tmp_14_i1_fu_886_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign p_i2_fu_1167_p3 = ((icmp8_fu_1114_p2[0:0] === 1'b1) ? new_exp_V_6_fu_1122_p2 : 7'd0);

assign p_i36_cast_fu_1175_p1 = $signed(p_i2_fu_1167_p3);

assign p_i_fu_660_p3 = ((tmp_14_i_fu_655_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign p_shift_V_i1_fu_828_p1 = tmp_i6_fu_790_p2;

assign p_shift_V_i_fu_597_p1 = tmp_i_fu_559_p2;

assign p_shl_i_cast_fu_1043_p1 = p_shl_i_fu_1035_p3;

assign p_shl_i_fu_1035_p3 = {{new_mant_V_9_fu_1021_p1}, {3'd0}};

assign r_V_32_fu_1128_p2 = (7'd3 - tmp_7_i_cast_fu_1119_p1);

assign sel_tmp12_i_fu_1195_p3 = ((tmp_i1_reg_1732[0:0] === 1'b1) ? p_i36_cast_fu_1175_p1 : new_exp_V_2_i_cast_23_fu_1191_p1);

assign sel_tmp13_i_fu_1216_p2 = (tmp_i1_reg_1732 ^ 1'd1);

assign sel_tmp14_i_fu_1221_p2 = (tmp_6_i_reg_1752 & sel_tmp13_i_fu_1216_p2);

assign sel_tmp1_i_fu_1148_p2 = (tmp_2_i_reg_1759 & sel_tmp_i_fu_1143_p2);

assign sel_tmp8_i_fu_1264_p2 = (tmp_30_fu_1257_p3 & icmp8_reg_1780);

assign sel_tmp_i_fu_1143_p2 = (tmp_6_i_reg_1752 ^ 1'd1);

assign shift_V_i9_cast_fu_822_p2 = ($signed(2'd2) - $signed(tmp_13_fu_812_p4));

assign shift_V_i_cast_fu_591_p2 = ($signed(2'd2) - $signed(tmp_7_fu_581_p4));

assign ssdm_int_V_write_ass_fu_1202_p4 = {{p_Val2_6_reg_1717[60:52]}};

assign t_1_fu_445_p2 = (t_reg_272 + 6'd1);

assign tmp_10_cast_fu_524_p1 = tmp_2_reg_1406;

assign tmp_10_fu_734_p2 = (tmp_18_cast_fu_730_p1 + phi_mul_reg_329);

assign tmp_11_cast_fu_529_p1 = tmp_4_reg_1411;

assign tmp_11_fu_724_p2 = ($signed(10'd1023) + $signed(j_2_reg_341));

assign tmp_12_fu_743_p2 = (tmp_21_cast_fu_740_p1 + phi_mul_reg_329);

assign tmp_12_i1_fu_871_p2 = ((new_exp_V_4_reg_1562 < 11'd3) ? 1'b1 : 1'b0);

assign tmp_12_i_fu_640_p2 = ((new_exp_V_2_reg_1441 < 11'd3) ? 1'b1 : 1'b0);

assign tmp_13_fu_812_p4 = {{p_Val2_4_fu_764_p1[53:52]}};

assign tmp_14_fu_832_p2 = (tmp_i6_fu_790_p2 | icmp5_fu_806_p2);

assign tmp_14_i1_fu_886_p2 = ((new_exp_V_4_reg_1562 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_14_i_fu_655_p2 = ((new_exp_V_2_reg_1441 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_15_fu_565_p4 = {{p_Val2_s_fu_533_p1[62:53]}};

assign tmp_16_fu_645_p1 = r_V_29_reg_1486[51:0];

assign tmp_18_cast_fu_730_p1 = j_2_reg_341;

assign tmp_18_fu_968_p2 = (phi_mul1_reg_364 + tmp_26_cast_fu_964_p1);

assign tmp_19_cast_fu_755_p1 = tmp_10_reg_1527;

assign tmp_19_fu_796_p4 = {{p_Val2_4_fu_764_p1[62:53]}};

assign tmp_1_i1_fu_899_p2 = (tmp_i6_reg_1576 | tmp_14_i1_fu_886_p2);

assign tmp_1_i2_fu_1031_p1 = new_mant_V_9_fu_1021_p1;

assign tmp_1_i_fu_668_p2 = (tmp_i_reg_1455 | tmp_14_i_fu_655_p2);

assign tmp_20_fu_876_p1 = r_V_31_reg_1607[51:0];

assign tmp_21_cast_fu_740_p1 = tmp_11_reg_1522;

assign tmp_21_fu_974_p2 = (tmp_8_reg_1646 + tmp_26_cast_fu_964_p1);

assign tmp_22_fu_982_p2 = (phi_mul1_reg_364 + tmp_28_cast_fu_979_p1);

assign tmp_24_cast_fu_760_p1 = tmp_12_reg_1532;

assign tmp_26_cast_fu_964_p1 = j_3_reg_376;

assign tmp_27_cast_fu_988_p1 = tmp_18_reg_1660;

assign tmp_28_cast_fu_979_p1 = j_7_reg_1654;

assign tmp_2_fu_508_p2 = (tmp_6_cast_fu_504_p1 + tmp_1_reg_1388);

assign tmp_2_i_fu_1069_p2 = ((new_exp_V_5_fu_1011_p4 < 11'd253) ? 1'b1 : 1'b0);

assign tmp_30_fu_1257_p3 = r_V_32_reg_1786[32'd6];

assign tmp_31_fu_1269_p1 = r_V_reg_1829[51:0];

assign tmp_32_cast_fu_996_p1 = tmp_21_reg_1665;

assign tmp_32_fu_1272_p1 = r_V_27_reg_1834[51:0];

assign tmp_35_cast_fu_992_p1 = tmp_22_reg_1670;

assign tmp_35_fu_1275_p3 = ((sel_tmp8_i_fu_1264_p2[0:0] === 1'b1) ? tmp_31_fu_1269_p1 : tmp_32_fu_1272_p1);

assign tmp_36_fu_1283_p1 = xf_V_reg_1739[51:0];


always @ (p_Result_7_fu_1085_p3) begin
    if (p_Result_7_fu_1085_p3[0] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd0;
    end else if (p_Result_7_fu_1085_p3[1] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd1;
    end else if (p_Result_7_fu_1085_p3[2] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd2;
    end else if (p_Result_7_fu_1085_p3[3] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd3;
    end else if (p_Result_7_fu_1085_p3[4] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd4;
    end else if (p_Result_7_fu_1085_p3[5] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd5;
    end else if (p_Result_7_fu_1085_p3[6] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd6;
    end else if (p_Result_7_fu_1085_p3[7] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd7;
    end else if (p_Result_7_fu_1085_p3[8] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd8;
    end else if (p_Result_7_fu_1085_p3[9] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd9;
    end else if (p_Result_7_fu_1085_p3[10] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd10;
    end else if (p_Result_7_fu_1085_p3[11] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd11;
    end else if (p_Result_7_fu_1085_p3[12] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd12;
    end else if (p_Result_7_fu_1085_p3[13] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd13;
    end else if (p_Result_7_fu_1085_p3[14] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd14;
    end else if (p_Result_7_fu_1085_p3[15] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd15;
    end else if (p_Result_7_fu_1085_p3[16] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd16;
    end else if (p_Result_7_fu_1085_p3[17] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd17;
    end else if (p_Result_7_fu_1085_p3[18] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd18;
    end else if (p_Result_7_fu_1085_p3[19] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd19;
    end else if (p_Result_7_fu_1085_p3[20] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd20;
    end else if (p_Result_7_fu_1085_p3[21] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd21;
    end else if (p_Result_7_fu_1085_p3[22] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd22;
    end else if (p_Result_7_fu_1085_p3[23] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd23;
    end else if (p_Result_7_fu_1085_p3[24] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd24;
    end else if (p_Result_7_fu_1085_p3[25] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd25;
    end else if (p_Result_7_fu_1085_p3[26] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd26;
    end else if (p_Result_7_fu_1085_p3[27] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd27;
    end else if (p_Result_7_fu_1085_p3[28] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd28;
    end else if (p_Result_7_fu_1085_p3[29] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd29;
    end else if (p_Result_7_fu_1085_p3[30] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd30;
    end else if (p_Result_7_fu_1085_p3[31] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd31;
    end else if (p_Result_7_fu_1085_p3[32] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd32;
    end else if (p_Result_7_fu_1085_p3[33] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd33;
    end else if (p_Result_7_fu_1085_p3[34] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd34;
    end else if (p_Result_7_fu_1085_p3[35] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd35;
    end else if (p_Result_7_fu_1085_p3[36] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd36;
    end else if (p_Result_7_fu_1085_p3[37] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd37;
    end else if (p_Result_7_fu_1085_p3[38] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd38;
    end else if (p_Result_7_fu_1085_p3[39] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd39;
    end else if (p_Result_7_fu_1085_p3[40] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd40;
    end else if (p_Result_7_fu_1085_p3[41] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd41;
    end else if (p_Result_7_fu_1085_p3[42] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd42;
    end else if (p_Result_7_fu_1085_p3[43] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd43;
    end else if (p_Result_7_fu_1085_p3[44] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd44;
    end else if (p_Result_7_fu_1085_p3[45] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd45;
    end else if (p_Result_7_fu_1085_p3[46] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd46;
    end else if (p_Result_7_fu_1085_p3[47] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd47;
    end else if (p_Result_7_fu_1085_p3[48] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd48;
    end else if (p_Result_7_fu_1085_p3[49] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd49;
    end else if (p_Result_7_fu_1085_p3[50] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd50;
    end else if (p_Result_7_fu_1085_p3[51] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd51;
    end else if (p_Result_7_fu_1085_p3[52] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd52;
    end else if (p_Result_7_fu_1085_p3[53] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd53;
    end else if (p_Result_7_fu_1085_p3[54] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd54;
    end else if (p_Result_7_fu_1085_p3[55] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd55;
    end else if (p_Result_7_fu_1085_p3[56] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd56;
    end else if (p_Result_7_fu_1085_p3[57] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd57;
    end else if (p_Result_7_fu_1085_p3[58] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd58;
    end else if (p_Result_7_fu_1085_p3[59] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd59;
    end else if (p_Result_7_fu_1085_p3[60] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd60;
    end else if (p_Result_7_fu_1085_p3[61] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd61;
    end else if (p_Result_7_fu_1085_p3[62] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd62;
    end else if (p_Result_7_fu_1085_p3[63] == 1'b1) begin
        tmp_3_i_fu_1092_p3 = 64'd63;
    end else begin
        tmp_3_i_fu_1092_p3 = 64'd64;
    end
end

assign tmp_4_fu_513_p2 = (tmp_6_cast_fu_504_p1 + tmp_3_reg_1393);

assign tmp_4_i_fu_1233_p1 = r_V_32_reg_1786;

assign tmp_5_fu_601_p2 = (tmp_i_fu_559_p2 | icmp_fu_575_p2);

assign tmp_6_cast_fu_504_p1 = j_1_reg_307;

assign tmp_6_i_fu_1063_p2 = ((new_exp_V_5_fu_1011_p4 == 11'd255) ? 1'b1 : 1'b0);

assign tmp_7_fu_581_p4 = {{p_Val2_s_fu_533_p1[53:52]}};

assign tmp_7_i_cast_fu_1119_p1 = clz_V_reg_1770;

assign tmp_9_fu_479_p2 = ($signed(i_reg_295) + $signed(10'd1023));

assign tmp_fu_451_p1 = t_reg_272;

assign tmp_i1_22_fu_1211_p2 = ($signed(7'd0) - $signed(r_V_32_reg_1786));

assign tmp_i1_fu_1025_p2 = ((new_exp_V_5_fu_1011_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_i34_cast_fu_1236_p1 = $signed(tmp_i1_22_reg_1804);

assign tmp_i6_fu_790_p2 = ((new_exp_V_4_fu_776_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_i_fu_559_p2 = ((new_exp_V_2_fu_545_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_468_p1 = j_reg_283;

assign xf_V_14_fu_648_p3 = ((tmp_12_i_fu_640_p2[0:0] === 1'b1) ? r_V_28_reg_1481 : tmp_16_fu_645_p1);

assign xf_V_15_fu_879_p3 = ((tmp_12_i1_fu_871_p2[0:0] === 1'b1) ? r_V_30_reg_1602 : tmp_20_fu_876_p1);

assign xf_V_fu_1047_p2 = (p_shl_i_cast_fu_1043_p1 - tmp_1_i2_fu_1031_p1);

always @ (posedge ap_clk) begin
    tmp_27_cast_reg_1675[63:20] <= 44'b00000000000000000000000000000000000000000000;
end

endmodule //kernel_fdtd_2d_optimized
