// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel_jacobi_1d_imper.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel_jacobi_1d_imper::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel_jacobi_1d_imper::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state1 = "1";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state2 = "10";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state3 = "100";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state4 = "1000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state5 = "10000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state6 = "100000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state7 = "1000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state8 = "10000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state9 = "100000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state10 = "1000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state11 = "10000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state12 = "100000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state93 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state94 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state95 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state96 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state97 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<98> kernel_jacobi_1d_imper::ap_ST_fsm_state98 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_5 = "101";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_13 = "10011";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_21 = "100001";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_1 = "1";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_2 = "10";
const sc_lv<1> kernel_jacobi_1d_imper::ap_const_lv1_0 = "0";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_3 = "11";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_10 = "10000";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_11 = "10001";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_5C = "1011100";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_5E = "1011110";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_60 = "1100000";
const sc_lv<7> kernel_jacobi_1d_imper::ap_const_lv7_0 = "0000000";
const sc_lv<1> kernel_jacobi_1d_imper::ap_const_lv1_1 = "1";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_5D = "1011101";
const sc_lv<14> kernel_jacobi_1d_imper::ap_const_lv14_1 = "1";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_61 = "1100001";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_4 = "100";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_12 = "10010";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_5F = "1011111";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_6 = "110";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_14 = "10100";
const sc_lv<64> kernel_jacobi_1d_imper::ap_const_lv64_4008000000000000 = "100000000001000000000000000000000000000000000000000000000000000";
const sc_lv<32> kernel_jacobi_1d_imper::ap_const_lv32_22 = "100010";
const sc_lv<7> kernel_jacobi_1d_imper::ap_const_lv7_64 = "1100100";
const sc_lv<7> kernel_jacobi_1d_imper::ap_const_lv7_1 = "1";
const sc_lv<14> kernel_jacobi_1d_imper::ap_const_lv14_270F = "10011100001111";
const sc_lv<14> kernel_jacobi_1d_imper::ap_const_lv14_3FFF = "11111111111111";
const bool kernel_jacobi_1d_imper::ap_const_boolean_1 = true;

kernel_jacobi_1d_imper::kernel_jacobi_1d_imper(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kernel_jacobi_1d_bkb_U1 = new kernel_jacobi_1d_bkb<1,14,64,64,64>("kernel_jacobi_1d_bkb_U1");
    kernel_jacobi_1d_bkb_U1->clk(ap_clk);
    kernel_jacobi_1d_bkb_U1->reset(ap_rst);
    kernel_jacobi_1d_bkb_U1->din0(grp_fu_132_p0);
    kernel_jacobi_1d_bkb_U1->din1(grp_fu_132_p1);
    kernel_jacobi_1d_bkb_U1->ce(ap_var_for_const0);
    kernel_jacobi_1d_bkb_U1->dout(grp_fu_132_p2);
    kernel_jacobi_1d_cud_U2 = new kernel_jacobi_1d_cud<1,59,64,64,64>("kernel_jacobi_1d_cud_U2");
    kernel_jacobi_1d_cud_U2->clk(ap_clk);
    kernel_jacobi_1d_cud_U2->reset(ap_rst);
    kernel_jacobi_1d_cud_U2->din0(reg_147);
    kernel_jacobi_1d_cud_U2->din1(ap_var_for_const1);
    kernel_jacobi_1d_cud_U2->ce(ap_var_for_const0);
    kernel_jacobi_1d_cud_U2->dout(grp_fu_136_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_1_fu_177_p1 );
    sensitive << ( tmp_5_fu_192_p1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_181_p1 );
    sensitive << ( tmp_9_reg_268 );
    sensitive << ( ap_CS_fsm_state98 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state98 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_A_d1);
    sensitive << ( B_load_reg_283 );
    sensitive << ( ap_CS_fsm_state98 );

    SC_METHOD(thread_A_we1);
    sensitive << ( ap_CS_fsm_state98 );

    SC_METHOD(thread_B_address0);
    sensitive << ( tmp_2_reg_234 );
    sensitive << ( tmp_9_fu_202_p1 );
    sensitive << ( ap_CS_fsm_state95 );
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_state95 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state96 );

    SC_METHOD(thread_B_d0);
    sensitive << ( tmp_7_reg_260 );
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_B_we0);
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state93);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state94);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state95);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state96);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state97);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state98);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_153_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_153_p2 );

    SC_METHOD(thread_exitcond1_fu_165_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_109 );

    SC_METHOD(thread_exitcond2_fu_153_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_reg_98 );

    SC_METHOD(thread_exitcond_fu_196_p2);
    sensitive << ( ap_CS_fsm_state95 );
    sensitive << ( j_reg_121 );

    SC_METHOD(thread_grp_fu_132_p0);
    sensitive << ( reg_141 );
    sensitive << ( reg_147 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_132_p1);
    sensitive << ( reg_141 );
    sensitive << ( A_load_1_reg_244 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_i_1_fu_186_p2);
    sensitive << ( i_reg_109 );

    SC_METHOD(thread_j_1_fu_207_p2);
    sensitive << ( j_reg_121 );

    SC_METHOD(thread_t_1_fu_159_p2);
    sensitive << ( t_reg_98 );

    SC_METHOD(thread_tmp_1_fu_177_p1);
    sensitive << ( tmp_reg_224 );

    SC_METHOD(thread_tmp_2_fu_181_p1);
    sensitive << ( i_reg_109 );

    SC_METHOD(thread_tmp_5_fu_192_p1);
    sensitive << ( i_1_reg_249 );

    SC_METHOD(thread_tmp_9_fu_202_p1);
    sensitive << ( j_reg_121 );

    SC_METHOD(thread_tmp_fu_171_p2);
    sensitive << ( i_reg_109 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_165_p2 );
    sensitive << ( ap_CS_fsm_state95 );
    sensitive << ( exitcond_fu_196_p2 );
    sensitive << ( exitcond2_fu_153_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel_jacobi_1d_imper_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, tsteps, "(port)tsteps");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_we1, "(port)A_we1");
    sc_trace(mVcdFile, A_d1, "(port)A_d1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_we0, "(port)B_we0");
    sc_trace(mVcdFile, B_d0, "(port)B_d0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_141, "reg_141");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, grp_fu_132_p2, "grp_fu_132_p2");
    sc_trace(mVcdFile, reg_147, "reg_147");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, t_1_fu_159_p2, "t_1_fu_159_p2");
    sc_trace(mVcdFile, t_1_reg_216, "t_1_reg_216");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_171_p2, "tmp_fu_171_p2");
    sc_trace(mVcdFile, tmp_reg_224, "tmp_reg_224");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond1_fu_165_p2, "exitcond1_fu_165_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_2_fu_181_p1, "tmp_2_fu_181_p1");
    sc_trace(mVcdFile, tmp_2_reg_234, "tmp_2_reg_234");
    sc_trace(mVcdFile, A_load_1_reg_244, "A_load_1_reg_244");
    sc_trace(mVcdFile, i_1_fu_186_p2, "i_1_fu_186_p2");
    sc_trace(mVcdFile, i_1_reg_249, "i_1_reg_249");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_136_p2, "grp_fu_136_p2");
    sc_trace(mVcdFile, tmp_7_reg_260, "tmp_7_reg_260");
    sc_trace(mVcdFile, ap_CS_fsm_state93, "ap_CS_fsm_state93");
    sc_trace(mVcdFile, tmp_9_fu_202_p1, "tmp_9_fu_202_p1");
    sc_trace(mVcdFile, tmp_9_reg_268, "tmp_9_reg_268");
    sc_trace(mVcdFile, ap_CS_fsm_state95, "ap_CS_fsm_state95");
    sc_trace(mVcdFile, exitcond_fu_196_p2, "exitcond_fu_196_p2");
    sc_trace(mVcdFile, j_1_fu_207_p2, "j_1_fu_207_p2");
    sc_trace(mVcdFile, j_1_reg_278, "j_1_reg_278");
    sc_trace(mVcdFile, B_load_reg_283, "B_load_reg_283");
    sc_trace(mVcdFile, ap_CS_fsm_state97, "ap_CS_fsm_state97");
    sc_trace(mVcdFile, t_reg_98, "t_reg_98");
    sc_trace(mVcdFile, i_reg_109, "i_reg_109");
    sc_trace(mVcdFile, ap_CS_fsm_state94, "ap_CS_fsm_state94");
    sc_trace(mVcdFile, exitcond2_fu_153_p2, "exitcond2_fu_153_p2");
    sc_trace(mVcdFile, j_reg_121, "j_reg_121");
    sc_trace(mVcdFile, ap_CS_fsm_state98, "ap_CS_fsm_state98");
    sc_trace(mVcdFile, tmp_1_fu_177_p1, "tmp_1_fu_177_p1");
    sc_trace(mVcdFile, tmp_5_fu_192_p1, "tmp_5_fu_192_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state96, "ap_CS_fsm_state96");
    sc_trace(mVcdFile, grp_fu_132_p0, "grp_fu_132_p0");
    sc_trace(mVcdFile, grp_fu_132_p1, "grp_fu_132_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("kernel_jacobi_1d_imper.hdltvin.dat");
    mHdltvoutHandle.open("kernel_jacobi_1d_imper.hdltvout.dat");
}

kernel_jacobi_1d_imper::~kernel_jacobi_1d_imper() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete kernel_jacobi_1d_bkb_U1;
    delete kernel_jacobi_1d_cud_U2;
}

void kernel_jacobi_1d_imper::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void kernel_jacobi_1d_imper::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_4008000000000000;
}

void kernel_jacobi_1d_imper::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_153_p2.read(), ap_const_lv1_0))) {
        i_reg_109 = ap_const_lv14_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read())) {
        i_reg_109 = i_1_reg_249.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_165_p2.read(), ap_const_lv1_1))) {
        j_reg_121 = ap_const_lv14_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state98.read())) {
        j_reg_121 = j_1_reg_278.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_196_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()))) {
        t_reg_98 = t_1_reg_216.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        t_reg_98 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        A_load_1_reg_244 = A_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        B_load_reg_283 = B_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        i_1_reg_249 = i_1_fu_186_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()) && esl_seteq<1,1,1>(exitcond_fu_196_p2.read(), ap_const_lv1_0))) {
        j_1_reg_278 = j_1_fu_207_p2.read();
        tmp_9_reg_268 = tmp_9_fu_202_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        reg_141 = A_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        reg_147 = grp_fu_132_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_1_reg_216 = t_1_fu_159_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_2_reg_234 = tmp_2_fu_181_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read())) {
        tmp_7_reg_260 = grp_fu_136_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_fu_165_p2.read(), ap_const_lv1_0))) {
        tmp_reg_224 = tmp_fu_171_p2.read();
    }
}

void kernel_jacobi_1d_imper::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        A_address0 =  (sc_lv<14>) (tmp_5_fu_192_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_address0 =  (sc_lv<14>) (tmp_1_fu_177_p1.read());
    } else {
        A_address0 = "XXXXXXXXXXXXXX";
    }
}

void kernel_jacobi_1d_imper::thread_A_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state98.read())) {
        A_address1 =  (sc_lv<14>) (tmp_9_reg_268.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_address1 =  (sc_lv<14>) (tmp_2_fu_181_p1.read());
    } else {
        A_address1 = "XXXXXXXXXXXXXX";
    }
}

void kernel_jacobi_1d_imper::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void kernel_jacobi_1d_imper::thread_A_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state98.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void kernel_jacobi_1d_imper::thread_A_d1() {
    A_d1 = B_load_reg_283.read();
}

void kernel_jacobi_1d_imper::thread_A_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state98.read())) {
        A_we1 = ap_const_logic_1;
    } else {
        A_we1 = ap_const_logic_0;
    }
}

void kernel_jacobi_1d_imper::thread_B_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read())) {
        B_address0 =  (sc_lv<14>) (tmp_9_fu_202_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read())) {
        B_address0 =  (sc_lv<14>) (tmp_2_reg_234.read());
    } else {
        B_address0 = "XXXXXXXXXXXXXX";
    }
}

void kernel_jacobi_1d_imper::thread_B_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()))) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void kernel_jacobi_1d_imper::thread_B_d0() {
    B_d0 = tmp_7_reg_260.read();
}

void kernel_jacobi_1d_imper::thread_B_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read())) {
        B_we0 = ap_const_logic_1;
    } else {
        B_we0 = ap_const_logic_0;
    }
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state93() {
    ap_CS_fsm_state93 = ap_CS_fsm.read()[92];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state94() {
    ap_CS_fsm_state94 = ap_CS_fsm.read()[93];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state95() {
    ap_CS_fsm_state95 = ap_CS_fsm.read()[94];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state96() {
    ap_CS_fsm_state96 = ap_CS_fsm.read()[95];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state97() {
    ap_CS_fsm_state97 = ap_CS_fsm.read()[96];
}

void kernel_jacobi_1d_imper::thread_ap_CS_fsm_state98() {
    ap_CS_fsm_state98 = ap_CS_fsm.read()[97];
}

void kernel_jacobi_1d_imper::thread_ap_done() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_153_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void kernel_jacobi_1d_imper::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel_jacobi_1d_imper::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond2_fu_153_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel_jacobi_1d_imper::thread_exitcond1_fu_165_p2() {
    exitcond1_fu_165_p2 = (!i_reg_109.read().is_01() || !ap_const_lv14_270F.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_109.read() == ap_const_lv14_270F);
}

void kernel_jacobi_1d_imper::thread_exitcond2_fu_153_p2() {
    exitcond2_fu_153_p2 = (!t_reg_98.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(t_reg_98.read() == ap_const_lv7_64);
}

void kernel_jacobi_1d_imper::thread_exitcond_fu_196_p2() {
    exitcond_fu_196_p2 = (!j_reg_121.read().is_01() || !ap_const_lv14_270F.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_121.read() == ap_const_lv14_270F);
}

void kernel_jacobi_1d_imper::thread_grp_fu_132_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_132_p0 = reg_147.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_132_p0 = reg_141.read();
    } else {
        grp_fu_132_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel_jacobi_1d_imper::thread_grp_fu_132_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_132_p1 = reg_141.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_132_p1 = A_load_1_reg_244.read();
    } else {
        grp_fu_132_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel_jacobi_1d_imper::thread_i_1_fu_186_p2() {
    i_1_fu_186_p2 = (!i_reg_109.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(i_reg_109.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void kernel_jacobi_1d_imper::thread_j_1_fu_207_p2() {
    j_1_fu_207_p2 = (!j_reg_121.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(j_reg_121.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void kernel_jacobi_1d_imper::thread_t_1_fu_159_p2() {
    t_1_fu_159_p2 = (!t_reg_98.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(t_reg_98.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void kernel_jacobi_1d_imper::thread_tmp_1_fu_177_p1() {
    tmp_1_fu_177_p1 = esl_zext<64,14>(tmp_reg_224.read());
}

void kernel_jacobi_1d_imper::thread_tmp_2_fu_181_p1() {
    tmp_2_fu_181_p1 = esl_zext<64,14>(i_reg_109.read());
}

void kernel_jacobi_1d_imper::thread_tmp_5_fu_192_p1() {
    tmp_5_fu_192_p1 = esl_zext<64,14>(i_1_reg_249.read());
}

void kernel_jacobi_1d_imper::thread_tmp_9_fu_202_p1() {
    tmp_9_fu_202_p1 = esl_zext<64,14>(j_reg_121.read());
}

void kernel_jacobi_1d_imper::thread_tmp_fu_171_p2() {
    tmp_fu_171_p2 = (!i_reg_109.read().is_01() || !ap_const_lv14_3FFF.is_01())? sc_lv<14>(): (sc_biguint<14>(i_reg_109.read()) + sc_bigint<14>(ap_const_lv14_3FFF));
}

void kernel_jacobi_1d_imper::thread_ap_NS_fsm() {
    if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(exitcond2_fu_153_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_fu_165_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state95;
        } else {
            ap_NS_fsm = ap_ST_fsm_state4;
        }
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state84;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        ap_NS_fsm = ap_ST_fsm_state85;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        ap_NS_fsm = ap_ST_fsm_state87;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        ap_NS_fsm = ap_ST_fsm_state89;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        ap_NS_fsm = ap_ST_fsm_state90;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        ap_NS_fsm = ap_ST_fsm_state91;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        ap_NS_fsm = ap_ST_fsm_state93;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state93))
    {
        ap_NS_fsm = ap_ST_fsm_state94;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state94))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state95))
    {
        if ((esl_seteq<1,1,1>(exitcond_fu_196_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state96;
        }
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state96))
    {
        ap_NS_fsm = ap_ST_fsm_state97;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state97))
    {
        ap_NS_fsm = ap_ST_fsm_state98;
    }
    else if (esl_seteq<1,98,98>(ap_CS_fsm.read(), ap_ST_fsm_state98))
    {
        ap_NS_fsm = ap_ST_fsm_state95;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<98>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void kernel_jacobi_1d_imper::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"tsteps\" :  \"" << tsteps.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"n\" :  \"" << n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address1\" :  \"" << A_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce1\" :  \"" << A_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_we1\" :  \"" << A_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_d1\" :  \"" << A_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q1\" :  \"" << A_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address0\" :  \"" << B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce0\" :  \"" << B_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_we0\" :  \"" << B_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_d0\" :  \"" << B_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q0\" :  \"" << B_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

