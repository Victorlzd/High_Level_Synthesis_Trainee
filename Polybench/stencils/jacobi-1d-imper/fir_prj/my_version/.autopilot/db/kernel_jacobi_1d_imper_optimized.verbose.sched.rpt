

================================================================
== Vivado HLS Report for 'kernel_jacobi_1d_imper_optimized'
================================================================
* Date:           Fri Aug 31 20:45:20 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        fir_prj
* Solution:       my_version
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   2.50|     2.292|        0.31|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +----------+----------+----------+----------+---------+
    |       Latency       |       Interval      | Pipeline|
    |    min   |    max   |    min   |    max   |   Type  |
    +----------+----------+----------+----------+---------+
    |  89982301|  89982301|  89982301|  89982301|   none  |
    +----------+----------+----------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+----------+----------+----------+-----------+-----------+------+----------+
        |             |       Latency       | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |    min   |    max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+----------+----------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  89982300|  89982300|    899823|          -|          -|   100|    no    |
        | + Loop 1.1  |    859828|    859828|        86|          -|          -|  9998|    no    |
        | + Loop 1.2  |     39992|     39992|         4|          -|          -|  9998|    no    |
        +-------------+----------+----------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 78
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
3 --> 
	4  / (!exitcond1)
	75  / (exitcond1)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	3  / true
75 --> 
	76  / (!exitcond)
	2  / (exitcond)
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	75  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %tsteps) nounwind, !map !196"   --->   Operation 79 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %n) nounwind, !map !202"   --->   Operation 80 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x double]* %A) nounwind, !map !206"   --->   Operation 81 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10000 x double]* %B) nounwind, !map !212"   --->   Operation 82 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([33 x i8]* @kernel_jacobi_1d_imp) nounwind"   --->   Operation 83 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (1.06ns)   --->   "br label %.loopexit" [jacobi-1d-imper.cpp:254]   --->   Operation 84 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 1.37>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%t = phi i7 [ 0, %0 ], [ %t_1, %.loopexit.loopexit ]"   --->   Operation 85 'phi' 't' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (1.18ns)   --->   "%exitcond2 = icmp eq i7 %t, -28" [jacobi-1d-imper.cpp:254]   --->   Operation 86 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind"   --->   Operation 87 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (1.37ns)   --->   "%t_1 = add i7 %t, 1" [jacobi-1d-imper.cpp:254]   --->   Operation 88 'add' 't_1' <Predicate = true> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.46> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %3, label %.preheader3.preheader" [jacobi-1d-imper.cpp:254]   --->   Operation 89 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (1.06ns)   --->   "br label %.preheader3" [jacobi-1d-imper.cpp:257]   --->   Operation 90 'br' <Predicate = (!exitcond2)> <Delay = 1.06>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "ret void" [jacobi-1d-imper.cpp:266]   --->   Operation 91 'ret' <Predicate = (exitcond2)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.46>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%i = phi i14 [ %i_1, %1 ], [ 1, %.preheader3.preheader ]"   --->   Operation 92 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (1.42ns)   --->   "%exitcond1 = icmp eq i14 %i, -6385" [jacobi-1d-imper.cpp:257]   --->   Operation 93 'icmp' 'exitcond1' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9998, i64 9998, i64 9998) nounwind"   --->   Operation 94 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %.preheader.preheader, label %1" [jacobi-1d-imper.cpp:257]   --->   Operation 95 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (1.46ns)   --->   "%tmp = add i14 -1, %i" [jacobi-1d-imper.cpp:258]   --->   Operation 96 'add' 'tmp' <Predicate = (!exitcond1)> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.46> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (1.06ns)   --->   "br label %.preheader" [jacobi-1d-imper.cpp:260]   --->   Operation 97 'br' <Predicate = (exitcond1)> <Delay = 1.06>

State 4 <SV = 3> <Delay = 1.33>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_s = zext i14 %tmp to i64" [jacobi-1d-imper.cpp:258]   --->   Operation 98 'zext' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [10000 x double]* %A, i64 0, i64 %tmp_s" [jacobi-1d-imper.cpp:258]   --->   Operation 99 'getelementptr' 'A_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 100 [3/3] (1.33ns)   --->   "%A_load = load double* %A_addr, align 8" [jacobi-1d-imper.cpp:258]   --->   Operation 100 'load' 'A_load' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_3 = zext i14 %i to i64" [jacobi-1d-imper.cpp:258]   --->   Operation 101 'zext' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [10000 x double]* %A, i64 0, i64 %tmp_3" [jacobi-1d-imper.cpp:258]   --->   Operation 102 'getelementptr' 'A_addr_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 103 [3/3] (1.33ns)   --->   "%A_load_1 = load double* %A_addr_1, align 8" [jacobi-1d-imper.cpp:258]   --->   Operation 103 'load' 'A_load_1' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>

State 5 <SV = 4> <Delay = 1.33>
ST_5 : Operation 104 [2/3] (1.33ns)   --->   "%A_load = load double* %A_addr, align 8" [jacobi-1d-imper.cpp:258]   --->   Operation 104 'load' 'A_load' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>
ST_5 : Operation 105 [2/3] (1.33ns)   --->   "%A_load_1 = load double* %A_addr_1, align 8" [jacobi-1d-imper.cpp:258]   --->   Operation 105 'load' 'A_load_1' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>

State 6 <SV = 5> <Delay = 1.33>
ST_6 : Operation 106 [1/3] (1.33ns)   --->   "%A_load = load double* %A_addr, align 8" [jacobi-1d-imper.cpp:258]   --->   Operation 106 'load' 'A_load' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>
ST_6 : Operation 107 [1/3] (1.33ns)   --->   "%A_load_1 = load double* %A_addr_1, align 8" [jacobi-1d-imper.cpp:258]   --->   Operation 107 'load' 'A_load_1' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>

State 7 <SV = 6> <Delay = 2.12>
ST_7 : Operation 108 [14/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 108 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 2.12>
ST_8 : Operation 109 [13/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 109 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 2.12>
ST_9 : Operation 110 [12/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 110 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 2.12>
ST_10 : Operation 111 [11/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 111 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 2.12>
ST_11 : Operation 112 [10/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 112 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 2.12>
ST_12 : Operation 113 [9/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 113 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 2.12>
ST_13 : Operation 114 [8/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 114 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 2.12>
ST_14 : Operation 115 [7/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 115 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 2.12>
ST_15 : Operation 116 [6/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 116 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 2.12>
ST_16 : Operation 117 [5/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 117 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 2.12>
ST_17 : Operation 118 [4/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 118 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 119 [1/1] (1.46ns)   --->   "%i_1 = add i14 1, %i" [jacobi-1d-imper.cpp:258]   --->   Operation 119 'add' 'i_1' <Predicate = true> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.46> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 2.12>
ST_18 : Operation 120 [3/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 120 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_5 = zext i14 %i_1 to i64" [jacobi-1d-imper.cpp:258]   --->   Operation 121 'zext' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 122 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [10000 x double]* %A, i64 0, i64 %tmp_5" [jacobi-1d-imper.cpp:258]   --->   Operation 122 'getelementptr' 'A_addr_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 123 [3/3] (1.33ns)   --->   "%A_load_2 = load double* %A_addr_2, align 8" [jacobi-1d-imper.cpp:258]   --->   Operation 123 'load' 'A_load_2' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>

State 19 <SV = 18> <Delay = 2.12>
ST_19 : Operation 124 [2/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 124 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 125 [2/3] (1.33ns)   --->   "%A_load_2 = load double* %A_addr_2, align 8" [jacobi-1d-imper.cpp:258]   --->   Operation 125 'load' 'A_load_2' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>

State 20 <SV = 19> <Delay = 2.12>
ST_20 : Operation 126 [1/14] (2.12ns)   --->   "%tmp_4 = fadd double %A_load, %A_load_1" [jacobi-1d-imper.cpp:258]   --->   Operation 126 'dadd' 'tmp_4' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 127 [1/3] (1.33ns)   --->   "%A_load_2 = load double* %A_addr_2, align 8" [jacobi-1d-imper.cpp:258]   --->   Operation 127 'load' 'A_load_2' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>

State 21 <SV = 20> <Delay = 2.12>
ST_21 : Operation 128 [14/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 128 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 2.12>
ST_22 : Operation 129 [13/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 129 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 2.12>
ST_23 : Operation 130 [12/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 130 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 2.12>
ST_24 : Operation 131 [11/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 131 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 2.12>
ST_25 : Operation 132 [10/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 132 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 2.12>
ST_26 : Operation 133 [9/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 133 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 2.12>
ST_27 : Operation 134 [8/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 134 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 2.12>
ST_28 : Operation 135 [7/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 135 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 2.12>
ST_29 : Operation 136 [6/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 136 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 2.12>
ST_30 : Operation 137 [5/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 137 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 2.12>
ST_31 : Operation 138 [4/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 138 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 2.12>
ST_32 : Operation 139 [3/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 139 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 2.12>
ST_33 : Operation 140 [2/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 140 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 2.12>
ST_34 : Operation 141 [1/14] (2.12ns)   --->   "%in_assign = fadd double %tmp_4, %A_load_2" [jacobi-1d-imper.cpp:258]   --->   Operation 141 'dadd' 'in_assign' <Predicate = true> <Delay = 2.12> <Core = "DAddSub_nodsp">   --->   Core 139 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 34> <Delay = 1.98>
ST_35 : Operation 142 [1/1] (0.00ns)   --->   "%p_Val2_s = bitcast double %in_assign to i64" [jacobi-1d-imper.cpp:47->jacobi-1d-imper.cpp:164->jacobi-1d-imper.cpp:258]   --->   Operation 142 'bitcast' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 143 [1/1] (0.00ns)   --->   "%p_Repl2_2 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_s, i32 63)" [jacobi-1d-imper.cpp:48->jacobi-1d-imper.cpp:164->jacobi-1d-imper.cpp:258]   --->   Operation 143 'bitselect' 'p_Repl2_2' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 144 [1/1] (0.00ns)   --->   "%new_exp_V_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_s, i32 52, i32 62) nounwind" [jacobi-1d-imper.cpp:49->jacobi-1d-imper.cpp:164->jacobi-1d-imper.cpp:258]   --->   Operation 144 'partselect' 'new_exp_V_1' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 145 [1/1] (0.00ns)   --->   "%new_mant_V_1 = trunc i64 %p_Val2_s to i52" [jacobi-1d-imper.cpp:50->jacobi-1d-imper.cpp:164->jacobi-1d-imper.cpp:258]   --->   Operation 145 'trunc' 'new_mant_V_1' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 146 [1/1] (0.00ns)   --->   "%tmp_6 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_s, i32 51)" [jacobi-1d-imper.cpp:170->jacobi-1d-imper.cpp:258]   --->   Operation 146 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 147 [1/1] (0.65ns)   --->   "%shift_V_i_cast_cast = select i1 %tmp_6, i11 1, i11 2" [jacobi-1d-imper.cpp:170->jacobi-1d-imper.cpp:258]   --->   Operation 147 'select' 'shift_V_i_cast_cast' <Predicate = true> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_35 : Operation 148 [1/1] (1.32ns)   --->   "%tmp_3_i = icmp eq i11 %new_exp_V_1, 0" [jacobi-1d-imper.cpp:176->jacobi-1d-imper.cpp:258]   --->   Operation 148 'icmp' 'tmp_3_i' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 149 [1/1] (1.32ns)   --->   "%tmp_4_i = icmp ult i11 %shift_V_i_cast_cast, %new_exp_V_1" [jacobi-1d-imper.cpp:179->jacobi-1d-imper.cpp:258]   --->   Operation 149 'icmp' 'tmp_4_i' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 150 [1/1] (0.00ns)   --->   "%tmp_7 = call i10 @_ssdm_op_PartSelect.i10.i64.i32.i32(i64 %p_Val2_s, i32 53, i32 62)" [jacobi-1d-imper.cpp:180->jacobi-1d-imper.cpp:258]   --->   Operation 150 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 151 [1/1] (1.29ns)   --->   "%icmp = icmp eq i10 %tmp_7, 0" [jacobi-1d-imper.cpp:180->jacobi-1d-imper.cpp:258]   --->   Operation 151 'icmp' 'icmp' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 152 [1/1] (1.42ns)   --->   "%shift_V = sub i11 1, %new_exp_V_1" [jacobi-1d-imper.cpp:181->jacobi-1d-imper.cpp:258]   --->   Operation 152 'sub' 'shift_V' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.46> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 153 [1/1] (1.42ns)   --->   "%shift_V_1 = add i11 -1, %new_exp_V_1" [jacobi-1d-imper.cpp:183->jacobi-1d-imper.cpp:258]   --->   Operation 153 'add' 'shift_V_1' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.46> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 2.06>
ST_36 : Operation 154 [1/1] (1.32ns)   --->   "%tmp_1_i = icmp ugt i11 %shift_V_i_cast_cast, %new_exp_V_1" [jacobi-1d-imper.cpp:172->jacobi-1d-imper.cpp:258]   --->   Operation 154 'icmp' 'tmp_1_i' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 155 [1/1] (1.42ns)   --->   "%new_exp_V = sub i11 %new_exp_V_1, %shift_V_i_cast_cast" [jacobi-1d-imper.cpp:175->jacobi-1d-imper.cpp:258]   --->   Operation 155 'sub' 'new_exp_V' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.46> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp2_demorgan_i = or i1 %tmp_3_i, %tmp_4_i" [jacobi-1d-imper.cpp:176->jacobi-1d-imper.cpp:258]   --->   Operation 156 'or' 'sel_tmp2_demorgan_i' <Predicate = (!tmp_3_i)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp2_i = xor i1 %sel_tmp2_demorgan_i, true" [jacobi-1d-imper.cpp:176->jacobi-1d-imper.cpp:258]   --->   Operation 157 'xor' 'sel_tmp2_i' <Predicate = (!tmp_3_i)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp3_i = and i1 %icmp, %sel_tmp2_i" [jacobi-1d-imper.cpp:180->jacobi-1d-imper.cpp:258]   --->   Operation 158 'and' 'sel_tmp3_i' <Predicate = (!tmp_3_i)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%shift_V_2 = select i1 %sel_tmp3_i, i11 %shift_V, i11 %shift_V_1" [jacobi-1d-imper.cpp:180->jacobi-1d-imper.cpp:258]   --->   Operation 159 'select' 'shift_V_2' <Predicate = (!tmp_3_i)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 160 [1/1] (0.63ns) (out node of the LUT)   --->   "%shift_V_3 = select i1 %tmp_3_i, i11 0, i11 %shift_V_2" [jacobi-1d-imper.cpp:176->jacobi-1d-imper.cpp:258]   --->   Operation 160 'select' 'shift_V_3' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node shift_V_4)   --->   "%sel_tmp6_i = xor i1 %tmp_3_i, true" [jacobi-1d-imper.cpp:176->jacobi-1d-imper.cpp:258]   --->   Operation 161 'xor' 'sel_tmp6_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node shift_V_4)   --->   "%sel_tmp7_i = and i1 %tmp_4_i, %sel_tmp6_i" [jacobi-1d-imper.cpp:179->jacobi-1d-imper.cpp:258]   --->   Operation 162 'and' 'sel_tmp7_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 163 [1/1] (0.63ns) (out node of the LUT)   --->   "%shift_V_4 = select i1 %sel_tmp7_i, i11 %shift_V_i_cast_cast, i11 %shift_V_3" [jacobi-1d-imper.cpp:179->jacobi-1d-imper.cpp:258]   --->   Operation 163 'select' 'shift_V_4' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 164 [1/1] (1.32ns)   --->   "%tmp_2_i = icmp eq i11 %new_exp_V_1, -1" [jacobi-1d-imper.cpp:194->jacobi-1d-imper.cpp:258]   --->   Operation 164 'icmp' 'tmp_2_i' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%p_i = select i1 %tmp_2_i, i11 -1, i11 0" [jacobi-1d-imper.cpp:194->jacobi-1d-imper.cpp:258]   --->   Operation 165 'select' 'p_i' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%tmp_6_i = or i1 %tmp_2_i, %tmp_1_i" [jacobi-1d-imper.cpp:194->jacobi-1d-imper.cpp:258]   --->   Operation 166 'or' 'tmp_6_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 167 [1/1] (0.63ns) (out node of the LUT)   --->   "%p_Repl2_1 = select i1 %tmp_6_i, i11 %p_i, i11 %new_exp_V" [jacobi-1d-imper.cpp:194->jacobi-1d-imper.cpp:258]   --->   Operation 167 'select' 'p_Repl2_1' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 37 <SV = 36> <Delay = 2.29>
ST_37 : Operation 168 [1/1] (0.00ns)   --->   "%xf_V = zext i52 %new_mant_V_1 to i55" [jacobi-1d-imper.cpp:169->jacobi-1d-imper.cpp:258]   --->   Operation 168 'zext' 'xf_V' <Predicate = (!icmp)> <Delay = 0.00>
ST_37 : Operation 169 [1/1] (0.00ns)   --->   "%tmp_9_i = zext i11 %shift_V_4 to i55" [jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258]   --->   Operation 169 'zext' 'tmp_9_i' <Predicate = (!icmp)> <Delay = 0.00>
ST_37 : Operation 170 [1/1] (0.00ns)   --->   "%tmp_9_i_cast = zext i11 %shift_V_4 to i52" [jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258]   --->   Operation 170 'zext' 'tmp_9_i_cast' <Predicate = (icmp)> <Delay = 0.00>
ST_37 : Operation 171 [7/7] (2.29ns)   --->   "%r_V_15 = lshr i52 %new_mant_V_1, %tmp_9_i_cast" [jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258]   --->   Operation 171 'lshr' 'r_V_15' <Predicate = (icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 172 [7/7] (2.29ns)   --->   "%r_V_16 = shl i55 %xf_V, %tmp_9_i" [jacobi-1d-imper.cpp:189->jacobi-1d-imper.cpp:258]   --->   Operation 172 'shl' 'r_V_16' <Predicate = (!icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 37> <Delay = 2.29>
ST_38 : Operation 173 [6/7] (2.29ns)   --->   "%r_V_15 = lshr i52 %new_mant_V_1, %tmp_9_i_cast" [jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258]   --->   Operation 173 'lshr' 'r_V_15' <Predicate = (icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 174 [6/7] (2.29ns)   --->   "%r_V_16 = shl i55 %xf_V, %tmp_9_i" [jacobi-1d-imper.cpp:189->jacobi-1d-imper.cpp:258]   --->   Operation 174 'shl' 'r_V_16' <Predicate = (!icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 38> <Delay = 2.29>
ST_39 : Operation 175 [5/7] (2.29ns)   --->   "%r_V_15 = lshr i52 %new_mant_V_1, %tmp_9_i_cast" [jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258]   --->   Operation 175 'lshr' 'r_V_15' <Predicate = (icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 176 [5/7] (2.29ns)   --->   "%r_V_16 = shl i55 %xf_V, %tmp_9_i" [jacobi-1d-imper.cpp:189->jacobi-1d-imper.cpp:258]   --->   Operation 176 'shl' 'r_V_16' <Predicate = (!icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 39> <Delay = 2.29>
ST_40 : Operation 177 [4/7] (2.29ns)   --->   "%r_V_15 = lshr i52 %new_mant_V_1, %tmp_9_i_cast" [jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258]   --->   Operation 177 'lshr' 'r_V_15' <Predicate = (icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 178 [4/7] (2.29ns)   --->   "%r_V_16 = shl i55 %xf_V, %tmp_9_i" [jacobi-1d-imper.cpp:189->jacobi-1d-imper.cpp:258]   --->   Operation 178 'shl' 'r_V_16' <Predicate = (!icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 40> <Delay = 2.29>
ST_41 : Operation 179 [3/7] (2.29ns)   --->   "%r_V_15 = lshr i52 %new_mant_V_1, %tmp_9_i_cast" [jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258]   --->   Operation 179 'lshr' 'r_V_15' <Predicate = (icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 180 [3/7] (2.29ns)   --->   "%r_V_16 = shl i55 %xf_V, %tmp_9_i" [jacobi-1d-imper.cpp:189->jacobi-1d-imper.cpp:258]   --->   Operation 180 'shl' 'r_V_16' <Predicate = (!icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 41> <Delay = 2.29>
ST_42 : Operation 181 [2/7] (2.29ns)   --->   "%r_V_15 = lshr i52 %new_mant_V_1, %tmp_9_i_cast" [jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258]   --->   Operation 181 'lshr' 'r_V_15' <Predicate = (icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 182 [2/7] (2.29ns)   --->   "%r_V_16 = shl i55 %xf_V, %tmp_9_i" [jacobi-1d-imper.cpp:189->jacobi-1d-imper.cpp:258]   --->   Operation 182 'shl' 'r_V_16' <Predicate = (!icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 42> <Delay = 2.29>
ST_43 : Operation 183 [1/7] (2.29ns)   --->   "%r_V_15 = lshr i52 %new_mant_V_1, %tmp_9_i_cast" [jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258]   --->   Operation 183 'lshr' 'r_V_15' <Predicate = (icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 184 [1/7] (2.29ns)   --->   "%r_V_16 = shl i55 %xf_V, %tmp_9_i" [jacobi-1d-imper.cpp:189->jacobi-1d-imper.cpp:258]   --->   Operation 184 'shl' 'r_V_16' <Predicate = (!icmp)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 43> <Delay = 0.68>
ST_44 : Operation 185 [1/1] (0.00ns)   --->   "%r_V_13_i_cast = zext i52 %r_V_15 to i55" [jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258]   --->   Operation 185 'zext' 'r_V_13_i_cast' <Predicate = (icmp)> <Delay = 0.00>
ST_44 : Operation 186 [1/1] (0.68ns)   --->   "%xf_V_7 = select i1 %icmp, i55 %r_V_13_i_cast, i55 %r_V_16" [jacobi-1d-imper.cpp:186->jacobi-1d-imper.cpp:258]   --->   Operation 186 'select' 'xf_V_7' <Predicate = true> <Delay = 0.68> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 45 <SV = 44> <Delay = 1.87>
ST_45 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node xf_V_8)   --->   "%p_Result_s = call i55 @_ssdm_op_BitSet.i55.i55.i32.i1(i55 %xf_V_7, i32 52, i1 true)" [jacobi-1d-imper.cpp:191->jacobi-1d-imper.cpp:258]   --->   Operation 187 'bitset' 'p_Result_s' <Predicate = (!tmp_3_i)> <Delay = 0.00>
ST_45 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node xf_V_8)   --->   "%xf_V_5 = select i1 %tmp_3_i, i55 %xf_V_7, i55 %p_Result_s" [jacobi-1d-imper.cpp:176->jacobi-1d-imper.cpp:258]   --->   Operation 188 'select' 'xf_V_5' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_45 : Operation 189 [1/1] (1.87ns) (out node of the LUT)   --->   "%xf_V_8 = add i55 1, %xf_V_5" [jacobi-1d-imper.cpp:192->jacobi-1d-imper.cpp:258]   --->   Operation 189 'add' 'xf_V_8' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.46> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 190 [1/1] (0.00ns)   --->   "%p_Result_i_i_i = call i3 @_ssdm_op_PartSelect.i3.i55.i32.i32(i55 %xf_V_8, i32 52, i32 54) nounwind" [jacobi-1d-imper.cpp:81->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 190 'partselect' 'p_Result_i_i_i' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 191 [1/1] (0.00ns)   --->   "%d_chunk_V_1 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 48, i32 51) nounwind" [jacobi-1d-imper.cpp:84->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 191 'partselect' 'd_chunk_V_1' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 192 [1/1] (0.00ns)   --->   "%d_chunk_V_2 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 44, i32 47) nounwind" [jacobi-1d-imper.cpp:87->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 192 'partselect' 'd_chunk_V_2' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 193 [1/1] (0.00ns)   --->   "%d_chunk_V_3 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 40, i32 43) nounwind" [jacobi-1d-imper.cpp:90->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 193 'partselect' 'd_chunk_V_3' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 194 [1/1] (0.00ns)   --->   "%d_chunk_V_4 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 36, i32 39) nounwind" [jacobi-1d-imper.cpp:93->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 194 'partselect' 'd_chunk_V_4' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 195 [1/1] (0.00ns)   --->   "%d_chunk_V_5 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 32, i32 35) nounwind" [jacobi-1d-imper.cpp:96->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 195 'partselect' 'd_chunk_V_5' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 196 [1/1] (0.00ns)   --->   "%d_chunk_V_6 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 28, i32 31) nounwind" [jacobi-1d-imper.cpp:99->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 196 'partselect' 'd_chunk_V_6' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 197 [1/1] (0.00ns)   --->   "%d_chunk_V_7 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 24, i32 27) nounwind" [jacobi-1d-imper.cpp:102->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 197 'partselect' 'd_chunk_V_7' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 198 [1/1] (0.00ns)   --->   "%d_chunk_V_8 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 20, i32 23) nounwind" [jacobi-1d-imper.cpp:105->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 198 'partselect' 'd_chunk_V_8' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 199 [1/1] (0.00ns)   --->   "%d_chunk_V_9 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 16, i32 19) nounwind" [jacobi-1d-imper.cpp:108->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 199 'partselect' 'd_chunk_V_9' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 200 [1/1] (0.00ns)   --->   "%d_chunk_V_10 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 12, i32 15) nounwind" [jacobi-1d-imper.cpp:111->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 200 'partselect' 'd_chunk_V_10' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 201 [1/1] (0.00ns)   --->   "%d_chunk_V_11 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 8, i32 11) nounwind" [jacobi-1d-imper.cpp:114->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 201 'partselect' 'd_chunk_V_11' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 202 [1/1] (0.00ns)   --->   "%d_chunk_V_12 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V_8, i32 4, i32 7) nounwind" [jacobi-1d-imper.cpp:117->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 202 'partselect' 'd_chunk_V_12' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 203 [1/1] (0.00ns)   --->   "%d_chunk_V_13 = trunc i55 %xf_V_8 to i4" [jacobi-1d-imper.cpp:120->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 203 'trunc' 'd_chunk_V_13' <Predicate = true> <Delay = 0.00>

State 46 <SV = 45> <Delay = 1.54>
ST_46 : Operation 204 [1/1] (0.00ns)   --->   "%d_chunk_V = zext i3 %p_Result_i_i_i to i4" [jacobi-1d-imper.cpp:81->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 204 'zext' 'd_chunk_V' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 205 [2/2] (1.54ns)   --->   "%call_ret1_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V, i2 0) nounwind" [jacobi-1d-imper.cpp:82->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 205 'call' 'call_ret1_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 47 <SV = 46> <Delay = 1.33>
ST_47 : Operation 206 [1/2] (1.33ns)   --->   "%call_ret1_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V, i2 0) nounwind" [jacobi-1d-imper.cpp:82->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 206 'call' 'call_ret1_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_47 : Operation 207 [1/1] (0.00ns)   --->   "%r_V = extractvalue { i4, i2 } %call_ret1_i_i_i, 1" [jacobi-1d-imper.cpp:82->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 207 'extractvalue' 'r_V' <Predicate = true> <Delay = 0.00>

State 48 <SV = 47> <Delay = 1.54>
ST_48 : Operation 208 [2/2] (1.54ns)   --->   "%call_ret2_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_1, i2 %r_V) nounwind" [jacobi-1d-imper.cpp:85->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 208 'call' 'call_ret2_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 49 <SV = 48> <Delay = 1.33>
ST_49 : Operation 209 [1/2] (1.33ns)   --->   "%call_ret2_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_1, i2 %r_V) nounwind" [jacobi-1d-imper.cpp:85->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 209 'call' 'call_ret2_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_49 : Operation 210 [1/1] (0.00ns)   --->   "%r_V_1 = extractvalue { i4, i2 } %call_ret2_i_i_i, 1" [jacobi-1d-imper.cpp:85->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 210 'extractvalue' 'r_V_1' <Predicate = true> <Delay = 0.00>

State 50 <SV = 49> <Delay = 1.54>
ST_50 : Operation 211 [2/2] (1.54ns)   --->   "%call_ret3_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_2, i2 %r_V_1) nounwind" [jacobi-1d-imper.cpp:88->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 211 'call' 'call_ret3_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 51 <SV = 50> <Delay = 1.33>
ST_51 : Operation 212 [1/2] (1.33ns)   --->   "%call_ret3_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_2, i2 %r_V_1) nounwind" [jacobi-1d-imper.cpp:88->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 212 'call' 'call_ret3_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_51 : Operation 213 [1/1] (0.00ns)   --->   "%r_V_2 = extractvalue { i4, i2 } %call_ret3_i_i_i, 1" [jacobi-1d-imper.cpp:88->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 213 'extractvalue' 'r_V_2' <Predicate = true> <Delay = 0.00>

State 52 <SV = 51> <Delay = 1.54>
ST_52 : Operation 214 [2/2] (1.54ns)   --->   "%call_ret4_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_3, i2 %r_V_2) nounwind" [jacobi-1d-imper.cpp:91->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 214 'call' 'call_ret4_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 53 <SV = 52> <Delay = 1.33>
ST_53 : Operation 215 [1/2] (1.33ns)   --->   "%call_ret4_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_3, i2 %r_V_2) nounwind" [jacobi-1d-imper.cpp:91->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 215 'call' 'call_ret4_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_53 : Operation 216 [1/1] (0.00ns)   --->   "%r_V_3 = extractvalue { i4, i2 } %call_ret4_i_i_i, 1" [jacobi-1d-imper.cpp:91->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 216 'extractvalue' 'r_V_3' <Predicate = true> <Delay = 0.00>

State 54 <SV = 53> <Delay = 1.54>
ST_54 : Operation 217 [2/2] (1.54ns)   --->   "%call_ret5_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_4, i2 %r_V_3) nounwind" [jacobi-1d-imper.cpp:94->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 217 'call' 'call_ret5_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 55 <SV = 54> <Delay = 1.33>
ST_55 : Operation 218 [1/2] (1.33ns)   --->   "%call_ret5_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_4, i2 %r_V_3) nounwind" [jacobi-1d-imper.cpp:94->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 218 'call' 'call_ret5_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_55 : Operation 219 [1/1] (0.00ns)   --->   "%r_V_4 = extractvalue { i4, i2 } %call_ret5_i_i_i, 1" [jacobi-1d-imper.cpp:94->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 219 'extractvalue' 'r_V_4' <Predicate = true> <Delay = 0.00>

State 56 <SV = 55> <Delay = 1.54>
ST_56 : Operation 220 [2/2] (1.54ns)   --->   "%call_ret6_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_5, i2 %r_V_4) nounwind" [jacobi-1d-imper.cpp:97->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 220 'call' 'call_ret6_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 57 <SV = 56> <Delay = 1.33>
ST_57 : Operation 221 [1/2] (1.33ns)   --->   "%call_ret6_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_5, i2 %r_V_4) nounwind" [jacobi-1d-imper.cpp:97->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 221 'call' 'call_ret6_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_57 : Operation 222 [1/1] (0.00ns)   --->   "%r_V_5 = extractvalue { i4, i2 } %call_ret6_i_i_i, 1" [jacobi-1d-imper.cpp:97->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 222 'extractvalue' 'r_V_5' <Predicate = true> <Delay = 0.00>

State 58 <SV = 57> <Delay = 1.54>
ST_58 : Operation 223 [2/2] (1.54ns)   --->   "%call_ret7_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_6, i2 %r_V_5) nounwind" [jacobi-1d-imper.cpp:100->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 223 'call' 'call_ret7_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 59 <SV = 58> <Delay = 1.33>
ST_59 : Operation 224 [1/2] (1.33ns)   --->   "%call_ret7_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_6, i2 %r_V_5) nounwind" [jacobi-1d-imper.cpp:100->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 224 'call' 'call_ret7_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_59 : Operation 225 [1/1] (0.00ns)   --->   "%r_V_6 = extractvalue { i4, i2 } %call_ret7_i_i_i, 1" [jacobi-1d-imper.cpp:100->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 225 'extractvalue' 'r_V_6' <Predicate = true> <Delay = 0.00>

State 60 <SV = 59> <Delay = 1.54>
ST_60 : Operation 226 [2/2] (1.54ns)   --->   "%call_ret8_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_7, i2 %r_V_6) nounwind" [jacobi-1d-imper.cpp:103->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 226 'call' 'call_ret8_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 61 <SV = 60> <Delay = 1.33>
ST_61 : Operation 227 [1/2] (1.33ns)   --->   "%call_ret8_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_7, i2 %r_V_6) nounwind" [jacobi-1d-imper.cpp:103->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 227 'call' 'call_ret8_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_61 : Operation 228 [1/1] (0.00ns)   --->   "%r_V_7 = extractvalue { i4, i2 } %call_ret8_i_i_i, 1" [jacobi-1d-imper.cpp:103->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 228 'extractvalue' 'r_V_7' <Predicate = true> <Delay = 0.00>

State 62 <SV = 61> <Delay = 1.54>
ST_62 : Operation 229 [2/2] (1.54ns)   --->   "%call_ret9_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_8, i2 %r_V_7) nounwind" [jacobi-1d-imper.cpp:106->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 229 'call' 'call_ret9_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 63 <SV = 62> <Delay = 1.33>
ST_63 : Operation 230 [1/2] (1.33ns)   --->   "%call_ret9_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_8, i2 %r_V_7) nounwind" [jacobi-1d-imper.cpp:106->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 230 'call' 'call_ret9_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_63 : Operation 231 [1/1] (0.00ns)   --->   "%r_V_8 = extractvalue { i4, i2 } %call_ret9_i_i_i, 1" [jacobi-1d-imper.cpp:106->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 231 'extractvalue' 'r_V_8' <Predicate = true> <Delay = 0.00>

State 64 <SV = 63> <Delay = 1.54>
ST_64 : Operation 232 [2/2] (1.54ns)   --->   "%call_ret10_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_9, i2 %r_V_8) nounwind" [jacobi-1d-imper.cpp:109->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 232 'call' 'call_ret10_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 65 <SV = 64> <Delay = 1.33>
ST_65 : Operation 233 [1/2] (1.33ns)   --->   "%call_ret10_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_9, i2 %r_V_8) nounwind" [jacobi-1d-imper.cpp:109->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 233 'call' 'call_ret10_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_65 : Operation 234 [1/1] (0.00ns)   --->   "%r_V_9 = extractvalue { i4, i2 } %call_ret10_i_i_i, 1" [jacobi-1d-imper.cpp:109->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 234 'extractvalue' 'r_V_9' <Predicate = true> <Delay = 0.00>

State 66 <SV = 65> <Delay = 1.54>
ST_66 : Operation 235 [2/2] (1.54ns)   --->   "%call_ret11_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_10, i2 %r_V_9) nounwind" [jacobi-1d-imper.cpp:112->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 235 'call' 'call_ret11_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 67 <SV = 66> <Delay = 1.33>
ST_67 : Operation 236 [1/2] (1.33ns)   --->   "%call_ret11_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_10, i2 %r_V_9) nounwind" [jacobi-1d-imper.cpp:112->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 236 'call' 'call_ret11_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_67 : Operation 237 [1/1] (0.00ns)   --->   "%r_V_12 = extractvalue { i4, i2 } %call_ret11_i_i_i, 1" [jacobi-1d-imper.cpp:112->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 237 'extractvalue' 'r_V_12' <Predicate = true> <Delay = 0.00>

State 68 <SV = 67> <Delay = 1.54>
ST_68 : Operation 238 [2/2] (1.54ns)   --->   "%call_ret12_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_11, i2 %r_V_12) nounwind" [jacobi-1d-imper.cpp:115->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 238 'call' 'call_ret12_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 69 <SV = 68> <Delay = 1.33>
ST_69 : Operation 239 [1/2] (1.33ns)   --->   "%call_ret12_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_11, i2 %r_V_12) nounwind" [jacobi-1d-imper.cpp:115->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 239 'call' 'call_ret12_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_69 : Operation 240 [1/1] (0.00ns)   --->   "%r_V_13 = extractvalue { i4, i2 } %call_ret12_i_i_i, 1" [jacobi-1d-imper.cpp:115->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 240 'extractvalue' 'r_V_13' <Predicate = true> <Delay = 0.00>

State 70 <SV = 69> <Delay = 1.54>
ST_70 : Operation 241 [2/2] (1.54ns)   --->   "%call_ret13_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_12, i2 %r_V_13) nounwind" [jacobi-1d-imper.cpp:118->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 241 'call' 'call_ret13_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 71 <SV = 70> <Delay = 1.33>
ST_71 : Operation 242 [1/2] (1.33ns)   --->   "%call_ret13_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_12, i2 %r_V_13) nounwind" [jacobi-1d-imper.cpp:118->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 242 'call' 'call_ret13_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_71 : Operation 243 [1/1] (0.00ns)   --->   "%r_V_14 = extractvalue { i4, i2 } %call_ret13_i_i_i, 1" [jacobi-1d-imper.cpp:118->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 243 'extractvalue' 'r_V_14' <Predicate = true> <Delay = 0.00>

State 72 <SV = 71> <Delay = 1.54>
ST_72 : Operation 244 [2/2] (1.54ns)   --->   "%call_ret_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_13, i2 %r_V_14) nounwind" [jacobi-1d-imper.cpp:121->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 244 'call' 'call_ret_i_i_i' <Predicate = true> <Delay = 1.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 73 <SV = 72> <Delay = 2.03>
ST_73 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V = extractvalue { i4, i2 } %call_ret2_i_i_i, 0" [jacobi-1d-imper.cpp:85->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 245 'extractvalue' 'q_chunk_V' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 246 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_1 = extractvalue { i4, i2 } %call_ret3_i_i_i, 0" [jacobi-1d-imper.cpp:88->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 246 'extractvalue' 'q_chunk_V_1' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 247 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_2 = extractvalue { i4, i2 } %call_ret4_i_i_i, 0" [jacobi-1d-imper.cpp:91->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 247 'extractvalue' 'q_chunk_V_2' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 248 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_3 = extractvalue { i4, i2 } %call_ret5_i_i_i, 0" [jacobi-1d-imper.cpp:94->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 248 'extractvalue' 'q_chunk_V_3' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 249 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_4 = extractvalue { i4, i2 } %call_ret6_i_i_i, 0" [jacobi-1d-imper.cpp:97->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 249 'extractvalue' 'q_chunk_V_4' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 250 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_5 = extractvalue { i4, i2 } %call_ret7_i_i_i, 0" [jacobi-1d-imper.cpp:100->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 250 'extractvalue' 'q_chunk_V_5' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 251 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_6 = extractvalue { i4, i2 } %call_ret8_i_i_i, 0" [jacobi-1d-imper.cpp:103->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 251 'extractvalue' 'q_chunk_V_6' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 252 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_7 = extractvalue { i4, i2 } %call_ret9_i_i_i, 0" [jacobi-1d-imper.cpp:106->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 252 'extractvalue' 'q_chunk_V_7' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 253 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_8 = extractvalue { i4, i2 } %call_ret10_i_i_i, 0" [jacobi-1d-imper.cpp:109->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 253 'extractvalue' 'q_chunk_V_8' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 254 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_9 = extractvalue { i4, i2 } %call_ret11_i_i_i, 0" [jacobi-1d-imper.cpp:112->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 254 'extractvalue' 'q_chunk_V_9' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 255 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_10 = extractvalue { i4, i2 } %call_ret12_i_i_i, 0" [jacobi-1d-imper.cpp:115->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 255 'extractvalue' 'q_chunk_V_10' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_11 = extractvalue { i4, i2 } %call_ret13_i_i_i, 0" [jacobi-1d-imper.cpp:118->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 256 'extractvalue' 'q_chunk_V_11' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 257 [1/2] (1.33ns)   --->   "%call_ret_i_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_13, i2 %r_V_14) nounwind" [jacobi-1d-imper.cpp:121->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 257 'call' 'call_ret_i_i_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_73 : Operation 258 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%q_chunk_V_12 = extractvalue { i4, i2 } %call_ret_i_i_i, 0" [jacobi-1d-imper.cpp:121->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 258 'extractvalue' 'q_chunk_V_12' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 259 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%new_mant_V = call i52 @_ssdm_op_BitConcatenate.i52.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i4 %q_chunk_V, i4 %q_chunk_V_1, i4 %q_chunk_V_2, i4 %q_chunk_V_3, i4 %q_chunk_V_4, i4 %q_chunk_V_5, i4 %q_chunk_V_6, i4 %q_chunk_V_7, i4 %q_chunk_V_8, i4 %q_chunk_V_9, i4 %q_chunk_V_10, i4 %q_chunk_V_11, i4 %q_chunk_V_12) nounwind" [jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258]   --->   Operation 259 'bitconcatenate' 'new_mant_V' <Predicate = (!tmp_2_i)> <Delay = 0.00>
ST_73 : Operation 260 [1/1] (0.70ns) (out node of the LUT)   --->   "%p_Repl2_s = select i1 %tmp_2_i, i52 %new_mant_V_1, i52 %new_mant_V" [jacobi-1d-imper.cpp:194->jacobi-1d-imper.cpp:258]   --->   Operation 260 'select' 'p_Repl2_s' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 74 <SV = 73> <Delay = 1.33>
ST_74 : Operation 261 [1/1] (0.00ns)   --->   "%p_Result_4 = call i64 @_ssdm_op_BitConcatenate.i64.i1.i11.i52(i1 %p_Repl2_2, i11 %p_Repl2_1, i52 %p_Repl2_s) nounwind" [jacobi-1d-imper.cpp:147->jacobi-1d-imper.cpp:198->jacobi-1d-imper.cpp:258]   --->   Operation 261 'bitconcatenate' 'p_Result_4' <Predicate = true> <Delay = 0.00>
ST_74 : Operation 262 [1/1] (0.00ns)   --->   "%out = bitcast i64 %p_Result_4 to double" [jacobi-1d-imper.cpp:148->jacobi-1d-imper.cpp:198->jacobi-1d-imper.cpp:258]   --->   Operation 262 'bitcast' 'out' <Predicate = true> <Delay = 0.00>
ST_74 : Operation 263 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [10000 x double]* %B, i64 0, i64 %tmp_3" [jacobi-1d-imper.cpp:258]   --->   Operation 263 'getelementptr' 'B_addr' <Predicate = true> <Delay = 0.00>
ST_74 : Operation 264 [1/1] (1.33ns)   --->   "store double %out, double* %B_addr, align 8" [jacobi-1d-imper.cpp:258]   --->   Operation 264 'store' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>
ST_74 : Operation 265 [1/1] (0.00ns)   --->   "br label %.preheader3" [jacobi-1d-imper.cpp:257]   --->   Operation 265 'br' <Predicate = true> <Delay = 0.00>

State 75 <SV = 3> <Delay = 1.46>
ST_75 : Operation 266 [1/1] (0.00ns)   --->   "%j = phi i14 [ %j_1, %2 ], [ 1, %.preheader.preheader ]"   --->   Operation 266 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_75 : Operation 267 [1/1] (1.42ns)   --->   "%exitcond = icmp eq i14 %j, -6385" [jacobi-1d-imper.cpp:260]   --->   Operation 267 'icmp' 'exitcond' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 268 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9998, i64 9998, i64 9998) nounwind"   --->   Operation 268 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_75 : Operation 269 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %.loopexit.loopexit, label %2" [jacobi-1d-imper.cpp:260]   --->   Operation 269 'br' <Predicate = true> <Delay = 0.00>
ST_75 : Operation 270 [1/1] (0.00ns)   --->   "%tmp_8 = zext i14 %j to i64" [jacobi-1d-imper.cpp:261]   --->   Operation 270 'zext' 'tmp_8' <Predicate = (!exitcond)> <Delay = 0.00>
ST_75 : Operation 271 [1/1] (0.00ns)   --->   "%B_addr_1 = getelementptr [10000 x double]* %B, i64 0, i64 %tmp_8" [jacobi-1d-imper.cpp:261]   --->   Operation 271 'getelementptr' 'B_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_75 : Operation 272 [3/3] (1.33ns)   --->   "%B_load = load double* %B_addr_1, align 8" [jacobi-1d-imper.cpp:261]   --->   Operation 272 'load' 'B_load' <Predicate = (!exitcond)> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>
ST_75 : Operation 273 [1/1] (1.46ns)   --->   "%j_1 = add i14 %j, 1" [jacobi-1d-imper.cpp:260]   --->   Operation 273 'add' 'j_1' <Predicate = (!exitcond)> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.46> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 274 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 274 'br' <Predicate = (exitcond)> <Delay = 0.00>

State 76 <SV = 4> <Delay = 1.33>
ST_76 : Operation 275 [2/3] (1.33ns)   --->   "%B_load = load double* %B_addr_1, align 8" [jacobi-1d-imper.cpp:261]   --->   Operation 275 'load' 'B_load' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>

State 77 <SV = 5> <Delay = 1.33>
ST_77 : Operation 276 [1/3] (1.33ns)   --->   "%B_load = load double* %B_addr_1, align 8" [jacobi-1d-imper.cpp:261]   --->   Operation 276 'load' 'B_load' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>

State 78 <SV = 6> <Delay = 1.33>
ST_78 : Operation 277 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [10000 x double]* %A, i64 0, i64 %tmp_8" [jacobi-1d-imper.cpp:261]   --->   Operation 277 'getelementptr' 'A_addr_3' <Predicate = true> <Delay = 0.00>
ST_78 : Operation 278 [1/1] (1.33ns)   --->   "store double %B_load, double* %A_addr_3, align 8" [jacobi-1d-imper.cpp:261]   --->   Operation 278 'store' <Predicate = true> <Delay = 1.33> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 2> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10000> <RAM>
ST_78 : Operation 279 [1/1] (0.00ns)   --->   "br label %.preheader" [jacobi-1d-imper.cpp:260]   --->   Operation 279 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 2.5ns, clock uncertainty: 0.312ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('t') with incoming values : ('t', jacobi-1d-imper.cpp:254) [18]  (1.06 ns)

 <State 2>: 1.37ns
The critical path consists of the following:
	'phi' operation ('t') with incoming values : ('t', jacobi-1d-imper.cpp:254) [18]  (0 ns)
	'add' operation ('t', jacobi-1d-imper.cpp:254) [21]  (1.37 ns)

 <State 3>: 1.46ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', jacobi-1d-imper.cpp:258) [26]  (0 ns)
	'add' operation ('tmp', jacobi-1d-imper.cpp:258) [31]  (1.46 ns)

 <State 4>: 1.33ns
The critical path consists of the following:
	'getelementptr' operation ('A_addr', jacobi-1d-imper.cpp:258) [33]  (0 ns)
	'load' operation ('A_load', jacobi-1d-imper.cpp:258) on array 'A' [34]  (1.33 ns)

 <State 5>: 1.33ns
The critical path consists of the following:
	'load' operation ('A_load', jacobi-1d-imper.cpp:258) on array 'A' [34]  (1.33 ns)

 <State 6>: 1.33ns
The critical path consists of the following:
	'load' operation ('A_load', jacobi-1d-imper.cpp:258) on array 'A' [34]  (1.33 ns)

 <State 7>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 8>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 9>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 10>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 11>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 12>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 13>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 14>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 15>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 16>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 17>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 18>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 19>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 20>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('tmp_4', jacobi-1d-imper.cpp:258) [38]  (2.12 ns)

 <State 21>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 22>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 23>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 24>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 25>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 26>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 27>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 28>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 29>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 30>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 31>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 32>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 33>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 34>: 2.12ns
The critical path consists of the following:
	'dadd' operation ('in', jacobi-1d-imper.cpp:258) [43]  (2.12 ns)

 <State 35>: 1.98ns
The critical path consists of the following:
	'select' operation ('shift_V_i_cast_cast', jacobi-1d-imper.cpp:170->jacobi-1d-imper.cpp:258) [50]  (0.654 ns)
	'icmp' operation ('tmp_4_i', jacobi-1d-imper.cpp:179->jacobi-1d-imper.cpp:258) [54]  (1.33 ns)

 <State 36>: 2.06ns
The critical path consists of the following:
	'sub' operation ('new_exp.V', jacobi-1d-imper.cpp:175->jacobi-1d-imper.cpp:258) [52]  (1.43 ns)
	'select' operation ('__Repl2__', jacobi-1d-imper.cpp:194->jacobi-1d-imper.cpp:258) [135]  (0.633 ns)

 <State 37>: 2.29ns
The critical path consists of the following:
	'shl' operation ('r.V', jacobi-1d-imper.cpp:189->jacobi-1d-imper.cpp:258) [71]  (2.29 ns)

 <State 38>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258) [69]  (2.29 ns)

 <State 39>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258) [69]  (2.29 ns)

 <State 40>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258) [69]  (2.29 ns)

 <State 41>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258) [69]  (2.29 ns)

 <State 42>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258) [69]  (2.29 ns)

 <State 43>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', jacobi-1d-imper.cpp:187->jacobi-1d-imper.cpp:258) [69]  (2.29 ns)

 <State 44>: 0.69ns
The critical path consists of the following:
	'select' operation ('xf.V', jacobi-1d-imper.cpp:186->jacobi-1d-imper.cpp:258) [72]  (0.69 ns)

 <State 45>: 1.87ns
The critical path consists of the following:
	'select' operation ('xf.V', jacobi-1d-imper.cpp:176->jacobi-1d-imper.cpp:258) [74]  (0 ns)
	'add' operation ('xf.V', jacobi-1d-imper.cpp:192->jacobi-1d-imper.cpp:258) [75]  (1.87 ns)

 <State 46>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret1_i_i_i', jacobi-1d-imper.cpp:82->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [78]  (1.54 ns)

 <State 47>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret1_i_i_i', jacobi-1d-imper.cpp:82->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [78]  (1.33 ns)

 <State 48>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret2_i_i_i', jacobi-1d-imper.cpp:85->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [81]  (1.54 ns)

 <State 49>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret2_i_i_i', jacobi-1d-imper.cpp:85->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [81]  (1.33 ns)

 <State 50>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret3_i_i_i', jacobi-1d-imper.cpp:88->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [85]  (1.54 ns)

 <State 51>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret3_i_i_i', jacobi-1d-imper.cpp:88->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [85]  (1.33 ns)

 <State 52>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret4_i_i_i', jacobi-1d-imper.cpp:91->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [89]  (1.54 ns)

 <State 53>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret4_i_i_i', jacobi-1d-imper.cpp:91->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [89]  (1.33 ns)

 <State 54>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret5_i_i_i', jacobi-1d-imper.cpp:94->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [93]  (1.54 ns)

 <State 55>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret5_i_i_i', jacobi-1d-imper.cpp:94->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [93]  (1.33 ns)

 <State 56>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret6_i_i_i', jacobi-1d-imper.cpp:97->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [97]  (1.54 ns)

 <State 57>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret6_i_i_i', jacobi-1d-imper.cpp:97->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [97]  (1.33 ns)

 <State 58>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret7_i_i_i', jacobi-1d-imper.cpp:100->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [101]  (1.54 ns)

 <State 59>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret7_i_i_i', jacobi-1d-imper.cpp:100->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [101]  (1.33 ns)

 <State 60>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret8_i_i_i', jacobi-1d-imper.cpp:103->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [105]  (1.54 ns)

 <State 61>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret8_i_i_i', jacobi-1d-imper.cpp:103->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [105]  (1.33 ns)

 <State 62>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret9_i_i_i', jacobi-1d-imper.cpp:106->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [109]  (1.54 ns)

 <State 63>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret9_i_i_i', jacobi-1d-imper.cpp:106->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [109]  (1.33 ns)

 <State 64>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret10_i_i_i', jacobi-1d-imper.cpp:109->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [113]  (1.54 ns)

 <State 65>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret10_i_i_i', jacobi-1d-imper.cpp:109->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [113]  (1.33 ns)

 <State 66>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret11_i_i_i', jacobi-1d-imper.cpp:112->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [117]  (1.54 ns)

 <State 67>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret11_i_i_i', jacobi-1d-imper.cpp:112->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [117]  (1.33 ns)

 <State 68>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret12_i_i_i', jacobi-1d-imper.cpp:115->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [121]  (1.54 ns)

 <State 69>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret12_i_i_i', jacobi-1d-imper.cpp:115->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [121]  (1.33 ns)

 <State 70>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret13_i_i_i', jacobi-1d-imper.cpp:118->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [125]  (1.54 ns)

 <State 71>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret13_i_i_i', jacobi-1d-imper.cpp:118->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [125]  (1.33 ns)

 <State 72>: 1.54ns
The critical path consists of the following:
	'call' operation ('call_ret_i_i_i', jacobi-1d-imper.cpp:121->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [129]  (1.54 ns)

 <State 73>: 2.04ns
The critical path consists of the following:
	'call' operation ('call_ret_i_i_i', jacobi-1d-imper.cpp:121->jacobi-1d-imper.cpp:127->jacobi-1d-imper.cpp:193->jacobi-1d-imper.cpp:258) to 'lut_div3_chunk' [129]  (1.33 ns)
	'select' operation ('__Repl2__', jacobi-1d-imper.cpp:194->jacobi-1d-imper.cpp:258) [136]  (0.708 ns)

 <State 74>: 1.33ns
The critical path consists of the following:
	'store' operation (jacobi-1d-imper.cpp:258) of variable 'out', jacobi-1d-imper.cpp:148->jacobi-1d-imper.cpp:198->jacobi-1d-imper.cpp:258 on array 'B' [140]  (1.33 ns)

 <State 75>: 1.46ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', jacobi-1d-imper.cpp:260) [145]  (0 ns)
	'add' operation ('j', jacobi-1d-imper.cpp:260) [155]  (1.46 ns)

 <State 76>: 1.33ns
The critical path consists of the following:
	'load' operation ('B_load', jacobi-1d-imper.cpp:261) on array 'B' [152]  (1.33 ns)

 <State 77>: 1.33ns
The critical path consists of the following:
	'load' operation ('B_load', jacobi-1d-imper.cpp:261) on array 'B' [152]  (1.33 ns)

 <State 78>: 1.33ns
The critical path consists of the following:
	'getelementptr' operation ('A_addr_3', jacobi-1d-imper.cpp:261) [153]  (0 ns)
	'store' operation (jacobi-1d-imper.cpp:261) of variable 'B_load', jacobi-1d-imper.cpp:261 on array 'A' [154]  (1.33 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
