

================================================================
== Vivado HLS Report for 'operator_double_div3'
================================================================
* Date:           Tue Aug  7 14:03:57 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        fir_prj
* Solution:       classique
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.063|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    7|    1|    7|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (!tmp_1)
	8  / (tmp_1)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.17>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%in_read = call double @_ssdm_op_Read.ap_auto.double(double %in_r) nounwind"   --->   Operation 9 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_Val2_s = bitcast double %in_read to i64" [my_version/jacobi-1d-imper.cpp:54->my_version/jacobi-1d-imper.cpp:1343]   --->   Operation 10 'bitcast' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_Repl2_2 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_s, i32 63)" [my_version/jacobi-1d-imper.cpp:55->my_version/jacobi-1d-imper.cpp:1343]   --->   Operation 11 'bitselect' 'p_Repl2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%new_exp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_s, i32 52, i32 62) nounwind" [my_version/jacobi-1d-imper.cpp:56->my_version/jacobi-1d-imper.cpp:1343]   --->   Operation 12 'partselect' 'new_exp_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%new_mant_V = trunc i64 %p_Val2_s to i52" [my_version/jacobi-1d-imper.cpp:57->my_version/jacobi-1d-imper.cpp:1343]   --->   Operation 13 'trunc' 'new_mant_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%xf_V_5_cast = zext i52 %new_mant_V to i53" [my_version/jacobi-1d-imper.cpp:1348]   --->   Operation 14 'zext' 'xf_V_5_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_s, i32 51)" [my_version/jacobi-1d-imper.cpp:1349]   --->   Operation 15 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.65ns)   --->   "%shift_V_cast_cast = select i1 %tmp, i11 1, i11 2" [my_version/jacobi-1d-imper.cpp:1349]   --->   Operation 16 'select' 'shift_V_cast_cast' <Predicate = true> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (1.32ns)   --->   "%tmp_1 = icmp eq i11 %new_exp_V, -1" [my_version/jacobi-1d-imper.cpp:1351]   --->   Operation 17 'icmp' 'tmp_1' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.32ns)   --->   "%tmp_2 = icmp ugt i11 %shift_V_cast_cast, %new_exp_V" [my_version/jacobi-1d-imper.cpp:1352]   --->   Operation 18 'icmp' 'tmp_2' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (1.42ns)   --->   "%new_exp_V_1 = sub i11 %new_exp_V, %shift_V_cast_cast" [my_version/jacobi-1d-imper.cpp:1355]   --->   Operation 19 'sub' 'new_exp_V_1' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%p_new_exp_V_1 = select i1 %tmp_1, i11 -1, i11 0" [my_version/jacobi-1d-imper.cpp:1325->my_version/jacobi-1d-imper.cpp:1376]   --->   Operation 20 'select' 'p_new_exp_V_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%tmp_7 = or i1 %tmp_1, %tmp_2" [my_version/jacobi-1d-imper.cpp:1325->my_version/jacobi-1d-imper.cpp:1376]   --->   Operation 21 'or' 'tmp_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.63ns) (out node of the LUT)   --->   "%p_Repl2_1 = select i1 %tmp_7, i11 %p_new_exp_V_1, i11 %new_exp_V_1" [my_version/jacobi-1d-imper.cpp:1325->my_version/jacobi-1d-imper.cpp:1376]   --->   Operation 22 'select' 'p_Repl2_1' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (1.06ns)   --->   "br i1 %tmp_1, label %._crit_edge416, label %_ifconv1" [my_version/jacobi-1d-imper.cpp:1356]   --->   Operation 23 'br' <Predicate = true> <Delay = 1.06>
ST_1 : Operation 24 [1/1] (1.32ns)   --->   "%tmp_4 = icmp eq i11 %new_exp_V, 0" [my_version/jacobi-1d-imper.cpp:1357]   --->   Operation 24 'icmp' 'tmp_4' <Predicate = (!tmp_1)> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (1.32ns)   --->   "%tmp_5 = icmp ult i11 %shift_V_cast_cast, %new_exp_V" [my_version/jacobi-1d-imper.cpp:1360]   --->   Operation 25 'icmp' 'tmp_5' <Predicate = (!tmp_1)> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_8 = call i10 @_ssdm_op_PartSelect.i10.i64.i32.i32(i64 %p_Val2_s, i32 53, i32 62)" [my_version/jacobi-1d-imper.cpp:1361]   --->   Operation 26 'partselect' 'tmp_8' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (1.29ns)   --->   "%icmp = icmp eq i10 %tmp_8, 0" [my_version/jacobi-1d-imper.cpp:1361]   --->   Operation 27 'icmp' 'icmp' <Predicate = (!tmp_1)> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (1.42ns)   --->   "%shift_V = sub i11 1, %new_exp_V" [my_version/jacobi-1d-imper.cpp:1362]   --->   Operation 28 'sub' 'shift_V' <Predicate = (!tmp_1)> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (1.42ns)   --->   "%shift_V_1 = add i11 -1, %new_exp_V" [my_version/jacobi-1d-imper.cpp:1364]   --->   Operation 29 'add' 'shift_V_1' <Predicate = (!tmp_1)> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp3_demorgan = or i1 %tmp_4, %tmp_5" [my_version/jacobi-1d-imper.cpp:1357]   --->   Operation 30 'or' 'sel_tmp3_demorgan' <Predicate = (!tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp3 = xor i1 %sel_tmp3_demorgan, true" [my_version/jacobi-1d-imper.cpp:1357]   --->   Operation 31 'xor' 'sel_tmp3' <Predicate = (!tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%sel_tmp4 = and i1 %icmp, %sel_tmp3" [my_version/jacobi-1d-imper.cpp:1361]   --->   Operation 32 'and' 'sel_tmp4' <Predicate = (!tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node shift_V_3)   --->   "%shift_V_2 = select i1 %sel_tmp4, i11 %shift_V, i11 %shift_V_1" [my_version/jacobi-1d-imper.cpp:1361]   --->   Operation 33 'select' 'shift_V_2' <Predicate = (!tmp_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.63ns) (out node of the LUT)   --->   "%shift_V_3 = select i1 %tmp_4, i11 0, i11 %shift_V_2" [my_version/jacobi-1d-imper.cpp:1357]   --->   Operation 34 'select' 'shift_V_3' <Predicate = (!tmp_1)> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node shift_V_4)   --->   "%sel_tmp7 = xor i1 %tmp_4, true" [my_version/jacobi-1d-imper.cpp:1357]   --->   Operation 35 'xor' 'sel_tmp7' <Predicate = (!tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node shift_V_4)   --->   "%sel_tmp8 = and i1 %tmp_5, %sel_tmp7" [my_version/jacobi-1d-imper.cpp:1360]   --->   Operation 36 'and' 'sel_tmp8' <Predicate = (!tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.63ns) (out node of the LUT)   --->   "%shift_V_4 = select i1 %sel_tmp8, i11 %shift_V_cast_cast, i11 %shift_V_3" [my_version/jacobi-1d-imper.cpp:1360]   --->   Operation 37 'select' 'shift_V_4' <Predicate = (!tmp_1)> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_3 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %new_mant_V)" [my_version/jacobi-1d-imper.cpp:1368]   --->   Operation 38 'bitconcatenate' 'tmp_3' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.70ns)   --->   "%xf_V_1 = select i1 %tmp_4, i53 %xf_V_5_cast, i53 %tmp_3" [my_version/jacobi-1d-imper.cpp:1357]   --->   Operation 39 'select' 'xf_V_1' <Predicate = (!tmp_1)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node xf_V)   --->   "%p_cast = zext i53 %xf_V_1 to i55" [my_version/jacobi-1d-imper.cpp:1357]   --->   Operation 40 'zext' 'p_cast' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node xf_V)   --->   "%tmp_s = zext i11 %shift_V_4 to i55" [my_version/jacobi-1d-imper.cpp:1370]   --->   Operation 41 'zext' 'tmp_s' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node xf_V)   --->   "%tmp_cast = zext i11 %shift_V_4 to i53" [my_version/jacobi-1d-imper.cpp:1370]   --->   Operation 42 'zext' 'tmp_cast' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node xf_V)   --->   "%r_V_3 = lshr i53 %xf_V_1, %tmp_cast" [my_version/jacobi-1d-imper.cpp:1370]   --->   Operation 43 'lshr' 'r_V_3' <Predicate = (!tmp_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.92> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node xf_V)   --->   "%r_V_1_cast = zext i53 %r_V_3 to i55" [my_version/jacobi-1d-imper.cpp:1370]   --->   Operation 44 'zext' 'r_V_1_cast' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node xf_V)   --->   "%r_V_4 = shl i55 %p_cast, %tmp_s" [my_version/jacobi-1d-imper.cpp:1372]   --->   Operation 45 'shl' 'r_V_4' <Predicate = (!tmp_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.92> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node xf_V)   --->   "%xf_V_3 = select i1 %icmp, i55 %r_V_1_cast, i55 %r_V_4" [my_version/jacobi-1d-imper.cpp:1369]   --->   Operation 46 'select' 'xf_V_3' <Predicate = (!tmp_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (2.92ns) (out node of the LUT)   --->   "%xf_V = add i55 1, %xf_V_3" [my_version/jacobi-1d-imper.cpp:1373]   --->   Operation 47 'add' 'xf_V' <Predicate = (!tmp_1)> <Delay = 2.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%p_Result_i_i = call i3 @_ssdm_op_PartSelect.i3.i55.i32.i32(i55 %xf_V, i32 52, i32 54) nounwind" [my_version/jacobi-1d-imper.cpp:1291->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 48 'partselect' 'p_Result_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%p_Result_22_i_i = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 48, i32 51) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 49 'partselect' 'p_Result_22_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%p_Result_22_1_i_i = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 44, i32 47) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 50 'partselect' 'p_Result_22_1_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%p_Result_22_2_i_i = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 40, i32 43) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 51 'partselect' 'p_Result_22_2_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%p_Result_22_3_i_i = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 36, i32 39) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 52 'partselect' 'p_Result_22_3_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%p_Result_22_4_i_i = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 32, i32 35) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 53 'partselect' 'p_Result_22_4_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%p_Result_22_5_i_i = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 28, i32 31) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 54 'partselect' 'p_Result_22_5_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%p_Result_22_6_i_i = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 24, i32 27) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 55 'partselect' 'p_Result_22_6_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%p_Result_22_7_i_i = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 20, i32 23) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 56 'partselect' 'p_Result_22_7_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%p_Result_22_8_i_i = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 16, i32 19) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 57 'partselect' 'p_Result_22_8_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%p_Result_22_9_i_i = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 12, i32 15) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 58 'partselect' 'p_Result_22_9_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%p_Result_22_i_i_8 = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 8, i32 11) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 59 'partselect' 'p_Result_22_i_i_8' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%p_Result_22_10_i_i = call i4 @_ssdm_op_PartSelect.i4.i55.i32.i32(i55 %xf_V, i32 4, i32 7) nounwind" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 60 'partselect' 'p_Result_22_10_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_9 = trunc i55 %xf_V to i4" [my_version/jacobi-1d-imper.cpp:1297->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 61 'trunc' 'tmp_9' <Predicate = (!tmp_1)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%d_chunk_V = zext i3 %p_Result_i_i to i4" [my_version/jacobi-1d-imper.cpp:1291->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 62 'zext' 'd_chunk_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (3.50ns)   --->   "%call_ret_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V, i2 0) nounwind" [my_version/jacobi-1d-imper.cpp:1292->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 63 'call' 'call_ret_i_i' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%r_V = extractvalue { i4, i2 } %call_ret_i_i, 1" [my_version/jacobi-1d-imper.cpp:1292->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 64 'extractvalue' 'r_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (3.50ns)   --->   "%call_ret4_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_i_i, i2 %r_V) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 65 'call' 'call_ret4_i_i' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_i_i = extractvalue { i4, i2 } %call_ret4_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 66 'extractvalue' 'q_chunk_V_ret2_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%r_V_ret3_i_i = extractvalue { i4, i2 } %call_ret4_i_i, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 67 'extractvalue' 'r_V_ret3_i_i' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.00>
ST_3 : Operation 68 [1/1] (3.50ns)   --->   "%call_ret4_1_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_1_i_i, i2 %r_V_ret3_i_i) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 68 'call' 'call_ret4_1_i_i' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_1_i_i = extractvalue { i4, i2 } %call_ret4_1_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 69 'extractvalue' 'q_chunk_V_ret2_1_i_i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%r_V_ret3_1_i_i = extractvalue { i4, i2 } %call_ret4_1_i_i, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 70 'extractvalue' 'r_V_ret3_1_i_i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (3.50ns)   --->   "%call_ret4_2_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_2_i_i, i2 %r_V_ret3_1_i_i) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 71 'call' 'call_ret4_2_i_i' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_2_i_i = extractvalue { i4, i2 } %call_ret4_2_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 72 'extractvalue' 'q_chunk_V_ret2_2_i_i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%r_V_ret3_2_i_i = extractvalue { i4, i2 } %call_ret4_2_i_i, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 73 'extractvalue' 'r_V_ret3_2_i_i' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.00>
ST_4 : Operation 74 [1/1] (3.50ns)   --->   "%call_ret4_3_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_3_i_i, i2 %r_V_ret3_2_i_i) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 74 'call' 'call_ret4_3_i_i' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_3_i_i = extractvalue { i4, i2 } %call_ret4_3_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 75 'extractvalue' 'q_chunk_V_ret2_3_i_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%r_V_ret3_3_i_i = extractvalue { i4, i2 } %call_ret4_3_i_i, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 76 'extractvalue' 'r_V_ret3_3_i_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (3.50ns)   --->   "%call_ret4_4_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_4_i_i, i2 %r_V_ret3_3_i_i) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 77 'call' 'call_ret4_4_i_i' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_4_i_i = extractvalue { i4, i2 } %call_ret4_4_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 78 'extractvalue' 'q_chunk_V_ret2_4_i_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%r_V_ret3_4_i_i = extractvalue { i4, i2 } %call_ret4_4_i_i, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 79 'extractvalue' 'r_V_ret3_4_i_i' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 7.00>
ST_5 : Operation 80 [1/1] (3.50ns)   --->   "%call_ret4_5_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_5_i_i, i2 %r_V_ret3_4_i_i) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 80 'call' 'call_ret4_5_i_i' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_5_i_i = extractvalue { i4, i2 } %call_ret4_5_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 81 'extractvalue' 'q_chunk_V_ret2_5_i_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%r_V_ret3_5_i_i = extractvalue { i4, i2 } %call_ret4_5_i_i, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 82 'extractvalue' 'r_V_ret3_5_i_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (3.50ns)   --->   "%call_ret4_6_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_6_i_i, i2 %r_V_ret3_5_i_i) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 83 'call' 'call_ret4_6_i_i' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_6_i_i = extractvalue { i4, i2 } %call_ret4_6_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 84 'extractvalue' 'q_chunk_V_ret2_6_i_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%r_V_ret3_6_i_i = extractvalue { i4, i2 } %call_ret4_6_i_i, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 85 'extractvalue' 'r_V_ret3_6_i_i' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 7.00>
ST_6 : Operation 86 [1/1] (3.50ns)   --->   "%call_ret4_7_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_7_i_i, i2 %r_V_ret3_6_i_i) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 86 'call' 'call_ret4_7_i_i' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_7_i_i = extractvalue { i4, i2 } %call_ret4_7_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 87 'extractvalue' 'q_chunk_V_ret2_7_i_i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%r_V_ret3_7_i_i = extractvalue { i4, i2 } %call_ret4_7_i_i, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 88 'extractvalue' 'r_V_ret3_7_i_i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (3.50ns)   --->   "%call_ret4_8_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_8_i_i, i2 %r_V_ret3_7_i_i) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 89 'call' 'call_ret4_8_i_i' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_8_i_i = extractvalue { i4, i2 } %call_ret4_8_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 90 'extractvalue' 'q_chunk_V_ret2_8_i_i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (0.00ns)   --->   "%r_V_ret3_8_i_i = extractvalue { i4, i2 } %call_ret4_8_i_i, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 91 'extractvalue' 'r_V_ret3_8_i_i' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 7.00>
ST_7 : Operation 92 [1/1] (3.50ns)   --->   "%call_ret4_9_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_9_i_i, i2 %r_V_ret3_8_i_i) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 92 'call' 'call_ret4_9_i_i' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_9_i_i = extractvalue { i4, i2 } %call_ret4_9_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 93 'extractvalue' 'q_chunk_V_ret2_9_i_i' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (0.00ns)   --->   "%r_V_ret3_9_i_i = extractvalue { i4, i2 } %call_ret4_9_i_i, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 94 'extractvalue' 'r_V_ret3_9_i_i' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 95 [1/1] (3.50ns)   --->   "%call_ret4_i_i_9 = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_i_i_8, i2 %r_V_ret3_9_i_i) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 95 'call' 'call_ret4_i_i_9' <Predicate = true> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_i_i_10 = extractvalue { i4, i2 } %call_ret4_i_i_9, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 96 'extractvalue' 'q_chunk_V_ret2_i_i_10' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%r_V_ret3_i_i_11 = extractvalue { i4, i2 } %call_ret4_i_i_9, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 97 'extractvalue' 'r_V_ret3_i_i_11' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 8.06>
ST_8 : Operation 98 [1/1] (3.50ns)   --->   "%call_ret4_10_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %p_Result_22_10_i_i, i2 %r_V_ret3_i_i_11) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 98 'call' 'call_ret4_10_i_i' <Predicate = (!tmp_1)> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 99 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_10_i_s = extractvalue { i4, i2 } %call_ret4_10_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 99 'extractvalue' 'q_chunk_V_ret2_10_i_s' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_8 : Operation 100 [1/1] (0.00ns)   --->   "%r_V_ret3_10_i_i = extractvalue { i4, i2 } %call_ret4_10_i_i, 1" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 100 'extractvalue' 'r_V_ret3_10_i_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_8 : Operation 101 [1/1] (3.50ns)   --->   "%call_ret4_11_i_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %tmp_9, i2 %r_V_ret3_10_i_i) nounwind" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 101 'call' 'call_ret4_11_i_i' <Predicate = (!tmp_1)> <Delay = 3.50> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_11_i_s = extractvalue { i4, i2 } %call_ret4_11_i_i, 0" [my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 102 'extractvalue' 'q_chunk_V_ret2_11_i_s' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%new_mant_V_1 = call i52 @_ssdm_op_BitConcatenate.i52.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i4 %q_chunk_V_ret2_i_i, i4 %q_chunk_V_ret2_1_i_i, i4 %q_chunk_V_ret2_2_i_i, i4 %q_chunk_V_ret2_3_i_i, i4 %q_chunk_V_ret2_4_i_i, i4 %q_chunk_V_ret2_5_i_i, i4 %q_chunk_V_ret2_6_i_i, i4 %q_chunk_V_ret2_7_i_i, i4 %q_chunk_V_ret2_8_i_i, i4 %q_chunk_V_ret2_9_i_i, i4 %q_chunk_V_ret2_i_i_10, i4 %q_chunk_V_ret2_10_i_s, i4 %q_chunk_V_ret2_11_i_s)" [my_version/jacobi-1d-imper.cpp:1374]   --->   Operation 103 'bitconcatenate' 'new_mant_V_1' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (1.06ns)   --->   "br label %._crit_edge416" [my_version/jacobi-1d-imper.cpp:1375]   --->   Operation 104 'br' <Predicate = (!tmp_1)> <Delay = 1.06>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "%p_Repl2_s = phi i52 [ %new_mant_V_1, %_ifconv1 ], [ %new_mant_V, %_ifconv ]"   --->   Operation 105 'phi' 'p_Repl2_s' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "%p_Result_s = call i64 @_ssdm_op_BitConcatenate.i64.i1.i11.i52(i1 %p_Repl2_2, i11 %p_Repl2_1, i52 %p_Repl2_s) nounwind" [my_version/jacobi-1d-imper.cpp:1326->my_version/jacobi-1d-imper.cpp:1376]   --->   Operation 106 'bitconcatenate' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 107 [1/1] (0.00ns)   --->   "%out = bitcast i64 %p_Result_s to double" [my_version/jacobi-1d-imper.cpp:1327->my_version/jacobi-1d-imper.cpp:1376]   --->   Operation 107 'bitcast' 'out' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 108 [1/1] (0.00ns)   --->   "ret double %out" [my_version/jacobi-1d-imper.cpp:1377]   --->   Operation 108 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 6.17ns
The critical path consists of the following:
	wire read on port 'in_r' [2]  (0 ns)
	'select' operation ('shift_V_cast_cast', my_version/jacobi-1d-imper.cpp:1349) [9]  (0.654 ns)
	'icmp' operation ('tmp_5', my_version/jacobi-1d-imper.cpp:1360) [19]  (1.33 ns)
	'or' operation ('sel_tmp3_demorgan', my_version/jacobi-1d-imper.cpp:1357) [24]  (0 ns)
	'xor' operation ('sel_tmp3', my_version/jacobi-1d-imper.cpp:1357) [25]  (0 ns)
	'and' operation ('sel_tmp4', my_version/jacobi-1d-imper.cpp:1361) [26]  (0 ns)
	'select' operation ('shift.V', my_version/jacobi-1d-imper.cpp:1361) [27]  (0 ns)
	'select' operation ('shift.V', my_version/jacobi-1d-imper.cpp:1357) [28]  (0.633 ns)
	'select' operation ('shift.V', my_version/jacobi-1d-imper.cpp:1360) [31]  (0.633 ns)
	'lshr' operation ('r.V', my_version/jacobi-1d-imper.cpp:1370) [37]  (0 ns)
	'select' operation ('xf.V', my_version/jacobi-1d-imper.cpp:1369) [40]  (0 ns)
	'add' operation ('xf.V', my_version/jacobi-1d-imper.cpp:1373) [41]  (2.93 ns)

 <State 2>: 7ns
The critical path consists of the following:
	'call' operation ('call_ret_i_i', my_version/jacobi-1d-imper.cpp:1292->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [44]  (3.5 ns)
	'call' operation ('call_ret4_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [47]  (3.5 ns)

 <State 3>: 7ns
The critical path consists of the following:
	'call' operation ('call_ret4_1_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [51]  (3.5 ns)
	'call' operation ('call_ret4_2_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [55]  (3.5 ns)

 <State 4>: 7ns
The critical path consists of the following:
	'call' operation ('call_ret4_3_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [59]  (3.5 ns)
	'call' operation ('call_ret4_4_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [63]  (3.5 ns)

 <State 5>: 7ns
The critical path consists of the following:
	'call' operation ('call_ret4_5_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [67]  (3.5 ns)
	'call' operation ('call_ret4_6_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [71]  (3.5 ns)

 <State 6>: 7ns
The critical path consists of the following:
	'call' operation ('call_ret4_7_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [75]  (3.5 ns)
	'call' operation ('call_ret4_8_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [79]  (3.5 ns)

 <State 7>: 7ns
The critical path consists of the following:
	'call' operation ('call_ret4_9_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [83]  (3.5 ns)
	'call' operation ('call_ret4_i_i_9', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [87]  (3.5 ns)

 <State 8>: 8.06ns
The critical path consists of the following:
	'call' operation ('call_ret4_10_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [91]  (3.5 ns)
	'call' operation ('call_ret4_11_i_i', my_version/jacobi-1d-imper.cpp:1298->my_version/jacobi-1d-imper.cpp:1306->my_version/jacobi-1d-imper.cpp:1374) to 'lut_div3_chunk' [95]  (3.5 ns)
	multiplexor before 'phi' operation ('mant.V') with incoming values : ('ssdm_int<52 + 1024 * 0, false>.V', my_version/jacobi-1d-imper.cpp:57->my_version/jacobi-1d-imper.cpp:1343) ('new_mant.V', my_version/jacobi-1d-imper.cpp:1374) [100]  (1.06 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
