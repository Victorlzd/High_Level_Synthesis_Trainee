// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_jacobi_1d_imper_optimized,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.344000,HLS_SYN_LAT=89982301,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3166,HLS_SYN_LUT=2804,HLS_VERSION=2018_2}" *)

module kernel_jacobi_1d_imper_optimized (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tsteps,
        n,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_we1,
        A_d1,
        A_q1,
        B_address0,
        B_ce0,
        B_we0,
        B_d0,
        B_q0
);

parameter    ap_ST_fsm_state1 = 78'd1;
parameter    ap_ST_fsm_state2 = 78'd2;
parameter    ap_ST_fsm_state3 = 78'd4;
parameter    ap_ST_fsm_state4 = 78'd8;
parameter    ap_ST_fsm_state5 = 78'd16;
parameter    ap_ST_fsm_state6 = 78'd32;
parameter    ap_ST_fsm_state7 = 78'd64;
parameter    ap_ST_fsm_state8 = 78'd128;
parameter    ap_ST_fsm_state9 = 78'd256;
parameter    ap_ST_fsm_state10 = 78'd512;
parameter    ap_ST_fsm_state11 = 78'd1024;
parameter    ap_ST_fsm_state12 = 78'd2048;
parameter    ap_ST_fsm_state13 = 78'd4096;
parameter    ap_ST_fsm_state14 = 78'd8192;
parameter    ap_ST_fsm_state15 = 78'd16384;
parameter    ap_ST_fsm_state16 = 78'd32768;
parameter    ap_ST_fsm_state17 = 78'd65536;
parameter    ap_ST_fsm_state18 = 78'd131072;
parameter    ap_ST_fsm_state19 = 78'd262144;
parameter    ap_ST_fsm_state20 = 78'd524288;
parameter    ap_ST_fsm_state21 = 78'd1048576;
parameter    ap_ST_fsm_state22 = 78'd2097152;
parameter    ap_ST_fsm_state23 = 78'd4194304;
parameter    ap_ST_fsm_state24 = 78'd8388608;
parameter    ap_ST_fsm_state25 = 78'd16777216;
parameter    ap_ST_fsm_state26 = 78'd33554432;
parameter    ap_ST_fsm_state27 = 78'd67108864;
parameter    ap_ST_fsm_state28 = 78'd134217728;
parameter    ap_ST_fsm_state29 = 78'd268435456;
parameter    ap_ST_fsm_state30 = 78'd536870912;
parameter    ap_ST_fsm_state31 = 78'd1073741824;
parameter    ap_ST_fsm_state32 = 78'd2147483648;
parameter    ap_ST_fsm_state33 = 78'd4294967296;
parameter    ap_ST_fsm_state34 = 78'd8589934592;
parameter    ap_ST_fsm_state35 = 78'd17179869184;
parameter    ap_ST_fsm_state36 = 78'd34359738368;
parameter    ap_ST_fsm_state37 = 78'd68719476736;
parameter    ap_ST_fsm_state38 = 78'd137438953472;
parameter    ap_ST_fsm_state39 = 78'd274877906944;
parameter    ap_ST_fsm_state40 = 78'd549755813888;
parameter    ap_ST_fsm_state41 = 78'd1099511627776;
parameter    ap_ST_fsm_state42 = 78'd2199023255552;
parameter    ap_ST_fsm_state43 = 78'd4398046511104;
parameter    ap_ST_fsm_state44 = 78'd8796093022208;
parameter    ap_ST_fsm_state45 = 78'd17592186044416;
parameter    ap_ST_fsm_state46 = 78'd35184372088832;
parameter    ap_ST_fsm_state47 = 78'd70368744177664;
parameter    ap_ST_fsm_state48 = 78'd140737488355328;
parameter    ap_ST_fsm_state49 = 78'd281474976710656;
parameter    ap_ST_fsm_state50 = 78'd562949953421312;
parameter    ap_ST_fsm_state51 = 78'd1125899906842624;
parameter    ap_ST_fsm_state52 = 78'd2251799813685248;
parameter    ap_ST_fsm_state53 = 78'd4503599627370496;
parameter    ap_ST_fsm_state54 = 78'd9007199254740992;
parameter    ap_ST_fsm_state55 = 78'd18014398509481984;
parameter    ap_ST_fsm_state56 = 78'd36028797018963968;
parameter    ap_ST_fsm_state57 = 78'd72057594037927936;
parameter    ap_ST_fsm_state58 = 78'd144115188075855872;
parameter    ap_ST_fsm_state59 = 78'd288230376151711744;
parameter    ap_ST_fsm_state60 = 78'd576460752303423488;
parameter    ap_ST_fsm_state61 = 78'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 78'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 78'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 78'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 78'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 78'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 78'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 78'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 78'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 78'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 78'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 78'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 78'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 78'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 78'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 78'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 78'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 78'd151115727451828646838272;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] tsteps;
input  [31:0] n;
output  [13:0] A_address0;
output   A_ce0;
input  [63:0] A_q0;
output  [13:0] A_address1;
output   A_ce1;
output   A_we1;
output  [63:0] A_d1;
input  [63:0] A_q1;
output  [13:0] B_address0;
output   B_ce0;
output   B_we0;
output  [63:0] B_d0;
input  [63:0] B_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] A_address0;
reg A_ce0;
reg[13:0] A_address1;
reg A_ce1;
reg A_we1;
reg[13:0] B_address0;
reg B_ce0;
reg B_we0;

(* fsm_encoding = "none" *) reg   [77:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_261;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state20;
wire   [63:0] grp_fu_253_p2;
reg   [63:0] reg_267;
wire    ap_CS_fsm_state34;
reg   [1:0] reg_272;
wire    ap_CS_fsm_state47;
wire    grp_lut_div3_chunk_fu_234_ap_idle;
wire    grp_lut_div3_chunk_fu_234_ap_ready;
wire    grp_lut_div3_chunk_fu_234_ap_done;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state71;
wire   [6:0] t_1_fu_283_p2;
reg   [6:0] t_1_reg_778;
wire    ap_CS_fsm_state2;
wire   [13:0] tmp_fu_295_p2;
reg   [13:0] tmp_reg_786;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond1_fu_289_p2;
wire    ap_CS_fsm_state4;
wire   [63:0] tmp_3_fu_305_p1;
reg   [63:0] tmp_3_reg_796;
reg   [63:0] A_load_1_reg_806;
wire   [13:0] i_1_fu_310_p2;
reg   [13:0] i_1_reg_811;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg   [0:0] p_Repl2_2_reg_822;
wire    ap_CS_fsm_state35;
wire   [10:0] new_exp_V_1_fu_332_p4;
reg   [10:0] new_exp_V_1_reg_827;
wire   [51:0] new_mant_V_1_fu_342_p1;
reg   [51:0] new_mant_V_1_reg_834;
wire   [10:0] shift_V_i_cast_cast_fu_354_p3;
reg   [10:0] shift_V_i_cast_cast_reg_841;
wire   [0:0] tmp_3_i_fu_362_p2;
reg   [0:0] tmp_3_i_reg_848;
wire   [0:0] tmp_4_i_fu_368_p2;
reg   [0:0] tmp_4_i_reg_856;
wire   [0:0] icmp_fu_384_p2;
reg   [0:0] icmp_reg_862;
wire   [10:0] shift_V_fu_390_p2;
reg   [10:0] shift_V_reg_868;
wire   [10:0] shift_V_1_fu_396_p2;
reg   [10:0] shift_V_1_reg_873;
wire   [10:0] shift_V_4_fu_448_p3;
reg   [10:0] shift_V_4_reg_878;
wire    ap_CS_fsm_state36;
wire   [0:0] tmp_2_i_fu_455_p2;
reg   [0:0] tmp_2_i_reg_884;
wire   [10:0] p_Repl2_1_fu_474_p3;
reg   [10:0] p_Repl2_1_reg_889;
wire    ap_CS_fsm_state37;
wire   [51:0] grp_fu_491_p2;
reg   [51:0] r_V_15_reg_909;
wire    ap_CS_fsm_state43;
wire   [54:0] grp_fu_496_p2;
reg   [54:0] r_V_16_reg_914;
wire   [54:0] xf_V_7_fu_505_p3;
reg   [54:0] xf_V_7_reg_919;
wire    ap_CS_fsm_state44;
reg   [2:0] p_Result_i_i_i_reg_925;
wire    ap_CS_fsm_state45;
reg   [3:0] d_chunk_V_1_reg_930;
reg   [3:0] d_chunk_V_2_reg_935;
reg   [3:0] d_chunk_V_3_reg_940;
reg   [3:0] d_chunk_V_4_reg_945;
reg   [3:0] d_chunk_V_5_reg_950;
reg   [3:0] d_chunk_V_6_reg_955;
reg   [3:0] d_chunk_V_7_reg_960;
reg   [3:0] d_chunk_V_8_reg_965;
reg   [3:0] d_chunk_V_9_reg_970;
reg   [3:0] d_chunk_V_10_reg_975;
reg   [3:0] d_chunk_V_11_reg_980;
reg   [3:0] d_chunk_V_12_reg_985;
wire   [3:0] d_chunk_V_13_fu_662_p1;
reg   [3:0] d_chunk_V_13_reg_990;
wire   [3:0] d_chunk_V_fu_666_p1;
reg   [3:0] d_chunk_V_reg_995;
wire    ap_CS_fsm_state46;
wire   [3:0] grp_lut_div3_chunk_fu_234_ap_return_0;
wire   [1:0] grp_lut_div3_chunk_fu_234_ap_return_1;
reg   [3:0] call_ret2_i_i_i_reg_1000_0;
reg   [3:0] call_ret3_i_i_i_reg_1005_0;
reg   [3:0] call_ret4_i_i_i_reg_1010_0;
reg   [3:0] call_ret5_i_i_i_reg_1015_0;
reg   [3:0] call_ret6_i_i_i_reg_1020_0;
reg   [3:0] call_ret7_i_i_i_reg_1025_0;
reg   [3:0] call_ret8_i_i_i_reg_1030_0;
reg   [3:0] call_ret9_i_i_i_reg_1035_0;
reg   [3:0] call_ret10_i_i_i_reg_1040_0;
reg   [3:0] call_ret11_i_i_i_reg_1045_0;
reg   [3:0] call_ret12_i_i_i_reg_1050_0;
reg   [3:0] call_ret13_i_i_i_reg_1055_0;
wire   [51:0] p_Repl2_s_fu_740_p3;
reg   [51:0] p_Repl2_s_reg_1060;
wire    ap_CS_fsm_state73;
wire   [63:0] tmp_8_fu_764_p1;
reg   [63:0] tmp_8_reg_1068;
wire    ap_CS_fsm_state75;
wire   [0:0] exitcond_fu_758_p2;
wire   [13:0] j_1_fu_769_p2;
reg   [13:0] j_1_reg_1078;
reg   [63:0] B_load_reg_1083;
wire    ap_CS_fsm_state77;
wire    grp_lut_div3_chunk_fu_234_ap_start;
reg   [3:0] grp_lut_div3_chunk_fu_234_d_V;
reg   [1:0] grp_lut_div3_chunk_fu_234_r_in_V;
reg   [6:0] t_reg_200;
reg   [13:0] i_reg_211;
wire    ap_CS_fsm_state74;
wire   [0:0] exitcond2_fu_277_p2;
reg   [13:0] j_reg_223;
wire    ap_CS_fsm_state78;
reg    grp_lut_div3_chunk_fu_234_ap_start_reg;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state72;
wire   [63:0] tmp_s_fu_301_p1;
wire   [63:0] tmp_5_fu_316_p1;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state76;
reg   [63:0] grp_fu_253_p0;
reg   [63:0] grp_fu_253_p1;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state21;
wire   [63:0] p_Val2_s_fu_320_p1;
wire   [0:0] tmp_6_fu_346_p3;
wire   [9:0] tmp_7_fu_374_p4;
wire   [0:0] sel_tmp2_demorgan_i_fu_410_p2;
wire   [0:0] sel_tmp2_i_fu_414_p2;
wire   [0:0] sel_tmp3_i_fu_420_p2;
wire   [10:0] shift_V_2_fu_425_p3;
wire   [0:0] sel_tmp6_i_fu_438_p2;
wire   [0:0] sel_tmp7_i_fu_443_p2;
wire   [10:0] shift_V_3_fu_431_p3;
wire   [0:0] tmp_1_i_fu_402_p2;
wire   [0:0] tmp_6_i_fu_468_p2;
wire   [10:0] p_i_fu_460_p3;
wire   [10:0] new_exp_V_fu_406_p2;
wire   [51:0] grp_fu_491_p1;
wire   [54:0] grp_fu_496_p0;
wire   [54:0] grp_fu_496_p1;
wire   [54:0] r_V_13_i_cast_fu_502_p1;
reg   [54:0] p_Result_s_fu_511_p4;
wire   [54:0] xf_V_5_fu_520_p3;
wire   [54:0] xf_V_8_fu_526_p2;
wire   [51:0] new_mant_V_fu_710_p14;
wire   [63:0] p_Result_4_fu_746_p4;
reg   [77:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 78'd1;
#0 grp_lut_div3_chunk_fu_234_ap_start_reg = 1'b0;
end

lut_div3_chunk grp_lut_div3_chunk_fu_234(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lut_div3_chunk_fu_234_ap_start),
    .ap_done(grp_lut_div3_chunk_fu_234_ap_done),
    .ap_idle(grp_lut_div3_chunk_fu_234_ap_idle),
    .ap_ready(grp_lut_div3_chunk_fu_234_ap_ready),
    .d_V(grp_lut_div3_chunk_fu_234_d_V),
    .r_in_V(grp_lut_div3_chunk_fu_234_r_in_V),
    .ap_return_0(grp_lut_div3_chunk_fu_234_ap_return_0),
    .ap_return_1(grp_lut_div3_chunk_fu_234_ap_return_1)
);

kernel_jacobi_1d_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_jacobi_1d_bkb_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_253_p0),
    .din1(grp_fu_253_p1),
    .ce(1'b1),
    .dout(grp_fu_253_p2)
);

kernel_jacobi_1d_cud #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 52 ))
kernel_jacobi_1d_cud_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(new_mant_V_1_reg_834),
    .din1(grp_fu_491_p1),
    .ce(1'b1),
    .dout(grp_fu_491_p2)
);

kernel_jacobi_1d_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 55 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 55 ))
kernel_jacobi_1d_dEe_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_496_p0),
    .din1(grp_fu_496_p1),
    .ce(1'b1),
    .dout(grp_fu_496_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lut_div3_chunk_fu_234_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state46))) begin
            grp_lut_div3_chunk_fu_234_ap_start_reg <= 1'b1;
        end else if ((grp_lut_div3_chunk_fu_234_ap_ready == 1'b1)) begin
            grp_lut_div3_chunk_fu_234_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_211 <= 14'd1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        i_reg_211 <= i_1_reg_811;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_289_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_223 <= 14'd1;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        j_reg_223 <= j_1_reg_1078;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_758_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
        t_reg_200 <= t_1_reg_778;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_reg_200 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        A_load_1_reg_806 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        B_load_reg_1083 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state65) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret10_i_i_i_reg_1040_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state67) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret11_i_i_i_reg_1045_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state69) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret12_i_i_i_reg_1050_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state71) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret13_i_i_i_reg_1055_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret2_i_i_i_reg_1000_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret3_i_i_i_reg_1005_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret4_i_i_i_reg_1010_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret5_i_i_i_reg_1015_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret6_i_i_i_reg_1020_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret7_i_i_i_reg_1025_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state61) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret8_i_i_i_reg_1030_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state63) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        call_ret9_i_i_i_reg_1035_0 <= grp_lut_div3_chunk_fu_234_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        d_chunk_V_10_reg_975 <= {{xf_V_8_fu_526_p2[15:12]}};
        d_chunk_V_11_reg_980 <= {{xf_V_8_fu_526_p2[11:8]}};
        d_chunk_V_12_reg_985 <= {{xf_V_8_fu_526_p2[7:4]}};
        d_chunk_V_13_reg_990 <= d_chunk_V_13_fu_662_p1;
        d_chunk_V_1_reg_930 <= {{xf_V_8_fu_526_p2[51:48]}};
        d_chunk_V_2_reg_935 <= {{xf_V_8_fu_526_p2[47:44]}};
        d_chunk_V_3_reg_940 <= {{xf_V_8_fu_526_p2[43:40]}};
        d_chunk_V_4_reg_945 <= {{xf_V_8_fu_526_p2[39:36]}};
        d_chunk_V_5_reg_950 <= {{xf_V_8_fu_526_p2[35:32]}};
        d_chunk_V_6_reg_955 <= {{xf_V_8_fu_526_p2[31:28]}};
        d_chunk_V_7_reg_960 <= {{xf_V_8_fu_526_p2[27:24]}};
        d_chunk_V_8_reg_965 <= {{xf_V_8_fu_526_p2[23:20]}};
        d_chunk_V_9_reg_970 <= {{xf_V_8_fu_526_p2[19:16]}};
        p_Result_i_i_i_reg_925 <= {{xf_V_8_fu_526_p2[54:52]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        d_chunk_V_reg_995[2 : 0] <= d_chunk_V_fu_666_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_1_reg_811 <= i_1_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        icmp_reg_862 <= icmp_fu_384_p2;
        new_exp_V_1_reg_827 <= {{p_Val2_s_fu_320_p1[62:52]}};
        new_mant_V_1_reg_834 <= new_mant_V_1_fu_342_p1;
        p_Repl2_2_reg_822 <= p_Val2_s_fu_320_p1[32'd63];
        shift_V_1_reg_873 <= shift_V_1_fu_396_p2;
        shift_V_i_cast_cast_reg_841[1 : 0] <= shift_V_i_cast_cast_fu_354_p3[1 : 0];
        shift_V_reg_868 <= shift_V_fu_390_p2;
        tmp_3_i_reg_848 <= tmp_3_i_fu_362_p2;
        tmp_4_i_reg_856 <= tmp_4_i_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_758_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        j_1_reg_1078 <= j_1_fu_769_p2;
        tmp_8_reg_1068[13 : 0] <= tmp_8_fu_764_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        p_Repl2_1_reg_889 <= p_Repl2_1_fu_474_p3;
        shift_V_4_reg_878 <= shift_V_4_fu_448_p3;
        tmp_2_i_reg_884 <= tmp_2_i_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state73) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
        p_Repl2_s_reg_1060 <= p_Repl2_s_fu_740_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_reg_862 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        r_V_15_reg_909 <= grp_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_reg_862 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        r_V_16_reg_914 <= grp_fu_496_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_261 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_267 <= grp_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state71) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state69) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state67) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state65) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state63) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state61) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state59) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state57) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state55) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state51) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state49) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state47) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1)))) begin
        reg_272 <= grp_lut_div3_chunk_fu_234_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        t_1_reg_778 <= t_1_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_3_reg_796[13 : 0] <= tmp_3_fu_305_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_289_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_reg_786 <= tmp_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        xf_V_7_reg_919 <= xf_V_7_fu_505_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        A_address0 = tmp_5_fu_316_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_address0 = tmp_s_fu_301_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        A_address1 = tmp_8_reg_1068;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_address1 = tmp_3_fu_305_p1;
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state6))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state6))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        A_we1 = 1'b1;
    end else begin
        A_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        B_address0 = tmp_8_fu_764_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        B_address0 = tmp_3_reg_796;
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state75))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        B_we0 = 1'b1;
    end else begin
        B_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_277_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_277_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_253_p0 = reg_267;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_253_p0 = reg_261;
    end else begin
        grp_fu_253_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_253_p1 = reg_261;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_253_p1 = A_load_1_reg_806;
    end else begin
        grp_fu_253_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_13_reg_990;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_12_reg_985;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_11_reg_980;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_10_reg_975;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_9_reg_970;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_8_reg_965;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_7_reg_960;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_6_reg_955;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_5_reg_950;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_4_reg_945;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_3_reg_940;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_2_reg_935;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_1_reg_930;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_lut_div3_chunk_fu_234_d_V = d_chunk_V_reg_995;
    end else begin
        grp_lut_div3_chunk_fu_234_d_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_lut_div3_chunk_fu_234_r_in_V = reg_272;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_lut_div3_chunk_fu_234_r_in_V = 2'd0;
    end else begin
        grp_lut_div3_chunk_fu_234_r_in_V = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond2_fu_277_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond1_fu_289_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((1'b1 == ap_CS_fsm_state55) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            if (((1'b1 == ap_CS_fsm_state61) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            if (((1'b1 == ap_CS_fsm_state63) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            if (((1'b1 == ap_CS_fsm_state65) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            if (((1'b1 == ap_CS_fsm_state69) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            if (((1'b1 == ap_CS_fsm_state71) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if (((1'b1 == ap_CS_fsm_state73) & (grp_lut_div3_chunk_fu_234_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state75 : begin
            if (((exitcond_fu_758_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_d1 = B_load_reg_1083;

assign B_d0 = p_Result_4_fu_746_p4;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign d_chunk_V_13_fu_662_p1 = xf_V_8_fu_526_p2[3:0];

assign d_chunk_V_fu_666_p1 = p_Result_i_i_i_reg_925;

assign exitcond1_fu_289_p2 = ((i_reg_211 == 14'd9999) ? 1'b1 : 1'b0);

assign exitcond2_fu_277_p2 = ((t_reg_200 == 7'd100) ? 1'b1 : 1'b0);

assign exitcond_fu_758_p2 = ((j_reg_223 == 14'd9999) ? 1'b1 : 1'b0);

assign grp_fu_491_p1 = shift_V_4_reg_878;

assign grp_fu_496_p0 = new_mant_V_1_reg_834;

assign grp_fu_496_p1 = shift_V_4_reg_878;

assign grp_lut_div3_chunk_fu_234_ap_start = grp_lut_div3_chunk_fu_234_ap_start_reg;

assign i_1_fu_310_p2 = (14'd1 + i_reg_211);

assign icmp_fu_384_p2 = ((tmp_7_fu_374_p4 == 10'd0) ? 1'b1 : 1'b0);

assign j_1_fu_769_p2 = (j_reg_223 + 14'd1);

assign new_exp_V_1_fu_332_p4 = {{p_Val2_s_fu_320_p1[62:52]}};

assign new_exp_V_fu_406_p2 = (new_exp_V_1_reg_827 - shift_V_i_cast_cast_reg_841);

assign new_mant_V_1_fu_342_p1 = p_Val2_s_fu_320_p1[51:0];

assign new_mant_V_fu_710_p14 = {{{{{{{{{{{{{call_ret2_i_i_i_reg_1000_0}, {call_ret3_i_i_i_reg_1005_0}}, {call_ret4_i_i_i_reg_1010_0}}, {call_ret5_i_i_i_reg_1015_0}}, {call_ret6_i_i_i_reg_1020_0}}, {call_ret7_i_i_i_reg_1025_0}}, {call_ret8_i_i_i_reg_1030_0}}, {call_ret9_i_i_i_reg_1035_0}}, {call_ret10_i_i_i_reg_1040_0}}, {call_ret11_i_i_i_reg_1045_0}}, {call_ret12_i_i_i_reg_1050_0}}, {call_ret13_i_i_i_reg_1055_0}}, {grp_lut_div3_chunk_fu_234_ap_return_0}};

assign p_Repl2_1_fu_474_p3 = ((tmp_6_i_fu_468_p2[0:0] === 1'b1) ? p_i_fu_460_p3 : new_exp_V_fu_406_p2);

assign p_Repl2_s_fu_740_p3 = ((tmp_2_i_reg_884[0:0] === 1'b1) ? new_mant_V_1_reg_834 : new_mant_V_fu_710_p14);

assign p_Result_4_fu_746_p4 = {{{p_Repl2_2_reg_822}, {p_Repl2_1_reg_889}}, {p_Repl2_s_reg_1060}};

always @ (*) begin
    p_Result_s_fu_511_p4 = xf_V_7_reg_919;
    p_Result_s_fu_511_p4[32'd52] = |(1'd1);
end

assign p_Val2_s_fu_320_p1 = reg_267;

assign p_i_fu_460_p3 = ((tmp_2_i_fu_455_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign r_V_13_i_cast_fu_502_p1 = r_V_15_reg_909;

assign sel_tmp2_demorgan_i_fu_410_p2 = (tmp_4_i_reg_856 | tmp_3_i_reg_848);

assign sel_tmp2_i_fu_414_p2 = (sel_tmp2_demorgan_i_fu_410_p2 ^ 1'd1);

assign sel_tmp3_i_fu_420_p2 = (sel_tmp2_i_fu_414_p2 & icmp_reg_862);

assign sel_tmp6_i_fu_438_p2 = (tmp_3_i_reg_848 ^ 1'd1);

assign sel_tmp7_i_fu_443_p2 = (tmp_4_i_reg_856 & sel_tmp6_i_fu_438_p2);

assign shift_V_1_fu_396_p2 = ($signed(11'd2047) + $signed(new_exp_V_1_fu_332_p4));

assign shift_V_2_fu_425_p3 = ((sel_tmp3_i_fu_420_p2[0:0] === 1'b1) ? shift_V_reg_868 : shift_V_1_reg_873);

assign shift_V_3_fu_431_p3 = ((tmp_3_i_reg_848[0:0] === 1'b1) ? 11'd0 : shift_V_2_fu_425_p3);

assign shift_V_4_fu_448_p3 = ((sel_tmp7_i_fu_443_p2[0:0] === 1'b1) ? shift_V_i_cast_cast_reg_841 : shift_V_3_fu_431_p3);

assign shift_V_fu_390_p2 = (11'd1 - new_exp_V_1_fu_332_p4);

assign shift_V_i_cast_cast_fu_354_p3 = ((tmp_6_fu_346_p3[0:0] === 1'b1) ? 11'd1 : 11'd2);

assign t_1_fu_283_p2 = (t_reg_200 + 7'd1);

assign tmp_1_i_fu_402_p2 = ((shift_V_i_cast_cast_reg_841 > new_exp_V_1_reg_827) ? 1'b1 : 1'b0);

assign tmp_2_i_fu_455_p2 = ((new_exp_V_1_reg_827 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_3_fu_305_p1 = i_reg_211;

assign tmp_3_i_fu_362_p2 = ((new_exp_V_1_fu_332_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_4_i_fu_368_p2 = ((shift_V_i_cast_cast_fu_354_p3 < new_exp_V_1_fu_332_p4) ? 1'b1 : 1'b0);

assign tmp_5_fu_316_p1 = i_1_reg_811;

assign tmp_6_fu_346_p3 = p_Val2_s_fu_320_p1[32'd51];

assign tmp_6_i_fu_468_p2 = (tmp_2_i_fu_455_p2 | tmp_1_i_fu_402_p2);

assign tmp_7_fu_374_p4 = {{p_Val2_s_fu_320_p1[62:53]}};

assign tmp_8_fu_764_p1 = j_reg_223;

assign tmp_fu_295_p2 = ($signed(14'd16383) + $signed(i_reg_211));

assign tmp_s_fu_301_p1 = tmp_reg_786;

assign xf_V_5_fu_520_p3 = ((tmp_3_i_reg_848[0:0] === 1'b1) ? xf_V_7_reg_919 : p_Result_s_fu_511_p4);

assign xf_V_7_fu_505_p3 = ((icmp_reg_862[0:0] === 1'b1) ? r_V_13_i_cast_fu_502_p1 : r_V_16_reg_914);

assign xf_V_8_fu_526_p2 = (55'd1 + xf_V_5_fu_520_p3);

always @ (posedge ap_clk) begin
    tmp_3_reg_796[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    shift_V_i_cast_cast_reg_841[10:2] <= 9'b000000000;
    d_chunk_V_reg_995[3] <= 1'b0;
    tmp_8_reg_1068[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
end

endmodule //kernel_jacobi_1d_imper_optimized
