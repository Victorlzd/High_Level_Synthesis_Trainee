-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity operator_double_div3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of operator_double_div3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv55_1 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_141 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_Repl2_2_reg_554 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_mant_V_fu_168_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_564 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_1_fu_224_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Repl2_1_reg_568 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_i_i_reg_573 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_22_i_i_reg_578 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_22_1_i_i_reg_583 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_22_2_i_i_reg_588 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_22_3_i_i_reg_593 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_22_4_i_i_reg_598 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_22_5_i_i_reg_603 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_22_6_i_i_reg_608 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_22_7_i_i_reg_613 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_22_8_i_i_reg_618 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_22_9_i_i_reg_623 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_22_i_i_8_reg_628 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_22_10_i_i_reg_633 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_514_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_reg_638 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_ret2_i_i_reg_643 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_ret2_1_i_i_reg_648 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_ret2_2_i_i_reg_653 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_ret2_3_i_i_reg_658 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_ret2_4_i_i_reg_663 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_ret2_5_i_i_reg_668 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_ret2_6_i_i_reg_673 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_ret2_7_i_i_reg_678 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_ret2_8_i_i_reg_683 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_ret2_9_i_i_reg_688 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_ret2_i_i_10_reg_693 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_111_ap_ready : STD_LOGIC;
    signal grp_lut_div3_chunk_fu_111_d_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_111_r_in_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div3_chunk_fu_111_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_111_ap_return_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div3_chunk_fu_118_ap_ready : STD_LOGIC;
    signal grp_lut_div3_chunk_fu_118_d_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_118_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_118_ap_return_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal new_mant_V_1_fu_522_p14 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_phi_mux_p_Repl2_s_phi_fu_105_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Repl2_s_reg_102 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal d_chunk_V_fu_518_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_fu_146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_176_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_exp_V_fu_158_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal shift_V_cast_cast_fu_184_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_new_exp_V_1_fu_210_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal new_exp_V_1_fu_204_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_fu_244_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_demorgan_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_V_fu_260_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shift_V_1_fu_266_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shift_V_2_fu_290_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sel_tmp7_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_V_3_fu_298_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal xf_V_5_cast_fu_172_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_3_fu_326_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal xf_V_1_fu_334_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal shift_V_4_fu_318_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_cast_fu_350_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal r_V_3_fu_354_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_cast_fu_342_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_s_fu_346_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal r_V_1_cast_fu_360_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal r_V_4_fu_364_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal xf_V_3_fu_370_p3 : STD_LOGIC_VECTOR (54 downto 0);
    signal xf_V_fu_378_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal p_Result_s_fu_542_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_fu_550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component lut_div3_chunk IS
    port (
        ap_ready : OUT STD_LOGIC;
        d_V : IN STD_LOGIC_VECTOR (3 downto 0);
        r_in_V : IN STD_LOGIC_VECTOR (1 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    grp_lut_div3_chunk_fu_111 : component lut_div3_chunk
    port map (
        ap_ready => grp_lut_div3_chunk_fu_111_ap_ready,
        d_V => grp_lut_div3_chunk_fu_111_d_V,
        r_in_V => grp_lut_div3_chunk_fu_111_r_in_V,
        ap_return_0 => grp_lut_div3_chunk_fu_111_ap_return_0,
        ap_return_1 => grp_lut_div3_chunk_fu_111_ap_return_1);

    grp_lut_div3_chunk_fu_118 : component lut_div3_chunk
    port map (
        ap_ready => grp_lut_div3_chunk_fu_118_ap_ready,
        d_V => grp_lut_div3_chunk_fu_118_d_V,
        r_in_V => grp_lut_div3_chunk_fu_111_ap_return_1,
        ap_return_0 => grp_lut_div3_chunk_fu_118_ap_return_0,
        ap_return_1 => grp_lut_div3_chunk_fu_118_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv64_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_return_preg <= out_fu_550_p1;
                end if; 
            end if;
        end if;
    end process;


    p_Repl2_s_reg_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_192_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_Repl2_s_reg_102 <= new_mant_V_fu_168_p1;
            elsif (((tmp_1_reg_564 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                p_Repl2_s_reg_102 <= new_mant_V_1_fu_522_p14;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                p_Repl2_1_reg_568 <= p_Repl2_1_fu_224_p3;
                p_Repl2_2_reg_554 <= p_Val2_s_fu_146_p1(63 downto 63);
                tmp_1_reg_564 <= tmp_1_fu_192_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_192_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                p_Result_22_10_i_i_reg_633 <= xf_V_fu_378_p2(7 downto 4);
                p_Result_22_1_i_i_reg_583 <= xf_V_fu_378_p2(47 downto 44);
                p_Result_22_2_i_i_reg_588 <= xf_V_fu_378_p2(43 downto 40);
                p_Result_22_3_i_i_reg_593 <= xf_V_fu_378_p2(39 downto 36);
                p_Result_22_4_i_i_reg_598 <= xf_V_fu_378_p2(35 downto 32);
                p_Result_22_5_i_i_reg_603 <= xf_V_fu_378_p2(31 downto 28);
                p_Result_22_6_i_i_reg_608 <= xf_V_fu_378_p2(27 downto 24);
                p_Result_22_7_i_i_reg_613 <= xf_V_fu_378_p2(23 downto 20);
                p_Result_22_8_i_i_reg_618 <= xf_V_fu_378_p2(19 downto 16);
                p_Result_22_9_i_i_reg_623 <= xf_V_fu_378_p2(15 downto 12);
                p_Result_22_i_i_8_reg_628 <= xf_V_fu_378_p2(11 downto 8);
                p_Result_22_i_i_reg_578 <= xf_V_fu_378_p2(51 downto 48);
                p_Result_i_i_reg_573 <= xf_V_fu_378_p2(54 downto 52);
                tmp_9_reg_638 <= tmp_9_fu_514_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                q_chunk_V_ret2_1_i_i_reg_648 <= grp_lut_div3_chunk_fu_111_ap_return_0;
                q_chunk_V_ret2_2_i_i_reg_653 <= grp_lut_div3_chunk_fu_118_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                q_chunk_V_ret2_3_i_i_reg_658 <= grp_lut_div3_chunk_fu_111_ap_return_0;
                q_chunk_V_ret2_4_i_i_reg_663 <= grp_lut_div3_chunk_fu_118_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                q_chunk_V_ret2_5_i_i_reg_668 <= grp_lut_div3_chunk_fu_111_ap_return_0;
                q_chunk_V_ret2_6_i_i_reg_673 <= grp_lut_div3_chunk_fu_118_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                q_chunk_V_ret2_7_i_i_reg_678 <= grp_lut_div3_chunk_fu_111_ap_return_0;
                q_chunk_V_ret2_8_i_i_reg_683 <= grp_lut_div3_chunk_fu_118_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                q_chunk_V_ret2_9_i_i_reg_688 <= grp_lut_div3_chunk_fu_111_ap_return_0;
                q_chunk_V_ret2_i_i_10_reg_693 <= grp_lut_div3_chunk_fu_118_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                q_chunk_V_ret2_i_i_reg_643 <= grp_lut_div3_chunk_fu_118_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
                reg_141 <= grp_lut_div3_chunk_fu_118_ap_return_1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_1_fu_192_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((tmp_1_fu_192_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((tmp_1_fu_192_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_Repl2_s_phi_fu_105_p4_assign_proc : process(tmp_1_reg_564, new_mant_V_1_fu_522_p14, p_Repl2_s_reg_102, ap_CS_fsm_state8)
    begin
        if (((tmp_1_reg_564 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_phi_mux_p_Repl2_s_phi_fu_105_p4 <= new_mant_V_1_fu_522_p14;
        else 
            ap_phi_mux_p_Repl2_s_phi_fu_105_p4 <= p_Repl2_s_reg_102;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state8, out_fu_550_p1, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_return <= out_fu_550_p1;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    d_chunk_V_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_reg_573),4));

    grp_lut_div3_chunk_fu_111_d_V_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, tmp_1_reg_564, p_Result_22_1_i_i_reg_583, p_Result_22_3_i_i_reg_593, p_Result_22_5_i_i_reg_603, p_Result_22_7_i_i_reg_613, p_Result_22_9_i_i_reg_623, p_Result_22_10_i_i_reg_633, ap_CS_fsm_state8, d_chunk_V_fu_518_p1)
    begin
        if (((tmp_1_reg_564 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_lut_div3_chunk_fu_111_d_V <= p_Result_22_10_i_i_reg_633;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_lut_div3_chunk_fu_111_d_V <= p_Result_22_9_i_i_reg_623;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_lut_div3_chunk_fu_111_d_V <= p_Result_22_7_i_i_reg_613;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_lut_div3_chunk_fu_111_d_V <= p_Result_22_5_i_i_reg_603;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_lut_div3_chunk_fu_111_d_V <= p_Result_22_3_i_i_reg_593;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_lut_div3_chunk_fu_111_d_V <= p_Result_22_1_i_i_reg_583;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_111_d_V <= d_chunk_V_fu_518_p1;
        else 
            grp_lut_div3_chunk_fu_111_d_V <= "XXXX";
        end if; 
    end process;


    grp_lut_div3_chunk_fu_111_r_in_V_assign_proc : process(reg_141, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, tmp_1_reg_564, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((tmp_1_reg_564 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            grp_lut_div3_chunk_fu_111_r_in_V <= reg_141;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_111_r_in_V <= ap_const_lv2_0;
        else 
            grp_lut_div3_chunk_fu_111_r_in_V <= "XX";
        end if; 
    end process;


    grp_lut_div3_chunk_fu_118_d_V_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, tmp_1_reg_564, p_Result_22_i_i_reg_578, p_Result_22_2_i_i_reg_588, p_Result_22_4_i_i_reg_598, p_Result_22_6_i_i_reg_608, p_Result_22_8_i_i_reg_618, p_Result_22_i_i_8_reg_628, tmp_9_reg_638, ap_CS_fsm_state8)
    begin
        if (((tmp_1_reg_564 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_lut_div3_chunk_fu_118_d_V <= tmp_9_reg_638;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_lut_div3_chunk_fu_118_d_V <= p_Result_22_i_i_8_reg_628;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_lut_div3_chunk_fu_118_d_V <= p_Result_22_8_i_i_reg_618;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_lut_div3_chunk_fu_118_d_V <= p_Result_22_6_i_i_reg_608;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_lut_div3_chunk_fu_118_d_V <= p_Result_22_4_i_i_reg_598;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_lut_div3_chunk_fu_118_d_V <= p_Result_22_2_i_i_reg_588;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_118_d_V <= p_Result_22_i_i_reg_578;
        else 
            grp_lut_div3_chunk_fu_118_d_V <= "XXXX";
        end if; 
    end process;

    icmp_fu_254_p2 <= "1" when (tmp_8_fu_244_p4 = ap_const_lv10_0) else "0";
    new_exp_V_1_fu_204_p2 <= std_logic_vector(unsigned(new_exp_V_fu_158_p4) - unsigned(shift_V_cast_cast_fu_184_p3));
    new_exp_V_fu_158_p4 <= p_Val2_s_fu_146_p1(62 downto 52);
    new_mant_V_1_fu_522_p14 <= ((((((((((((q_chunk_V_ret2_i_i_reg_643 & q_chunk_V_ret2_1_i_i_reg_648) & q_chunk_V_ret2_2_i_i_reg_653) & q_chunk_V_ret2_3_i_i_reg_658) & q_chunk_V_ret2_4_i_i_reg_663) & q_chunk_V_ret2_5_i_i_reg_668) & q_chunk_V_ret2_6_i_i_reg_673) & q_chunk_V_ret2_7_i_i_reg_678) & q_chunk_V_ret2_8_i_i_reg_683) & q_chunk_V_ret2_9_i_i_reg_688) & q_chunk_V_ret2_i_i_10_reg_693) & grp_lut_div3_chunk_fu_111_ap_return_0) & grp_lut_div3_chunk_fu_118_ap_return_0);
    new_mant_V_fu_168_p1 <= p_Val2_s_fu_146_p1(52 - 1 downto 0);
    out_fu_550_p1 <= p_Result_s_fu_542_p4;
    p_Repl2_1_fu_224_p3 <= 
        p_new_exp_V_1_fu_210_p3 when (tmp_7_fu_218_p2(0) = '1') else 
        new_exp_V_1_fu_204_p2;
    p_Result_s_fu_542_p4 <= ((p_Repl2_2_reg_554 & p_Repl2_1_reg_568) & ap_phi_mux_p_Repl2_s_phi_fu_105_p4);
    p_Val2_s_fu_146_p1 <= in_r;
    p_cast_fu_342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xf_V_1_fu_334_p3),55));
    p_new_exp_V_1_fu_210_p3 <= 
        ap_const_lv11_7FF when (tmp_1_fu_192_p2(0) = '1') else 
        ap_const_lv11_0;
    r_V_1_cast_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_fu_354_p2),55));
    r_V_3_fu_354_p2 <= std_logic_vector(shift_right(unsigned(xf_V_1_fu_334_p3),to_integer(unsigned('0' & tmp_cast_fu_350_p1(31-1 downto 0)))));
    r_V_4_fu_364_p2 <= std_logic_vector(shift_left(unsigned(p_cast_fu_342_p1),to_integer(unsigned('0' & tmp_s_fu_346_p1(31-1 downto 0)))));
    sel_tmp3_demorgan_fu_272_p2 <= (tmp_5_fu_238_p2 or tmp_4_fu_232_p2);
    sel_tmp3_fu_278_p2 <= (sel_tmp3_demorgan_fu_272_p2 xor ap_const_lv1_1);
    sel_tmp4_fu_284_p2 <= (sel_tmp3_fu_278_p2 and icmp_fu_254_p2);
    sel_tmp7_fu_306_p2 <= (tmp_4_fu_232_p2 xor ap_const_lv1_1);
    sel_tmp8_fu_312_p2 <= (tmp_5_fu_238_p2 and sel_tmp7_fu_306_p2);
    shift_V_1_fu_266_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(new_exp_V_fu_158_p4));
    shift_V_2_fu_290_p3 <= 
        shift_V_fu_260_p2 when (sel_tmp4_fu_284_p2(0) = '1') else 
        shift_V_1_fu_266_p2;
    shift_V_3_fu_298_p3 <= 
        ap_const_lv11_0 when (tmp_4_fu_232_p2(0) = '1') else 
        shift_V_2_fu_290_p3;
    shift_V_4_fu_318_p3 <= 
        shift_V_cast_cast_fu_184_p3 when (sel_tmp8_fu_312_p2(0) = '1') else 
        shift_V_3_fu_298_p3;
    shift_V_cast_cast_fu_184_p3 <= 
        ap_const_lv11_1 when (tmp_fu_176_p3(0) = '1') else 
        ap_const_lv11_2;
    shift_V_fu_260_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) - unsigned(new_exp_V_fu_158_p4));
    tmp_1_fu_192_p2 <= "1" when (new_exp_V_fu_158_p4 = ap_const_lv11_7FF) else "0";
    tmp_2_fu_198_p2 <= "1" when (unsigned(shift_V_cast_cast_fu_184_p3) > unsigned(new_exp_V_fu_158_p4)) else "0";
    tmp_3_fu_326_p3 <= (ap_const_lv1_1 & new_mant_V_fu_168_p1);
    tmp_4_fu_232_p2 <= "1" when (new_exp_V_fu_158_p4 = ap_const_lv11_0) else "0";
    tmp_5_fu_238_p2 <= "1" when (unsigned(shift_V_cast_cast_fu_184_p3) < unsigned(new_exp_V_fu_158_p4)) else "0";
    tmp_7_fu_218_p2 <= (tmp_2_fu_198_p2 or tmp_1_fu_192_p2);
    tmp_8_fu_244_p4 <= p_Val2_s_fu_146_p1(62 downto 53);
    tmp_9_fu_514_p1 <= xf_V_fu_378_p2(4 - 1 downto 0);
    tmp_cast_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_4_fu_318_p3),53));
    tmp_fu_176_p3 <= p_Val2_s_fu_146_p1(51 downto 51);
    tmp_s_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_4_fu_318_p3),55));
    xf_V_1_fu_334_p3 <= 
        xf_V_5_cast_fu_172_p1 when (tmp_4_fu_232_p2(0) = '1') else 
        tmp_3_fu_326_p3;
    xf_V_3_fu_370_p3 <= 
        r_V_1_cast_fu_360_p1 when (icmp_fu_254_p2(0) = '1') else 
        r_V_4_fu_364_p2;
    xf_V_5_cast_fu_172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(new_mant_V_fu_168_p1),53));
    xf_V_fu_378_p2 <= std_logic_vector(unsigned(ap_const_lv55_1) + unsigned(xf_V_3_fu_370_p3));
end behav;
