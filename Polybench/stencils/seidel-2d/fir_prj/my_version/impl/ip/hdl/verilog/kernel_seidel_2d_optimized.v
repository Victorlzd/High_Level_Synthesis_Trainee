// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_seidel_2d_optimized,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.531475,HLS_SYN_LAT=4362617321,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=3,HLS_SYN_FF=3611,HLS_SYN_LUT=3715,HLS_VERSION=2018_2}" *)

module kernel_seidel_2d_optimized (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tsteps,
        n,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_we1,
        A_d1,
        A_q1
);

parameter    ap_ST_fsm_state1 = 140'd1;
parameter    ap_ST_fsm_state2 = 140'd2;
parameter    ap_ST_fsm_state3 = 140'd4;
parameter    ap_ST_fsm_state4 = 140'd8;
parameter    ap_ST_fsm_state5 = 140'd16;
parameter    ap_ST_fsm_state6 = 140'd32;
parameter    ap_ST_fsm_state7 = 140'd64;
parameter    ap_ST_fsm_state8 = 140'd128;
parameter    ap_ST_fsm_state9 = 140'd256;
parameter    ap_ST_fsm_state10 = 140'd512;
parameter    ap_ST_fsm_state11 = 140'd1024;
parameter    ap_ST_fsm_state12 = 140'd2048;
parameter    ap_ST_fsm_state13 = 140'd4096;
parameter    ap_ST_fsm_state14 = 140'd8192;
parameter    ap_ST_fsm_state15 = 140'd16384;
parameter    ap_ST_fsm_state16 = 140'd32768;
parameter    ap_ST_fsm_state17 = 140'd65536;
parameter    ap_ST_fsm_state18 = 140'd131072;
parameter    ap_ST_fsm_state19 = 140'd262144;
parameter    ap_ST_fsm_state20 = 140'd524288;
parameter    ap_ST_fsm_state21 = 140'd1048576;
parameter    ap_ST_fsm_state22 = 140'd2097152;
parameter    ap_ST_fsm_state23 = 140'd4194304;
parameter    ap_ST_fsm_state24 = 140'd8388608;
parameter    ap_ST_fsm_state25 = 140'd16777216;
parameter    ap_ST_fsm_state26 = 140'd33554432;
parameter    ap_ST_fsm_state27 = 140'd67108864;
parameter    ap_ST_fsm_state28 = 140'd134217728;
parameter    ap_ST_fsm_state29 = 140'd268435456;
parameter    ap_ST_fsm_state30 = 140'd536870912;
parameter    ap_ST_fsm_state31 = 140'd1073741824;
parameter    ap_ST_fsm_state32 = 140'd2147483648;
parameter    ap_ST_fsm_state33 = 140'd4294967296;
parameter    ap_ST_fsm_state34 = 140'd8589934592;
parameter    ap_ST_fsm_state35 = 140'd17179869184;
parameter    ap_ST_fsm_state36 = 140'd34359738368;
parameter    ap_ST_fsm_state37 = 140'd68719476736;
parameter    ap_ST_fsm_state38 = 140'd137438953472;
parameter    ap_ST_fsm_state39 = 140'd274877906944;
parameter    ap_ST_fsm_state40 = 140'd549755813888;
parameter    ap_ST_fsm_state41 = 140'd1099511627776;
parameter    ap_ST_fsm_state42 = 140'd2199023255552;
parameter    ap_ST_fsm_state43 = 140'd4398046511104;
parameter    ap_ST_fsm_state44 = 140'd8796093022208;
parameter    ap_ST_fsm_state45 = 140'd17592186044416;
parameter    ap_ST_fsm_state46 = 140'd35184372088832;
parameter    ap_ST_fsm_state47 = 140'd70368744177664;
parameter    ap_ST_fsm_state48 = 140'd140737488355328;
parameter    ap_ST_fsm_state49 = 140'd281474976710656;
parameter    ap_ST_fsm_state50 = 140'd562949953421312;
parameter    ap_ST_fsm_state51 = 140'd1125899906842624;
parameter    ap_ST_fsm_state52 = 140'd2251799813685248;
parameter    ap_ST_fsm_state53 = 140'd4503599627370496;
parameter    ap_ST_fsm_state54 = 140'd9007199254740992;
parameter    ap_ST_fsm_state55 = 140'd18014398509481984;
parameter    ap_ST_fsm_state56 = 140'd36028797018963968;
parameter    ap_ST_fsm_state57 = 140'd72057594037927936;
parameter    ap_ST_fsm_state58 = 140'd144115188075855872;
parameter    ap_ST_fsm_state59 = 140'd288230376151711744;
parameter    ap_ST_fsm_state60 = 140'd576460752303423488;
parameter    ap_ST_fsm_state61 = 140'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 140'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 140'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 140'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 140'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 140'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 140'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 140'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 140'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 140'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 140'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 140'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 140'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 140'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 140'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 140'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 140'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 140'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 140'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 140'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 140'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 140'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 140'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 140'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 140'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 140'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 140'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 140'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 140'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 140'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 140'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 140'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 140'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 140'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 140'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 140'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 140'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 140'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 140'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 140'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 140'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 140'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 140'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 140'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 140'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 140'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 140'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 140'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 140'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 140'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 140'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 140'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 140'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 140'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 140'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 140'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 140'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 140'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 140'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 140'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 140'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 140'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 140'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 140'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 140'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 140'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 140'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 140'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 140'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 140'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 140'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 140'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 140'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 140'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 140'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 140'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 140'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 140'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 140'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 140'd696898287454081973172991196020261297061888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] tsteps;
input  [31:0] n;
output  [19:0] A_address0;
output   A_ce0;
input  [63:0] A_q0;
output  [19:0] A_address1;
output   A_ce1;
output   A_we1;
output  [63:0] A_d1;
input  [63:0] A_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[19:0] A_address0;
reg A_ce0;
reg[19:0] A_address1;
reg A_ce1;
reg A_we1;

(* fsm_encoding = "none" *) reg   [139:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_227;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state111;
wire   [63:0] grp_fu_223_p2;
reg   [63:0] reg_234;
wire    ap_CS_fsm_state125;
wire   [4:0] t_1_fu_245_p2;
reg   [4:0] t_1_reg_637;
wire    ap_CS_fsm_state2;
wire   [9:0] tmp_fu_257_p2;
reg   [9:0] tmp_reg_645;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond1_fu_251_p2;
wire   [9:0] i_1_fu_263_p2;
reg   [9:0] i_1_reg_650;
wire    ap_CS_fsm_state4;
wire   [19:0] grp_fu_616_p2;
reg   [19:0] tmp_s_reg_671;
wire    ap_CS_fsm_state7;
wire   [19:0] grp_fu_622_p2;
reg   [19:0] tmp_3_reg_678;
wire   [19:0] grp_fu_628_p2;
reg   [19:0] tmp_4_reg_685;
wire   [9:0] tmp_5_fu_285_p2;
reg   [9:0] tmp_5_reg_695;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond_fu_279_p2;
wire   [19:0] tmp_6_cast_fu_291_p1;
reg   [19:0] tmp_6_cast_reg_700;
wire    ap_CS_fsm_state9;
(* use_dsp48 = "no" *) wire   [19:0] tmp_6_fu_294_p2;
reg   [19:0] tmp_6_reg_706;
wire   [19:0] tmp_7_cast_fu_299_p1;
reg   [19:0] tmp_7_cast_reg_711;
(* use_dsp48 = "no" *) wire   [19:0] tmp_14_fu_303_p2;
reg   [19:0] tmp_14_reg_717;
wire    ap_CS_fsm_state10;
reg   [63:0] A_load_1_reg_732;
wire   [9:0] j_1_fu_316_p2;
reg   [9:0] j_1_reg_737;
wire    ap_CS_fsm_state22;
wire   [19:0] tmp_9_cast_fu_322_p1;
reg   [19:0] tmp_9_cast_reg_743;
wire    ap_CS_fsm_state23;
(* use_dsp48 = "no" *) wire   [19:0] tmp_17_fu_325_p2;
reg   [19:0] tmp_17_reg_749;
wire    ap_CS_fsm_state24;
(* use_dsp48 = "no" *) wire   [19:0] tmp_7_fu_334_p2;
reg   [19:0] tmp_7_reg_759;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
(* use_dsp48 = "no" *) wire   [19:0] tmp_9_fu_342_p2;
reg   [19:0] tmp_9_reg_769;
wire    ap_CS_fsm_state51;
(* use_dsp48 = "no" *) wire   [19:0] tmp_15_fu_346_p2;
reg   [19:0] tmp_15_reg_774;
(* use_dsp48 = "no" *) wire   [19:0] tmp_16_fu_350_p2;
reg   [19:0] tmp_16_reg_779;
(* use_dsp48 = "no" *) wire   [19:0] tmp_18_fu_354_p2;
reg   [19:0] tmp_18_reg_784;
(* use_dsp48 = "no" *) wire   [19:0] tmp_19_fu_358_p2;
reg   [19:0] tmp_19_reg_789;
reg   [19:0] A_addr_4_reg_794;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state108;
reg   [0:0] p_Repl2_2_reg_820;
wire    ap_CS_fsm_state126;
reg   [10:0] new_exp_V_1_reg_825;
wire   [51:0] new_mant_V_1_fu_404_p1;
reg   [51:0] new_mant_V_1_reg_836;
wire   [0:0] icmp_fu_418_p2;
reg   [0:0] icmp_reg_843;
wire   [0:0] icmp3_fu_434_p2;
reg   [0:0] icmp3_reg_848;
wire   [10:0] shift_V_i_cast_cast_fu_440_p3;
reg   [10:0] shift_V_i_cast_cast_reg_854;
wire    ap_CS_fsm_state127;
wire   [0:0] tmp_3_i_fu_447_p2;
reg   [0:0] tmp_3_i_reg_861;
wire   [0:0] tmp_4_i_fu_452_p2;
reg   [0:0] tmp_4_i_reg_869;
wire   [10:0] shift_V_fu_457_p2;
reg   [10:0] shift_V_reg_875;
wire   [10:0] shift_V_1_fu_462_p2;
reg   [10:0] shift_V_1_reg_880;
wire   [0:0] tmp_1_i_fu_467_p2;
reg   [0:0] tmp_1_i_reg_885;
wire    ap_CS_fsm_state128;
wire   [10:0] new_exp_V_fu_471_p2;
reg   [10:0] new_exp_V_reg_890;
wire   [10:0] shift_V_4_fu_513_p3;
reg   [10:0] shift_V_4_reg_895;
wire   [0:0] tmp_2_i_fu_520_p2;
reg   [0:0] tmp_2_i_reg_901;
wire    ap_CS_fsm_state129;
wire   [51:0] grp_fu_534_p2;
reg   [51:0] r_V_reg_923;
wire    ap_CS_fsm_state135;
wire   [56:0] grp_fu_539_p2;
reg   [56:0] r_V_1_reg_928;
wire   [56:0] xf_V_7_fu_548_p3;
reg   [56:0] xf_V_7_reg_933;
wire    ap_CS_fsm_state136;
wire   [56:0] xf_V_6_fu_569_p2;
reg   [56:0] xf_V_6_reg_939;
wire    ap_CS_fsm_state137;
wire   [10:0] p_Repl2_1_fu_591_p3;
reg   [10:0] p_Repl2_1_reg_944;
wire    ap_CS_fsm_state138;
wire    grp_int_57_div9_fu_206_ap_idle;
wire    grp_int_57_div9_fu_206_ap_ready;
wire    grp_int_57_div9_fu_206_ap_done;
wire   [51:0] p_Repl2_s_fu_598_p3;
reg   [51:0] p_Repl2_s_reg_949;
wire    ap_CS_fsm_state139;
wire    grp_int_57_div9_fu_206_ap_start;
wire   [56:0] grp_int_57_div9_fu_206_ap_return;
reg   [4:0] t_reg_171;
reg   [9:0] i_reg_182;
wire   [0:0] exitcond2_fu_239_p2;
reg   [9:0] j_reg_194;
wire    ap_CS_fsm_state140;
reg    grp_int_57_div9_fu_206_ap_start_reg;
wire   [63:0] tmp_17_cast_fu_308_p1;
wire   [63:0] tmp_20_cast_fu_312_p1;
wire   [63:0] tmp_23_cast_fu_330_p1;
wire   [63:0] tmp_18_cast_fu_338_p1;
wire   [63:0] tmp_21_cast_fu_362_p1;
wire   [63:0] tmp_24_cast_fu_366_p1;
wire   [63:0] tmp_19_cast_fu_370_p1;
wire   [63:0] tmp_22_cast_fu_374_p1;
wire   [63:0] tmp_25_cast_fu_378_p1;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state110;
reg   [63:0] grp_fu_223_p0;
reg   [63:0] grp_fu_223_p1;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state112;
wire   [63:0] p_Val2_s_fu_382_p1;
wire   [2:0] tmp_22_fu_408_p4;
wire   [9:0] tmp_23_fu_424_p4;
wire   [0:0] sel_tmp2_demorgan_i_fu_475_p2;
wire   [0:0] sel_tmp2_i_fu_479_p2;
wire   [0:0] sel_tmp3_i_fu_485_p2;
wire   [10:0] shift_V_2_fu_490_p3;
wire   [0:0] sel_tmp6_i_fu_503_p2;
wire   [0:0] sel_tmp7_i_fu_508_p2;
wire   [10:0] shift_V_3_fu_496_p3;
wire   [51:0] grp_fu_534_p1;
wire   [56:0] grp_fu_539_p0;
wire   [56:0] grp_fu_539_p1;
wire   [56:0] r_V_i_cast_fu_545_p1;
reg   [56:0] p_Result_s_fu_554_p4;
wire   [56:0] xf_V_5_fu_563_p3;
wire   [0:0] tmp_6_i_fu_587_p2;
wire   [10:0] p_i_fu_580_p3;
wire   [51:0] new_mant_V_fu_576_p1;
wire   [63:0] p_Result_4_fu_604_p4;
wire   [9:0] grp_fu_616_p0;
wire   [10:0] grp_fu_616_p1;
wire   [9:0] grp_fu_622_p0;
wire   [10:0] grp_fu_622_p1;
wire   [9:0] grp_fu_628_p0;
wire   [10:0] grp_fu_628_p1;
reg   [139:0] ap_NS_fsm;
wire   [19:0] grp_fu_616_p00;
wire   [19:0] grp_fu_622_p00;
wire   [19:0] grp_fu_628_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 140'd1;
#0 grp_int_57_div9_fu_206_ap_start_reg = 1'b0;
end

int_57_div9 grp_int_57_div9_fu_206(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_int_57_div9_fu_206_ap_start),
    .ap_done(grp_int_57_div9_fu_206_ap_done),
    .ap_idle(grp_int_57_div9_fu_206_ap_idle),
    .ap_ready(grp_int_57_div9_fu_206_ap_ready),
    .in_V(xf_V_6_reg_939),
    .ap_return(grp_int_57_div9_fu_206_ap_return)
);

kernel_seidel_2d_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_seidel_2d_bkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_223_p0),
    .din1(grp_fu_223_p1),
    .ce(1'b1),
    .dout(grp_fu_223_p2)
);

kernel_seidel_2d_cud #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 52 ))
kernel_seidel_2d_cud_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(new_mant_V_1_reg_836),
    .din1(grp_fu_534_p1),
    .ce(1'b1),
    .dout(grp_fu_534_p2)
);

kernel_seidel_2d_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 57 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 57 ))
kernel_seidel_2d_dEe_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_539_p0),
    .din1(grp_fu_539_p1),
    .ce(1'b1),
    .dout(grp_fu_539_p2)
);

kernel_seidel_2d_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_seidel_2d_eOg_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_616_p0),
    .din1(grp_fu_616_p1),
    .ce(1'b1),
    .dout(grp_fu_616_p2)
);

kernel_seidel_2d_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_seidel_2d_eOg_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_622_p0),
    .din1(grp_fu_622_p1),
    .ce(1'b1),
    .dout(grp_fu_622_p2)
);

kernel_seidel_2d_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_seidel_2d_eOg_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_628_p0),
    .din1(grp_fu_628_p1),
    .ce(1'b1),
    .dout(grp_fu_628_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_int_57_div9_fu_206_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state137)) begin
            grp_int_57_div9_fu_206_ap_start_reg <= 1'b1;
        end else if ((grp_int_57_div9_fu_206_ap_ready == 1'b1)) begin
            grp_int_57_div9_fu_206_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_182 <= 10'd1;
    end else if (((exitcond_fu_279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_reg_182 <= i_1_reg_650;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j_reg_194 <= 10'd1;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        j_reg_194 <= j_1_reg_737;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state41))) begin
        reg_227 <= A_q1;
    end else if (((1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_227 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_251_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        t_reg_171 <= t_1_reg_637;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_reg_171 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        A_addr_4_reg_794 <= tmp_21_cast_fu_362_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        A_load_1_reg_732 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_251_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_1_reg_650 <= i_1_fu_263_p2;
        tmp_reg_645 <= tmp_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        icmp3_reg_848 <= icmp3_fu_434_p2;
        icmp_reg_843 <= icmp_fu_418_p2;
        new_exp_V_1_reg_825 <= {{p_Val2_s_fu_382_p1[62:52]}};
        new_mant_V_1_reg_836 <= new_mant_V_1_fu_404_p1;
        p_Repl2_2_reg_820 <= p_Val2_s_fu_382_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        j_1_reg_737 <= j_1_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        new_exp_V_reg_890 <= new_exp_V_fu_471_p2;
        shift_V_4_reg_895 <= shift_V_4_fu_513_p3;
        tmp_1_i_reg_885 <= tmp_1_i_fu_467_p2;
        tmp_2_i_reg_901 <= tmp_2_i_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_int_57_div9_fu_206_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state138))) begin
        p_Repl2_1_reg_944 <= p_Repl2_1_fu_591_p3;
        p_Repl2_s_reg_949 <= p_Repl2_s_fu_598_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp3_reg_848 == 1'd0) & (1'b1 == ap_CS_fsm_state135))) begin
        r_V_1_reg_928 <= grp_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp3_reg_848 == 1'd1) & (1'b1 == ap_CS_fsm_state135))) begin
        r_V_reg_923 <= grp_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_234 <= grp_fu_223_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        shift_V_1_reg_880 <= shift_V_1_fu_462_p2;
        shift_V_i_cast_cast_reg_854[2 : 0] <= shift_V_i_cast_cast_fu_440_p3[2 : 0];
        shift_V_reg_875 <= shift_V_fu_457_p2;
        tmp_3_i_reg_861 <= tmp_3_i_fu_447_p2;
        tmp_4_i_reg_869 <= tmp_4_i_fu_452_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        t_1_reg_637 <= t_1_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_14_reg_717 <= tmp_14_fu_303_p2;
        tmp_6_cast_reg_700[9 : 0] <= tmp_6_cast_fu_291_p1[9 : 0];
        tmp_6_reg_706 <= tmp_6_fu_294_p2;
        tmp_7_cast_reg_711[9 : 0] <= tmp_7_cast_fu_299_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        tmp_15_reg_774 <= tmp_15_fu_346_p2;
        tmp_16_reg_779 <= tmp_16_fu_350_p2;
        tmp_18_reg_784 <= tmp_18_fu_354_p2;
        tmp_19_reg_789 <= tmp_19_fu_358_p2;
        tmp_9_reg_769 <= tmp_9_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_17_reg_749 <= tmp_17_fu_325_p2;
        tmp_9_cast_reg_743[9 : 0] <= tmp_9_cast_fu_322_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_3_reg_678 <= grp_fu_622_p2;
        tmp_4_reg_685 <= grp_fu_628_p2;
        tmp_s_reg_671 <= grp_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_5_reg_695 <= tmp_5_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_7_reg_759 <= tmp_7_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state137)) begin
        xf_V_6_reg_939 <= xf_V_6_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        xf_V_7_reg_933 <= xf_V_7_fu_548_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        A_address0 = tmp_25_cast_fu_378_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        A_address0 = tmp_19_cast_fu_370_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        A_address0 = tmp_21_cast_fu_362_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        A_address0 = tmp_23_cast_fu_330_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        A_address0 = tmp_17_cast_fu_308_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        A_address1 = A_addr_4_reg_794;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        A_address1 = tmp_22_cast_fu_374_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        A_address1 = tmp_24_cast_fu_366_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        A_address1 = tmp_18_cast_fu_338_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        A_address1 = tmp_20_cast_fu_312_p1;
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state13))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state13))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        A_we1 = 1'b1;
    end else begin
        A_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_223_p0 = reg_234;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_223_p0 = reg_227;
    end else begin
        grp_fu_223_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_223_p1 = reg_227;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_223_p1 = A_load_1_reg_732;
    end else begin
        grp_fu_223_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond2_fu_239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond1_fu_251_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond_fu_279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            if (((grp_int_57_div9_fu_206_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state138))) begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_d1 = p_Result_4_fu_604_p4;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign exitcond1_fu_251_p2 = ((i_reg_182 == 10'd999) ? 1'b1 : 1'b0);

assign exitcond2_fu_239_p2 = ((t_reg_171 == 5'd20) ? 1'b1 : 1'b0);

assign exitcond_fu_279_p2 = ((j_reg_194 == 10'd999) ? 1'b1 : 1'b0);

assign grp_fu_534_p1 = shift_V_4_reg_895;

assign grp_fu_539_p0 = new_mant_V_1_reg_836;

assign grp_fu_539_p1 = shift_V_4_reg_895;

assign grp_fu_616_p0 = grp_fu_616_p00;

assign grp_fu_616_p00 = tmp_reg_645;

assign grp_fu_616_p1 = 20'd1000;

assign grp_fu_622_p0 = grp_fu_622_p00;

assign grp_fu_622_p00 = i_reg_182;

assign grp_fu_622_p1 = 20'd1000;

assign grp_fu_628_p0 = grp_fu_628_p00;

assign grp_fu_628_p00 = i_1_reg_650;

assign grp_fu_628_p1 = 20'd1000;

assign grp_int_57_div9_fu_206_ap_start = grp_int_57_div9_fu_206_ap_start_reg;

assign i_1_fu_263_p2 = (i_reg_182 + 10'd1);

assign icmp3_fu_434_p2 = ((tmp_23_fu_424_p4 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_418_p2 = ((tmp_22_fu_408_p4 == 3'd0) ? 1'b1 : 1'b0);

assign j_1_fu_316_p2 = (10'd1 + j_reg_194);

assign new_exp_V_fu_471_p2 = (new_exp_V_1_reg_825 - shift_V_i_cast_cast_reg_854);

assign new_mant_V_1_fu_404_p1 = p_Val2_s_fu_382_p1[51:0];

assign new_mant_V_fu_576_p1 = grp_int_57_div9_fu_206_ap_return[51:0];

assign p_Repl2_1_fu_591_p3 = ((tmp_6_i_fu_587_p2[0:0] === 1'b1) ? p_i_fu_580_p3 : new_exp_V_reg_890);

assign p_Repl2_s_fu_598_p3 = ((tmp_2_i_reg_901[0:0] === 1'b1) ? new_mant_V_1_reg_836 : new_mant_V_fu_576_p1);

assign p_Result_4_fu_604_p4 = {{{p_Repl2_2_reg_820}, {p_Repl2_1_reg_944}}, {p_Repl2_s_reg_949}};

always @ (*) begin
    p_Result_s_fu_554_p4 = xf_V_7_reg_933;
    p_Result_s_fu_554_p4[32'd52] = |(1'd1);
end

assign p_Val2_s_fu_382_p1 = reg_234;

assign p_i_fu_580_p3 = ((tmp_2_i_reg_901[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign r_V_i_cast_fu_545_p1 = r_V_reg_923;

assign sel_tmp2_demorgan_i_fu_475_p2 = (tmp_4_i_reg_869 | tmp_3_i_reg_861);

assign sel_tmp2_i_fu_479_p2 = (sel_tmp2_demorgan_i_fu_475_p2 ^ 1'd1);

assign sel_tmp3_i_fu_485_p2 = (sel_tmp2_i_fu_479_p2 & icmp3_reg_848);

assign sel_tmp6_i_fu_503_p2 = (tmp_3_i_reg_861 ^ 1'd1);

assign sel_tmp7_i_fu_508_p2 = (tmp_4_i_reg_869 & sel_tmp6_i_fu_503_p2);

assign shift_V_1_fu_462_p2 = ($signed(11'd2047) + $signed(new_exp_V_1_reg_825));

assign shift_V_2_fu_490_p3 = ((sel_tmp3_i_fu_485_p2[0:0] === 1'b1) ? shift_V_reg_875 : shift_V_1_reg_880);

assign shift_V_3_fu_496_p3 = ((tmp_3_i_reg_861[0:0] === 1'b1) ? 11'd0 : shift_V_2_fu_490_p3);

assign shift_V_4_fu_513_p3 = ((sel_tmp7_i_fu_508_p2[0:0] === 1'b1) ? shift_V_i_cast_cast_reg_854 : shift_V_3_fu_496_p3);

assign shift_V_fu_457_p2 = (11'd1 - new_exp_V_1_reg_825);

assign shift_V_i_cast_cast_fu_440_p3 = ((icmp_reg_843[0:0] === 1'b1) ? 11'd4 : 11'd3);

assign t_1_fu_245_p2 = (t_reg_171 + 5'd1);

assign tmp_14_fu_303_p2 = (tmp_7_cast_fu_299_p1 + tmp_s_reg_671);

assign tmp_15_fu_346_p2 = (tmp_7_cast_reg_711 + tmp_3_reg_678);

assign tmp_16_fu_350_p2 = (tmp_7_cast_reg_711 + tmp_4_reg_685);

assign tmp_17_cast_fu_308_p1 = tmp_6_reg_706;

assign tmp_17_fu_325_p2 = (tmp_9_cast_fu_322_p1 + tmp_s_reg_671);

assign tmp_18_cast_fu_338_p1 = tmp_7_reg_759;

assign tmp_18_fu_354_p2 = (tmp_9_cast_reg_743 + tmp_3_reg_678);

assign tmp_19_cast_fu_370_p1 = tmp_9_reg_769;

assign tmp_19_fu_358_p2 = (tmp_9_cast_reg_743 + tmp_4_reg_685);

assign tmp_1_i_fu_467_p2 = ((shift_V_i_cast_cast_reg_854 > new_exp_V_1_reg_825) ? 1'b1 : 1'b0);

assign tmp_20_cast_fu_312_p1 = tmp_14_reg_717;

assign tmp_21_cast_fu_362_p1 = tmp_15_reg_774;

assign tmp_22_cast_fu_374_p1 = tmp_16_reg_779;

assign tmp_22_fu_408_p4 = {{p_Val2_s_fu_382_p1[51:49]}};

assign tmp_23_cast_fu_330_p1 = tmp_17_reg_749;

assign tmp_23_fu_424_p4 = {{p_Val2_s_fu_382_p1[62:53]}};

assign tmp_24_cast_fu_366_p1 = tmp_18_reg_784;

assign tmp_25_cast_fu_378_p1 = tmp_19_reg_789;

assign tmp_2_i_fu_520_p2 = ((new_exp_V_1_reg_825 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_3_i_fu_447_p2 = ((new_exp_V_1_reg_825 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_4_i_fu_452_p2 = ((shift_V_i_cast_cast_fu_440_p3 < new_exp_V_1_reg_825) ? 1'b1 : 1'b0);

assign tmp_5_fu_285_p2 = ($signed(10'd1023) + $signed(j_reg_194));

assign tmp_6_cast_fu_291_p1 = tmp_5_reg_695;

assign tmp_6_fu_294_p2 = (tmp_6_cast_fu_291_p1 + tmp_s_reg_671);

assign tmp_6_i_fu_587_p2 = (tmp_2_i_reg_901 | tmp_1_i_reg_885);

assign tmp_7_cast_fu_299_p1 = j_reg_194;

assign tmp_7_fu_334_p2 = (tmp_6_cast_reg_700 + tmp_3_reg_678);

assign tmp_9_cast_fu_322_p1 = j_1_reg_737;

assign tmp_9_fu_342_p2 = (tmp_6_cast_reg_700 + tmp_4_reg_685);

assign tmp_fu_257_p2 = ($signed(i_reg_182) + $signed(10'd1023));

assign xf_V_5_fu_563_p3 = ((tmp_3_i_reg_861[0:0] === 1'b1) ? xf_V_7_reg_933 : p_Result_s_fu_554_p4);

assign xf_V_6_fu_569_p2 = (57'd4 + xf_V_5_fu_563_p3);

assign xf_V_7_fu_548_p3 = ((icmp3_reg_848[0:0] === 1'b1) ? r_V_i_cast_fu_545_p1 : r_V_1_reg_928);

always @ (posedge ap_clk) begin
    tmp_6_cast_reg_700[19:10] <= 10'b0000000000;
    tmp_7_cast_reg_711[19:10] <= 10'b0000000000;
    tmp_9_cast_reg_743[19:10] <= 10'b0000000000;
    shift_V_i_cast_cast_reg_854[10:3] <= 8'b00000000;
end

endmodule //kernel_seidel_2d_optimized
