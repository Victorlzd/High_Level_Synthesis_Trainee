// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_seidel_2d_my_version,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.134875,HLS_SYN_LAT=1095644361,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=6,HLS_SYN_FF=1310,HLS_SYN_LUT=5714,HLS_VERSION=2018_2}" *)

module kernel_seidel_2d_my_version (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tsteps,
        n,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_we1,
        A_d1,
        A_q1
);

parameter    ap_ST_fsm_state1 = 51'd1;
parameter    ap_ST_fsm_state2 = 51'd2;
parameter    ap_ST_fsm_state3 = 51'd4;
parameter    ap_ST_fsm_state4 = 51'd8;
parameter    ap_ST_fsm_state5 = 51'd16;
parameter    ap_ST_fsm_state6 = 51'd32;
parameter    ap_ST_fsm_state7 = 51'd64;
parameter    ap_ST_fsm_state8 = 51'd128;
parameter    ap_ST_fsm_state9 = 51'd256;
parameter    ap_ST_fsm_state10 = 51'd512;
parameter    ap_ST_fsm_state11 = 51'd1024;
parameter    ap_ST_fsm_state12 = 51'd2048;
parameter    ap_ST_fsm_state13 = 51'd4096;
parameter    ap_ST_fsm_state14 = 51'd8192;
parameter    ap_ST_fsm_state15 = 51'd16384;
parameter    ap_ST_fsm_state16 = 51'd32768;
parameter    ap_ST_fsm_state17 = 51'd65536;
parameter    ap_ST_fsm_state18 = 51'd131072;
parameter    ap_ST_fsm_state19 = 51'd262144;
parameter    ap_ST_fsm_state20 = 51'd524288;
parameter    ap_ST_fsm_state21 = 51'd1048576;
parameter    ap_ST_fsm_state22 = 51'd2097152;
parameter    ap_ST_fsm_state23 = 51'd4194304;
parameter    ap_ST_fsm_state24 = 51'd8388608;
parameter    ap_ST_fsm_state25 = 51'd16777216;
parameter    ap_ST_fsm_state26 = 51'd33554432;
parameter    ap_ST_fsm_state27 = 51'd67108864;
parameter    ap_ST_fsm_state28 = 51'd134217728;
parameter    ap_ST_fsm_state29 = 51'd268435456;
parameter    ap_ST_fsm_state30 = 51'd536870912;
parameter    ap_ST_fsm_state31 = 51'd1073741824;
parameter    ap_ST_fsm_state32 = 51'd2147483648;
parameter    ap_ST_fsm_state33 = 51'd4294967296;
parameter    ap_ST_fsm_state34 = 51'd8589934592;
parameter    ap_ST_fsm_state35 = 51'd17179869184;
parameter    ap_ST_fsm_state36 = 51'd34359738368;
parameter    ap_ST_fsm_state37 = 51'd68719476736;
parameter    ap_ST_fsm_state38 = 51'd137438953472;
parameter    ap_ST_fsm_state39 = 51'd274877906944;
parameter    ap_ST_fsm_state40 = 51'd549755813888;
parameter    ap_ST_fsm_state41 = 51'd1099511627776;
parameter    ap_ST_fsm_state42 = 51'd2199023255552;
parameter    ap_ST_fsm_state43 = 51'd4398046511104;
parameter    ap_ST_fsm_state44 = 51'd8796093022208;
parameter    ap_ST_fsm_state45 = 51'd17592186044416;
parameter    ap_ST_fsm_state46 = 51'd35184372088832;
parameter    ap_ST_fsm_state47 = 51'd70368744177664;
parameter    ap_ST_fsm_state48 = 51'd140737488355328;
parameter    ap_ST_fsm_state49 = 51'd281474976710656;
parameter    ap_ST_fsm_state50 = 51'd562949953421312;
parameter    ap_ST_fsm_state51 = 51'd1125899906842624;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] tsteps;
input  [31:0] n;
output  [19:0] A_address0;
output   A_ce0;
input  [63:0] A_q0;
output  [19:0] A_address1;
output   A_ce1;
output   A_we1;
output  [63:0] A_d1;
input  [63:0] A_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[19:0] A_address0;
reg A_ce0;
reg[19:0] A_address1;
reg A_ce1;
reg A_we1;

(* fsm_encoding = "none" *) reg   [50:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_211;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state42;
wire   [63:0] grp_fu_207_p2;
reg   [63:0] reg_218;
wire   [4:0] t_1_fu_229_p2;
reg   [4:0] t_1_reg_649;
wire    ap_CS_fsm_state2;
wire   [19:0] tmp_s_fu_628_p2;
reg   [19:0] tmp_s_reg_657;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond1_fu_235_p2;
wire   [19:0] tmp_1_fu_634_p2;
reg   [19:0] tmp_1_reg_664;
wire   [9:0] i_1_fu_255_p2;
reg   [9:0] i_1_reg_671;
wire   [19:0] tmp_4_fu_640_p2;
reg   [19:0] tmp_4_reg_676;
wire   [19:0] tmp_7_cast_fu_277_p1;
reg   [19:0] tmp_7_cast_reg_686;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_fu_265_p2;
wire   [19:0] tmp_8_cast_fu_291_p1;
reg   [19:0] tmp_8_cast_reg_697;
reg   [63:0] A_load_1_reg_708;
wire   [9:0] j_1_fu_305_p2;
reg   [9:0] j_1_reg_713;
wire    ap_CS_fsm_state9;
wire   [19:0] tmp_1_cast_fu_311_p1;
reg   [19:0] tmp_1_cast_reg_718;
wire    ap_CS_fsm_state14;
(* use_dsp48 = "no" *) wire   [19:0] tmp_8_fu_334_p2;
reg   [19:0] tmp_8_reg_734;
wire    ap_CS_fsm_state19;
reg   [19:0] A_addr_4_reg_739;
(* use_dsp48 = "no" *) wire   [19:0] tmp_17_fu_347_p2;
reg   [19:0] tmp_17_reg_745;
(* use_dsp48 = "no" *) wire   [19:0] tmp_19_fu_351_p2;
reg   [19:0] tmp_19_reg_750;
(* use_dsp48 = "no" *) wire   [19:0] tmp_20_fu_355_p2;
reg   [19:0] tmp_20_reg_755;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state39;
wire   [63:0] p_Val2_s_fu_375_p1;
reg   [63:0] p_Val2_s_reg_780;
wire    ap_CS_fsm_state47;
reg   [0:0] p_Repl2_2_reg_785;
reg   [10:0] new_exp_V_reg_790;
wire   [51:0] new_mant_V_fu_397_p1;
reg   [51:0] new_mant_V_reg_801;
wire   [0:0] icmp_fu_411_p2;
reg   [0:0] icmp_reg_808;
wire   [10:0] p_Repl2_1_fu_456_p3;
reg   [10:0] p_Repl2_1_reg_816;
wire    ap_CS_fsm_state48;
wire   [56:0] xf_V_4_fu_604_p2;
reg   [56:0] xf_V_4_reg_821;
wire   [0:0] tmp_1_i_fu_427_p2;
wire   [51:0] new_mant_V_1_fu_611_p1;
wire    ap_CS_fsm_state49;
wire    grp_int_57_div9_fu_202_ap_idle;
wire    grp_int_57_div9_fu_202_ap_ready;
wire    grp_int_57_div9_fu_202_ap_done;
wire    ap_CS_fsm_state50;
wire    grp_int_57_div9_fu_202_ap_start;
wire   [56:0] grp_int_57_div9_fu_202_ap_return;
reg   [4:0] t_reg_159;
reg   [9:0] i_reg_170;
wire   [0:0] exitcond2_fu_223_p2;
reg   [9:0] j_reg_181;
wire    ap_CS_fsm_state51;
reg   [51:0] p_Repl2_s_reg_193;
reg    grp_int_57_div9_fu_202_ap_start_reg;
wire   [63:0] tmp_18_cast_fu_286_p1;
wire   [63:0] tmp_21_cast_fu_300_p1;
wire   [63:0] tmp_24_cast_fu_320_p1;
wire   [63:0] tmp_19_cast_fu_329_p1;
wire   [63:0] tmp_22_cast_fu_342_p1;
wire   [63:0] tmp_25_cast_fu_359_p1;
wire   [63:0] tmp_20_cast_fu_363_p1;
wire   [63:0] tmp_23_cast_fu_367_p1;
wire   [63:0] tmp_26_cast_fu_371_p1;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
reg   [63:0] grp_fu_207_p0;
reg   [63:0] grp_fu_207_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state43;
wire   [9:0] tmp_fu_241_p2;
wire   [9:0] tmp_6_fu_271_p2;
(* use_dsp48 = "no" *) wire   [19:0] tmp_5_fu_281_p2;
(* use_dsp48 = "no" *) wire   [19:0] tmp_15_fu_295_p2;
(* use_dsp48 = "no" *) wire   [19:0] tmp_18_fu_315_p2;
(* use_dsp48 = "no" *) wire   [19:0] tmp_7_fu_325_p2;
(* use_dsp48 = "no" *) wire   [19:0] tmp_16_fu_338_p2;
wire   [2:0] tmp_23_fu_401_p4;
wire   [10:0] shift_V_i_cast_cast_fu_420_p3;
wire   [0:0] tmp_2_i_fu_432_p2;
wire   [0:0] tmp_14_fu_450_p2;
wire   [10:0] p_new_exp_V_1_i_fu_442_p3;
wire   [10:0] new_exp_V_1_fu_437_p2;
wire   [9:0] tmp_24_fu_474_p4;
wire   [0:0] tmp_4_i_fu_464_p2;
wire   [0:0] tmp_5_i_fu_469_p2;
wire   [0:0] sel_tmp3_demorgan_i_fu_499_p2;
wire   [0:0] icmp3_fu_483_p2;
wire   [0:0] sel_tmp3_i_fu_505_p2;
wire   [0:0] sel_tmp4_i_fu_511_p2;
wire   [10:0] shift_V_fu_489_p2;
wire   [10:0] shift_V_1_fu_494_p2;
wire   [10:0] shift_V_2_fu_517_p3;
wire   [0:0] sel_tmp7_i_fu_533_p2;
wire   [0:0] sel_tmp8_i_fu_539_p2;
wire   [10:0] shift_V_3_fu_525_p3;
wire   [52:0] xf_V_5_i_cast_fu_417_p1;
wire   [52:0] tmp_3_i_fu_553_p3;
wire   [52:0] xf_V_fu_560_p3;
wire   [10:0] shift_V_4_fu_545_p3;
wire   [52:0] tmp_i_cast_fu_576_p1;
wire   [52:0] r_V_fu_580_p2;
wire   [56:0] p_i_cast_fu_568_p1;
wire   [56:0] tmp_i_fu_572_p1;
wire   [56:0] r_V_i_cast_fu_586_p1;
wire   [56:0] r_V_1_fu_590_p2;
wire   [56:0] xf_V_3_fu_596_p3;
wire   [63:0] p_Result_s_fu_615_p4;
wire   [9:0] tmp_s_fu_628_p0;
wire   [10:0] tmp_s_fu_628_p1;
wire   [9:0] tmp_1_fu_634_p0;
wire   [10:0] tmp_1_fu_634_p1;
wire   [9:0] tmp_4_fu_640_p0;
wire   [10:0] tmp_4_fu_640_p1;
reg   [50:0] ap_NS_fsm;
wire   [19:0] tmp_1_fu_634_p00;
wire   [19:0] tmp_4_fu_640_p00;
wire   [19:0] tmp_s_fu_628_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 51'd1;
#0 grp_int_57_div9_fu_202_ap_start_reg = 1'b0;
end

int_57_div9 grp_int_57_div9_fu_202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_int_57_div9_fu_202_ap_start),
    .ap_done(grp_int_57_div9_fu_202_ap_done),
    .ap_idle(grp_int_57_div9_fu_202_ap_idle),
    .ap_ready(grp_int_57_div9_fu_202_ap_ready),
    .in_V(xf_V_4_reg_821),
    .ap_return(grp_int_57_div9_fu_202_ap_return)
);

kernel_seidel_2d_cud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
kernel_seidel_2d_cud_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_207_p0),
    .din1(grp_fu_207_p1),
    .ce(1'b1),
    .dout(grp_fu_207_p2)
);

kernel_seidel_2d_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_seidel_2d_dEe_U17(
    .din0(tmp_s_fu_628_p0),
    .din1(tmp_s_fu_628_p1),
    .dout(tmp_s_fu_628_p2)
);

kernel_seidel_2d_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_seidel_2d_dEe_U18(
    .din0(tmp_1_fu_634_p0),
    .din1(tmp_1_fu_634_p1),
    .dout(tmp_1_fu_634_p2)
);

kernel_seidel_2d_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
kernel_seidel_2d_dEe_U19(
    .din0(tmp_4_fu_640_p0),
    .din1(tmp_4_fu_640_p1),
    .dout(tmp_4_fu_640_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_int_57_div9_fu_202_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state48) & (tmp_1_i_fu_427_p2 == 1'd0))) begin
            grp_int_57_div9_fu_202_ap_start_reg <= 1'b1;
        end else if ((grp_int_57_div9_fu_202_ap_ready == 1'b1)) begin
            grp_int_57_div9_fu_202_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_223_p2 == 1'd0))) begin
        i_reg_170 <= 10'd1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_265_p2 == 1'd1))) begin
        i_reg_170 <= i_1_reg_671;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond1_fu_235_p2 == 1'd0))) begin
        j_reg_181 <= 10'd1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        j_reg_181 <= j_1_reg_713;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_i_fu_427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        p_Repl2_s_reg_193 <= new_mant_V_reg_801;
    end else if (((grp_int_57_div9_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
        p_Repl2_s_reg_193 <= new_mant_V_1_fu_611_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_211 <= A_q1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_211 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond1_fu_235_p2 == 1'd1))) begin
        t_reg_159 <= t_1_reg_649;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_reg_159 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        A_addr_4_reg_739 <= tmp_22_cast_fu_342_p1;
        tmp_17_reg_745 <= tmp_17_fu_347_p2;
        tmp_19_reg_750 <= tmp_19_fu_351_p2;
        tmp_20_reg_755 <= tmp_20_fu_355_p2;
        tmp_8_reg_734 <= tmp_8_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        A_load_1_reg_708 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond1_fu_235_p2 == 1'd0))) begin
        i_1_reg_671 <= i_1_fu_255_p2;
        tmp_1_reg_664 <= tmp_1_fu_634_p2;
        tmp_4_reg_676 <= tmp_4_fu_640_p2;
        tmp_s_reg_657 <= tmp_s_fu_628_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        icmp_reg_808 <= icmp_fu_411_p2;
        new_exp_V_reg_790 <= {{p_Val2_s_fu_375_p1[62:52]}};
        new_mant_V_reg_801 <= new_mant_V_fu_397_p1;
        p_Repl2_2_reg_785 <= p_Val2_s_fu_375_p1[32'd63];
        p_Val2_s_reg_780 <= p_Val2_s_fu_375_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j_1_reg_713 <= j_1_fu_305_p2;
        tmp_1_cast_reg_718[9 : 0] <= tmp_1_cast_fu_311_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        p_Repl2_1_reg_816 <= p_Repl2_1_fu_456_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_218 <= grp_fu_207_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        t_1_reg_649 <= t_1_fu_229_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_265_p2 == 1'd0))) begin
        tmp_7_cast_reg_686[9 : 0] <= tmp_7_cast_fu_277_p1[9 : 0];
        tmp_8_cast_reg_697[9 : 0] <= tmp_8_cast_fu_291_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & (tmp_1_i_fu_427_p2 == 1'd0))) begin
        xf_V_4_reg_821 <= xf_V_4_fu_604_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        A_address0 = tmp_26_cast_fu_371_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_address0 = tmp_20_cast_fu_363_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        A_address0 = tmp_22_cast_fu_342_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        A_address0 = tmp_24_cast_fu_320_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_address0 = tmp_18_cast_fu_286_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        A_address1 = A_addr_4_reg_739;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        A_address1 = tmp_23_cast_fu_367_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        A_address1 = tmp_25_cast_fu_359_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        A_address1 = tmp_19_cast_fu_329_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_address1 = tmp_21_cast_fu_300_p1;
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state22))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        A_we1 = 1'b1;
    end else begin
        A_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_223_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_fu_223_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_207_p0 = reg_218;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_207_p0 = reg_211;
    end else begin
        grp_fu_207_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_207_p1 = reg_211;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_207_p1 = A_load_1_reg_708;
    end else begin
        grp_fu_207_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond2_fu_223_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond1_fu_235_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_265_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((tmp_1_i_fu_427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((grp_int_57_div9_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_d1 = p_Result_s_fu_615_p4;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond1_fu_235_p2 = ((i_reg_170 == 10'd999) ? 1'b1 : 1'b0);

assign exitcond2_fu_223_p2 = ((t_reg_159 == 5'd20) ? 1'b1 : 1'b0);

assign exitcond_fu_265_p2 = ((j_reg_181 == 10'd999) ? 1'b1 : 1'b0);

assign grp_int_57_div9_fu_202_ap_start = grp_int_57_div9_fu_202_ap_start_reg;

assign i_1_fu_255_p2 = (i_reg_170 + 10'd1);

assign icmp3_fu_483_p2 = ((tmp_24_fu_474_p4 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_411_p2 = ((tmp_23_fu_401_p4 == 3'd0) ? 1'b1 : 1'b0);

assign j_1_fu_305_p2 = (10'd1 + j_reg_181);

assign new_exp_V_1_fu_437_p2 = (new_exp_V_reg_790 - shift_V_i_cast_cast_fu_420_p3);

assign new_mant_V_1_fu_611_p1 = grp_int_57_div9_fu_202_ap_return[51:0];

assign new_mant_V_fu_397_p1 = p_Val2_s_fu_375_p1[51:0];

assign p_Repl2_1_fu_456_p3 = ((tmp_14_fu_450_p2[0:0] === 1'b1) ? p_new_exp_V_1_i_fu_442_p3 : new_exp_V_1_fu_437_p2);

assign p_Result_s_fu_615_p4 = {{{p_Repl2_2_reg_785}, {p_Repl2_1_reg_816}}, {p_Repl2_s_reg_193}};

assign p_Val2_s_fu_375_p1 = grp_fu_207_p2;

assign p_i_cast_fu_568_p1 = xf_V_fu_560_p3;

assign p_new_exp_V_1_i_fu_442_p3 = ((tmp_1_i_fu_427_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign r_V_1_fu_590_p2 = p_i_cast_fu_568_p1 << tmp_i_fu_572_p1;

assign r_V_fu_580_p2 = xf_V_fu_560_p3 >> tmp_i_cast_fu_576_p1;

assign r_V_i_cast_fu_586_p1 = r_V_fu_580_p2;

assign sel_tmp3_demorgan_i_fu_499_p2 = (tmp_5_i_fu_469_p2 | tmp_4_i_fu_464_p2);

assign sel_tmp3_i_fu_505_p2 = (sel_tmp3_demorgan_i_fu_499_p2 ^ 1'd1);

assign sel_tmp4_i_fu_511_p2 = (sel_tmp3_i_fu_505_p2 & icmp3_fu_483_p2);

assign sel_tmp7_i_fu_533_p2 = (tmp_4_i_fu_464_p2 ^ 1'd1);

assign sel_tmp8_i_fu_539_p2 = (tmp_5_i_fu_469_p2 & sel_tmp7_i_fu_533_p2);

assign shift_V_1_fu_494_p2 = ($signed(11'd2047) + $signed(new_exp_V_reg_790));

assign shift_V_2_fu_517_p3 = ((sel_tmp4_i_fu_511_p2[0:0] === 1'b1) ? shift_V_fu_489_p2 : shift_V_1_fu_494_p2);

assign shift_V_3_fu_525_p3 = ((tmp_4_i_fu_464_p2[0:0] === 1'b1) ? 11'd0 : shift_V_2_fu_517_p3);

assign shift_V_4_fu_545_p3 = ((sel_tmp8_i_fu_539_p2[0:0] === 1'b1) ? shift_V_i_cast_cast_fu_420_p3 : shift_V_3_fu_525_p3);

assign shift_V_fu_489_p2 = (11'd1 - new_exp_V_reg_790);

assign shift_V_i_cast_cast_fu_420_p3 = ((icmp_reg_808[0:0] === 1'b1) ? 11'd4 : 11'd3);

assign t_1_fu_229_p2 = (t_reg_159 + 5'd1);

assign tmp_14_fu_450_p2 = (tmp_2_i_fu_432_p2 | tmp_1_i_fu_427_p2);

assign tmp_15_fu_295_p2 = (tmp_8_cast_fu_291_p1 + tmp_s_reg_657);

assign tmp_16_fu_338_p2 = (tmp_8_cast_reg_697 + tmp_1_reg_664);

assign tmp_17_fu_347_p2 = (tmp_8_cast_reg_697 + tmp_4_reg_676);

assign tmp_18_cast_fu_286_p1 = tmp_5_fu_281_p2;

assign tmp_18_fu_315_p2 = (tmp_1_cast_fu_311_p1 + tmp_s_reg_657);

assign tmp_19_cast_fu_329_p1 = tmp_7_fu_325_p2;

assign tmp_19_fu_351_p2 = (tmp_1_cast_reg_718 + tmp_1_reg_664);

assign tmp_1_cast_fu_311_p1 = j_1_fu_305_p2;

assign tmp_1_fu_634_p0 = tmp_1_fu_634_p00;

assign tmp_1_fu_634_p00 = i_reg_170;

assign tmp_1_fu_634_p1 = 20'd1000;

assign tmp_1_i_fu_427_p2 = ((new_exp_V_reg_790 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_20_cast_fu_363_p1 = tmp_8_reg_734;

assign tmp_20_fu_355_p2 = (tmp_1_cast_reg_718 + tmp_4_reg_676);

assign tmp_21_cast_fu_300_p1 = tmp_15_fu_295_p2;

assign tmp_22_cast_fu_342_p1 = tmp_16_fu_338_p2;

assign tmp_23_cast_fu_367_p1 = tmp_17_reg_745;

assign tmp_23_fu_401_p4 = {{p_Val2_s_fu_375_p1[51:49]}};

assign tmp_24_cast_fu_320_p1 = tmp_18_fu_315_p2;

assign tmp_24_fu_474_p4 = {{p_Val2_s_reg_780[62:53]}};

assign tmp_25_cast_fu_359_p1 = tmp_19_reg_750;

assign tmp_26_cast_fu_371_p1 = tmp_20_reg_755;

assign tmp_2_i_fu_432_p2 = ((shift_V_i_cast_cast_fu_420_p3 > new_exp_V_reg_790) ? 1'b1 : 1'b0);

assign tmp_3_i_fu_553_p3 = {{1'd1}, {new_mant_V_reg_801}};

assign tmp_4_fu_640_p0 = tmp_4_fu_640_p00;

assign tmp_4_fu_640_p00 = i_1_fu_255_p2;

assign tmp_4_fu_640_p1 = 20'd1000;

assign tmp_4_i_fu_464_p2 = ((new_exp_V_reg_790 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_5_fu_281_p2 = (tmp_7_cast_fu_277_p1 + tmp_s_reg_657);

assign tmp_5_i_fu_469_p2 = ((shift_V_i_cast_cast_fu_420_p3 < new_exp_V_reg_790) ? 1'b1 : 1'b0);

assign tmp_6_fu_271_p2 = ($signed(10'd1023) + $signed(j_reg_181));

assign tmp_7_cast_fu_277_p1 = tmp_6_fu_271_p2;

assign tmp_7_fu_325_p2 = (tmp_7_cast_reg_686 + tmp_1_reg_664);

assign tmp_8_cast_fu_291_p1 = j_reg_181;

assign tmp_8_fu_334_p2 = (tmp_7_cast_reg_686 + tmp_4_reg_676);

assign tmp_fu_241_p2 = ($signed(i_reg_170) + $signed(10'd1023));

assign tmp_i_cast_fu_576_p1 = shift_V_4_fu_545_p3;

assign tmp_i_fu_572_p1 = shift_V_4_fu_545_p3;

assign tmp_s_fu_628_p0 = tmp_s_fu_628_p00;

assign tmp_s_fu_628_p00 = tmp_fu_241_p2;

assign tmp_s_fu_628_p1 = 20'd1000;

assign xf_V_3_fu_596_p3 = ((icmp3_fu_483_p2[0:0] === 1'b1) ? r_V_i_cast_fu_586_p1 : r_V_1_fu_590_p2);

assign xf_V_4_fu_604_p2 = (57'd4 + xf_V_3_fu_596_p3);

assign xf_V_5_i_cast_fu_417_p1 = new_mant_V_reg_801;

assign xf_V_fu_560_p3 = ((tmp_4_i_fu_464_p2[0:0] === 1'b1) ? xf_V_5_i_cast_fu_417_p1 : tmp_3_i_fu_553_p3);

always @ (posedge ap_clk) begin
    tmp_7_cast_reg_686[19:10] <= 10'b0000000000;
    tmp_8_cast_reg_697[19:10] <= 10'b0000000000;
    tmp_1_cast_reg_718[19:10] <= 10'b0000000000;
end

endmodule //kernel_seidel_2d_my_version
