

================================================================
== Vivado HLS Report for 'operator_int_div10'
================================================================
* Date:           Thu Aug  2 16:06:36 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        operator_int_div
* Solution:       div10
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|    20.538|        0.62|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    1|    1|    1|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 17.1>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%in_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %in_r) nounwind"   --->   Operation 3 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %in_read, i32 31)" [test.cpp:5138->test.cpp:5153->test.cpp:5159]   --->   Operation 4 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%d_chunk_V = zext i1 %tmp to i3" [test.cpp:5138->test.cpp:5153->test.cpp:5159]   --->   Operation 5 'zext' 'd_chunk_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (3.42ns)   --->   "%call_ret_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %d_chunk_V, i3 0) nounwind" [test.cpp:5139->test.cpp:5153->test.cpp:5159]   --->   Operation 6 'call' 'call_ret_i_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%q_chunk_V = extractvalue { i3, i3 } %call_ret_i_i, 0" [test.cpp:5139->test.cpp:5153->test.cpp:5159]   --->   Operation 7 'extractvalue' 'q_chunk_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%r_V = extractvalue { i3, i3 } %call_ret_i_i, 1" [test.cpp:5139->test.cpp:5153->test.cpp:5159]   --->   Operation 8 'extractvalue' 'r_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%tmp_1 = trunc i3 %q_chunk_V to i1" [test.cpp:5140->test.cpp:5153->test.cpp:5159]   --->   Operation 9 'trunc' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_Result_19_i_i = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 28, i32 30)" [test.cpp:5144->test.cpp:5153->test.cpp:5159]   --->   Operation 10 'partselect' 'p_Result_19_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (3.42ns)   --->   "%call_ret4_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_19_i_i, i3 %r_V) nounwind" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 11 'call' 'call_ret4_i_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_i_i = extractvalue { i3, i3 } %call_ret4_i_i, 0" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 12 'extractvalue' 'q_chunk_V_ret2_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%r_V_ret3_i_i = extractvalue { i3, i3 } %call_ret4_i_i, 1" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 13 'extractvalue' 'r_V_ret3_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_Result_19_1_i_i = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 25, i32 27)" [test.cpp:5144->test.cpp:5153->test.cpp:5159]   --->   Operation 14 'partselect' 'p_Result_19_1_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (3.42ns)   --->   "%call_ret4_1_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_19_1_i_i, i3 %r_V_ret3_i_i) nounwind" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 15 'call' 'call_ret4_1_i_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_1_i_i = extractvalue { i3, i3 } %call_ret4_1_i_i, 0" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 16 'extractvalue' 'q_chunk_V_ret2_1_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%r_V_ret3_1_i_i = extractvalue { i3, i3 } %call_ret4_1_i_i, 1" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 17 'extractvalue' 'r_V_ret3_1_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_Result_19_2_i_i = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 22, i32 24)" [test.cpp:5144->test.cpp:5153->test.cpp:5159]   --->   Operation 18 'partselect' 'p_Result_19_2_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (3.42ns)   --->   "%call_ret4_2_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_19_2_i_i, i3 %r_V_ret3_1_i_i) nounwind" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 19 'call' 'call_ret4_2_i_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_2_i_i = extractvalue { i3, i3 } %call_ret4_2_i_i, 0" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 20 'extractvalue' 'q_chunk_V_ret2_2_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%r_V_ret3_2_i_i = extractvalue { i3, i3 } %call_ret4_2_i_i, 1" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 21 'extractvalue' 'r_V_ret3_2_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%p_Result_19_3_i_i = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 19, i32 21)" [test.cpp:5144->test.cpp:5153->test.cpp:5159]   --->   Operation 22 'partselect' 'p_Result_19_3_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (3.42ns)   --->   "%call_ret4_3_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_19_3_i_i, i3 %r_V_ret3_2_i_i) nounwind" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 23 'call' 'call_ret4_3_i_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_3_i_i = extractvalue { i3, i3 } %call_ret4_3_i_i, 0" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 24 'extractvalue' 'q_chunk_V_ret2_3_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%r_V_ret3_3_i_i = extractvalue { i3, i3 } %call_ret4_3_i_i, 1" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 25 'extractvalue' 'r_V_ret3_3_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%p_Result_19_4_i_i = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 16, i32 18)" [test.cpp:5144->test.cpp:5153->test.cpp:5159]   --->   Operation 26 'partselect' 'p_Result_19_4_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%p_Result_19_5_i_i = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 13, i32 15)" [test.cpp:5144->test.cpp:5153->test.cpp:5159]   --->   Operation 27 'partselect' 'p_Result_19_5_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%p_Result_19_6_i_i = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 10, i32 12)" [test.cpp:5144->test.cpp:5153->test.cpp:5159]   --->   Operation 28 'partselect' 'p_Result_19_6_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%p_Result_19_7_i_i = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 7, i32 9)" [test.cpp:5144->test.cpp:5153->test.cpp:5159]   --->   Operation 29 'partselect' 'p_Result_19_7_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%p_Result_19_8_i_i = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 4, i32 6)" [test.cpp:5144->test.cpp:5153->test.cpp:5159]   --->   Operation 30 'partselect' 'p_Result_19_8_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%p_Result_19_9_i_i = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 1, i32 3)" [test.cpp:5144->test.cpp:5153->test.cpp:5159]   --->   Operation 31 'partselect' 'p_Result_19_9_i_i' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 20.5>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %in_r) nounwind, !map !139"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !145"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @operator_int_div10_s) nounwind"   --->   Operation 34 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLatency(i32 0, i32 1, [1 x i8]* @p_str1) nounwind" [test.cpp:5157]   --->   Operation 35 'speclatency' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (3.42ns)   --->   "%call_ret4_4_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_19_4_i_i, i3 %r_V_ret3_3_i_i) nounwind" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 36 'call' 'call_ret4_4_i_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_4_i_i = extractvalue { i3, i3 } %call_ret4_4_i_i, 0" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 37 'extractvalue' 'q_chunk_V_ret2_4_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%r_V_ret3_4_i_i = extractvalue { i3, i3 } %call_ret4_4_i_i, 1" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 38 'extractvalue' 'r_V_ret3_4_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (3.42ns)   --->   "%call_ret4_5_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_19_5_i_i, i3 %r_V_ret3_4_i_i) nounwind" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 39 'call' 'call_ret4_5_i_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_5_i_i = extractvalue { i3, i3 } %call_ret4_5_i_i, 0" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 40 'extractvalue' 'q_chunk_V_ret2_5_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%r_V_ret3_5_i_i = extractvalue { i3, i3 } %call_ret4_5_i_i, 1" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 41 'extractvalue' 'r_V_ret3_5_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (3.42ns)   --->   "%call_ret4_6_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_19_6_i_i, i3 %r_V_ret3_5_i_i) nounwind" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 42 'call' 'call_ret4_6_i_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_6_i_i = extractvalue { i3, i3 } %call_ret4_6_i_i, 0" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 43 'extractvalue' 'q_chunk_V_ret2_6_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%r_V_ret3_6_i_i = extractvalue { i3, i3 } %call_ret4_6_i_i, 1" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 44 'extractvalue' 'r_V_ret3_6_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (3.42ns)   --->   "%call_ret4_7_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_19_7_i_i, i3 %r_V_ret3_6_i_i) nounwind" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 45 'call' 'call_ret4_7_i_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_7_i_i = extractvalue { i3, i3 } %call_ret4_7_i_i, 0" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 46 'extractvalue' 'q_chunk_V_ret2_7_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%r_V_ret3_7_i_i = extractvalue { i3, i3 } %call_ret4_7_i_i, 1" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 47 'extractvalue' 'r_V_ret3_7_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (3.42ns)   --->   "%call_ret4_8_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_19_8_i_i, i3 %r_V_ret3_7_i_i) nounwind" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 48 'call' 'call_ret4_8_i_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_8_i_i = extractvalue { i3, i3 } %call_ret4_8_i_i, 0" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 49 'extractvalue' 'q_chunk_V_ret2_8_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%r_V_ret3_8_i_i = extractvalue { i3, i3 } %call_ret4_8_i_i, 1" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 50 'extractvalue' 'r_V_ret3_8_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (3.42ns)   --->   "%call_ret4_9_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_19_9_i_i, i3 %r_V_ret3_8_i_i) nounwind" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 51 'call' 'call_ret4_9_i_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%q_chunk_V_ret2_9_i_i = extractvalue { i3, i3 } %call_ret4_9_i_i, 0" [test.cpp:5145->test.cpp:5153->test.cpp:5159]   --->   Operation 52 'extractvalue' 'q_chunk_V_ret2_9_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%p_Result_16_9_i_i = call i31 @_ssdm_op_BitConcatenate.i31.i1.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3(i1 %tmp_1, i3 %q_chunk_V_ret2_i_i, i3 %q_chunk_V_ret2_1_i_i, i3 %q_chunk_V_ret2_2_i_i, i3 %q_chunk_V_ret2_3_i_i, i3 %q_chunk_V_ret2_4_i_i, i3 %q_chunk_V_ret2_5_i_i, i3 %q_chunk_V_ret2_6_i_i, i3 %q_chunk_V_ret2_7_i_i, i3 %q_chunk_V_ret2_8_i_i, i3 %q_chunk_V_ret2_9_i_i) nounwind" [test.cpp:5146->test.cpp:5153->test.cpp:5159]   --->   Operation 53 'bitconcatenate' 'p_Result_16_9_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%agg_result_V_i = zext i31 %p_Result_16_9_i_i to i32" [test.cpp:5153->test.cpp:5159]   --->   Operation 54 'zext' 'agg_result_V_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "ret i32 %agg_result_V_i" [test.cpp:5159]   --->   Operation 55 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 17.1ns
The critical path consists of the following:
	wire read on port 'in_r' [5]  (0 ns)
	'call' operation ('call_ret_i_i', test.cpp:5139->test.cpp:5153->test.cpp:5159) to 'lut_div5_chunk' [9]  (3.42 ns)
	'call' operation ('call_ret4_i_i', test.cpp:5145->test.cpp:5153->test.cpp:5159) to 'lut_div5_chunk' [14]  (3.42 ns)
	'call' operation ('call_ret4_1_i_i', test.cpp:5145->test.cpp:5153->test.cpp:5159) to 'lut_div5_chunk' [18]  (3.42 ns)
	'call' operation ('call_ret4_2_i_i', test.cpp:5145->test.cpp:5153->test.cpp:5159) to 'lut_div5_chunk' [22]  (3.42 ns)
	'call' operation ('call_ret4_3_i_i', test.cpp:5145->test.cpp:5153->test.cpp:5159) to 'lut_div5_chunk' [26]  (3.42 ns)

 <State 2>: 20.5ns
The critical path consists of the following:
	'call' operation ('call_ret4_4_i_i', test.cpp:5145->test.cpp:5153->test.cpp:5159) to 'lut_div5_chunk' [30]  (3.42 ns)
	'call' operation ('call_ret4_5_i_i', test.cpp:5145->test.cpp:5153->test.cpp:5159) to 'lut_div5_chunk' [34]  (3.42 ns)
	'call' operation ('call_ret4_6_i_i', test.cpp:5145->test.cpp:5153->test.cpp:5159) to 'lut_div5_chunk' [38]  (3.42 ns)
	'call' operation ('call_ret4_7_i_i', test.cpp:5145->test.cpp:5153->test.cpp:5159) to 'lut_div5_chunk' [42]  (3.42 ns)
	'call' operation ('call_ret4_8_i_i', test.cpp:5145->test.cpp:5153->test.cpp:5159) to 'lut_div5_chunk' [46]  (3.42 ns)
	'call' operation ('call_ret4_9_i_i', test.cpp:5145->test.cpp:5153->test.cpp:5159) to 'lut_div5_chunk' [50]  (3.42 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
