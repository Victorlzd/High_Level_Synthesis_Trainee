-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity lut_div7_chunk_r1_rom is 
    generic(
             DWIDTH     : integer := 1; 
             AWIDTH     : integer := 6; 
             MEM_SIZE    : integer := 64
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of lut_div7_chunk_r1_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 1=> "0", 2 to 3=> "1", 4 to 5=> "0", 6 => "1", 7 to 8=> "0", 9 to 10=> "1", 11 to 12=> "0", 
    13 => "1", 14 to 15=> "0", 16 to 17=> "1", 18 to 19=> "0", 20 => "1", 21 to 22=> "0", 23 to 24=> "1", 
    25 to 26=> "0", 27 => "1", 28 to 29=> "0", 30 to 31=> "1", 32 to 33=> "0", 34 => "1", 35 to 36=> "0", 
    37 to 38=> "1", 39 to 40=> "0", 41 => "1", 42 to 43=> "0", 44 to 45=> "1", 46 to 47=> "0", 48 => "1", 
    49 to 50=> "0", 51 to 52=> "1", 53 to 54=> "0", 55 => "1", 56 to 57=> "0", 58 to 59=> "1", 60 to 61=> "0", 
    62 => "1", 63 => "0" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity lut_div7_chunk_r1 is
    generic (
        DataWidth : INTEGER := 1;
        AddressRange : INTEGER := 64;
        AddressWidth : INTEGER := 6);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of lut_div7_chunk_r1 is
    component lut_div7_chunk_r1_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    lut_div7_chunk_r1_rom_U :  component lut_div7_chunk_r1_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


