-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity operator_int_div11 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of operator_int_div11 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "operator_int_div11,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=28.424000,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=38,HLS_SYN_LUT=13254,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal q_chunk_V_0_i_i_reg_402 : STD_LOGIC_VECTOR (1 downto 0);
    signal q_chunk_V_0_1_i_i_reg_407 : STD_LOGIC_VECTOR (1 downto 0);
    signal q_chunk_V_0_2_i_i_reg_412 : STD_LOGIC_VECTOR (1 downto 0);
    signal q_chunk_V_0_3_i_i_reg_417 : STD_LOGIC_VECTOR (1 downto 0);
    signal q_chunk_V_0_4_i_i_reg_422 : STD_LOGIC_VECTOR (1 downto 0);
    signal q_chunk_V_0_5_i_i_reg_427 : STD_LOGIC_VECTOR (1 downto 0);
    signal q_chunk_V_0_6_i_i_reg_432 : STD_LOGIC_VECTOR (1 downto 0);
    signal q_chunk_V_0_7_i_i_reg_437 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_ret_7_i_i_reg_442 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_13_8_i_i_reg_447 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_13_9_i_i_reg_452 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_13_i_i_4_reg_457 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_13_10_i_i_reg_462 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_13_11_i_i_reg_467 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_13_12_i_i_reg_472 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_13_13_i_i_reg_477 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_370_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_482 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_92_ap_ready : STD_LOGIC;
    signal grp_lut_div11_chunk_fu_92_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_92_r_in_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div11_chunk_fu_92_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_92_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div11_chunk_fu_99_ap_ready : STD_LOGIC;
    signal grp_lut_div11_chunk_fu_99_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_99_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_99_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div11_chunk_fu_105_ap_ready : STD_LOGIC;
    signal grp_lut_div11_chunk_fu_105_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_105_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_105_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div11_chunk_fu_111_ap_ready : STD_LOGIC;
    signal grp_lut_div11_chunk_fu_111_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_111_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_111_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div11_chunk_fu_117_ap_ready : STD_LOGIC;
    signal grp_lut_div11_chunk_fu_117_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_117_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_117_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div11_chunk_fu_123_ap_ready : STD_LOGIC;
    signal grp_lut_div11_chunk_fu_123_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_123_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_123_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div11_chunk_fu_129_ap_ready : STD_LOGIC;
    signal grp_lut_div11_chunk_fu_129_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_129_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_129_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div11_chunk_fu_135_ap_ready : STD_LOGIC;
    signal grp_lut_div11_chunk_fu_135_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_135_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div11_chunk_fu_135_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);

    component lut_div11_chunk IS
    port (
        ap_ready : OUT STD_LOGIC;
        d_V : IN STD_LOGIC_VECTOR (1 downto 0);
        r_in_V : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    grp_lut_div11_chunk_fu_92 : component lut_div11_chunk
    port map (
        ap_ready => grp_lut_div11_chunk_fu_92_ap_ready,
        d_V => grp_lut_div11_chunk_fu_92_d_V,
        r_in_V => grp_lut_div11_chunk_fu_92_r_in_V,
        ap_return_0 => grp_lut_div11_chunk_fu_92_ap_return_0,
        ap_return_1 => grp_lut_div11_chunk_fu_92_ap_return_1);

    grp_lut_div11_chunk_fu_99 : component lut_div11_chunk
    port map (
        ap_ready => grp_lut_div11_chunk_fu_99_ap_ready,
        d_V => grp_lut_div11_chunk_fu_99_d_V,
        r_in_V => grp_lut_div11_chunk_fu_92_ap_return_1,
        ap_return_0 => grp_lut_div11_chunk_fu_99_ap_return_0,
        ap_return_1 => grp_lut_div11_chunk_fu_99_ap_return_1);

    grp_lut_div11_chunk_fu_105 : component lut_div11_chunk
    port map (
        ap_ready => grp_lut_div11_chunk_fu_105_ap_ready,
        d_V => grp_lut_div11_chunk_fu_105_d_V,
        r_in_V => grp_lut_div11_chunk_fu_99_ap_return_1,
        ap_return_0 => grp_lut_div11_chunk_fu_105_ap_return_0,
        ap_return_1 => grp_lut_div11_chunk_fu_105_ap_return_1);

    grp_lut_div11_chunk_fu_111 : component lut_div11_chunk
    port map (
        ap_ready => grp_lut_div11_chunk_fu_111_ap_ready,
        d_V => grp_lut_div11_chunk_fu_111_d_V,
        r_in_V => grp_lut_div11_chunk_fu_105_ap_return_1,
        ap_return_0 => grp_lut_div11_chunk_fu_111_ap_return_0,
        ap_return_1 => grp_lut_div11_chunk_fu_111_ap_return_1);

    grp_lut_div11_chunk_fu_117 : component lut_div11_chunk
    port map (
        ap_ready => grp_lut_div11_chunk_fu_117_ap_ready,
        d_V => grp_lut_div11_chunk_fu_117_d_V,
        r_in_V => grp_lut_div11_chunk_fu_111_ap_return_1,
        ap_return_0 => grp_lut_div11_chunk_fu_117_ap_return_0,
        ap_return_1 => grp_lut_div11_chunk_fu_117_ap_return_1);

    grp_lut_div11_chunk_fu_123 : component lut_div11_chunk
    port map (
        ap_ready => grp_lut_div11_chunk_fu_123_ap_ready,
        d_V => grp_lut_div11_chunk_fu_123_d_V,
        r_in_V => grp_lut_div11_chunk_fu_117_ap_return_1,
        ap_return_0 => grp_lut_div11_chunk_fu_123_ap_return_0,
        ap_return_1 => grp_lut_div11_chunk_fu_123_ap_return_1);

    grp_lut_div11_chunk_fu_129 : component lut_div11_chunk
    port map (
        ap_ready => grp_lut_div11_chunk_fu_129_ap_ready,
        d_V => grp_lut_div11_chunk_fu_129_d_V,
        r_in_V => grp_lut_div11_chunk_fu_123_ap_return_1,
        ap_return_0 => grp_lut_div11_chunk_fu_129_ap_return_0,
        ap_return_1 => grp_lut_div11_chunk_fu_129_ap_return_1);

    grp_lut_div11_chunk_fu_135 : component lut_div11_chunk
    port map (
        ap_ready => grp_lut_div11_chunk_fu_135_ap_ready,
        d_V => grp_lut_div11_chunk_fu_135_d_V,
        r_in_V => grp_lut_div11_chunk_fu_129_ap_return_1,
        ap_return_0 => grp_lut_div11_chunk_fu_135_ap_return_0,
        ap_return_1 => grp_lut_div11_chunk_fu_135_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_Result_13_10_i_i_reg_462 <= in_r(9 downto 8);
                p_Result_13_11_i_i_reg_467 <= in_r(7 downto 6);
                p_Result_13_12_i_i_reg_472 <= in_r(5 downto 4);
                p_Result_13_13_i_i_reg_477 <= in_r(3 downto 2);
                p_Result_13_8_i_i_reg_447 <= in_r(15 downto 14);
                p_Result_13_9_i_i_reg_452 <= in_r(13 downto 12);
                p_Result_13_i_i_4_reg_457 <= in_r(11 downto 10);
                q_chunk_V_0_1_i_i_reg_407 <= grp_lut_div11_chunk_fu_99_ap_return_0;
                q_chunk_V_0_2_i_i_reg_412 <= grp_lut_div11_chunk_fu_105_ap_return_0;
                q_chunk_V_0_3_i_i_reg_417 <= grp_lut_div11_chunk_fu_111_ap_return_0;
                q_chunk_V_0_4_i_i_reg_422 <= grp_lut_div11_chunk_fu_117_ap_return_0;
                q_chunk_V_0_5_i_i_reg_427 <= grp_lut_div11_chunk_fu_123_ap_return_0;
                q_chunk_V_0_6_i_i_reg_432 <= grp_lut_div11_chunk_fu_129_ap_return_0;
                q_chunk_V_0_7_i_i_reg_437 <= grp_lut_div11_chunk_fu_135_ap_return_0;
                q_chunk_V_0_i_i_reg_402 <= grp_lut_div11_chunk_fu_92_ap_return_0;
                r_V_ret_7_i_i_reg_442 <= grp_lut_div11_chunk_fu_135_ap_return_1;
                tmp_reg_482 <= tmp_fu_370_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_done_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= (((((((((((((((q_chunk_V_0_i_i_reg_402 & q_chunk_V_0_1_i_i_reg_407) & q_chunk_V_0_2_i_i_reg_412) & q_chunk_V_0_3_i_i_reg_417) & q_chunk_V_0_4_i_i_reg_422) & q_chunk_V_0_5_i_i_reg_427) & q_chunk_V_0_6_i_i_reg_432) & q_chunk_V_0_7_i_i_reg_437) & grp_lut_div11_chunk_fu_92_ap_return_0) & grp_lut_div11_chunk_fu_99_ap_return_0) & grp_lut_div11_chunk_fu_105_ap_return_0) & grp_lut_div11_chunk_fu_111_ap_return_0) & grp_lut_div11_chunk_fu_117_ap_return_0) & grp_lut_div11_chunk_fu_123_ap_return_0) & grp_lut_div11_chunk_fu_129_ap_return_0) & grp_lut_div11_chunk_fu_135_ap_return_0);

    grp_lut_div11_chunk_fu_105_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_i_i_4_reg_457, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div11_chunk_fu_105_d_V <= p_Result_13_i_i_4_reg_457;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div11_chunk_fu_105_d_V <= in_r(27 downto 26);
        else 
            grp_lut_div11_chunk_fu_105_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div11_chunk_fu_111_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_10_i_i_reg_462, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div11_chunk_fu_111_d_V <= p_Result_13_10_i_i_reg_462;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div11_chunk_fu_111_d_V <= in_r(25 downto 24);
        else 
            grp_lut_div11_chunk_fu_111_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div11_chunk_fu_117_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_11_i_i_reg_467, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div11_chunk_fu_117_d_V <= p_Result_13_11_i_i_reg_467;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div11_chunk_fu_117_d_V <= in_r(23 downto 22);
        else 
            grp_lut_div11_chunk_fu_117_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div11_chunk_fu_123_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_12_i_i_reg_472, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div11_chunk_fu_123_d_V <= p_Result_13_12_i_i_reg_472;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div11_chunk_fu_123_d_V <= in_r(21 downto 20);
        else 
            grp_lut_div11_chunk_fu_123_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div11_chunk_fu_129_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_13_i_i_reg_477, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div11_chunk_fu_129_d_V <= p_Result_13_13_i_i_reg_477;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div11_chunk_fu_129_d_V <= in_r(19 downto 18);
        else 
            grp_lut_div11_chunk_fu_129_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div11_chunk_fu_135_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, tmp_reg_482, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div11_chunk_fu_135_d_V <= tmp_reg_482;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div11_chunk_fu_135_d_V <= in_r(17 downto 16);
        else 
            grp_lut_div11_chunk_fu_135_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div11_chunk_fu_92_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_8_i_i_reg_447, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div11_chunk_fu_92_d_V <= p_Result_13_8_i_i_reg_447;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div11_chunk_fu_92_d_V <= in_r(31 downto 30);
        else 
            grp_lut_div11_chunk_fu_92_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div11_chunk_fu_92_r_in_V_assign_proc : process(ap_CS_fsm_state1, r_V_ret_7_i_i_reg_442, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div11_chunk_fu_92_r_in_V <= r_V_ret_7_i_i_reg_442;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div11_chunk_fu_92_r_in_V <= ap_const_lv4_0;
        else 
            grp_lut_div11_chunk_fu_92_r_in_V <= "XXXX";
        end if; 
    end process;


    grp_lut_div11_chunk_fu_99_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_9_i_i_reg_452, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div11_chunk_fu_99_d_V <= p_Result_13_9_i_i_reg_452;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div11_chunk_fu_99_d_V <= in_r(29 downto 28);
        else 
            grp_lut_div11_chunk_fu_99_d_V <= "XX";
        end if; 
    end process;

    tmp_fu_370_p1 <= in_r(2 - 1 downto 0);
end behav;
