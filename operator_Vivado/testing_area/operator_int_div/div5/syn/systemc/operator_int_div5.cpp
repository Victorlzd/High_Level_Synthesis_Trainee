// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "operator_int_div5.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic operator_int_div5::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic operator_int_div5::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> operator_int_div5::ap_ST_fsm_state1 = "1";
const sc_lv<2> operator_int_div5::ap_ST_fsm_state2 = "10";
const sc_lv<32> operator_int_div5::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> operator_int_div5::ap_const_lv32_1 = "1";
const sc_lv<3> operator_int_div5::ap_const_lv3_0 = "000";
const sc_lv<32> operator_int_div5::ap_const_lv32_1E = "11110";
const sc_lv<32> operator_int_div5::ap_const_lv32_1F = "11111";
const sc_lv<32> operator_int_div5::ap_const_lv32_1B = "11011";
const sc_lv<32> operator_int_div5::ap_const_lv32_1D = "11101";
const sc_lv<32> operator_int_div5::ap_const_lv32_18 = "11000";
const sc_lv<32> operator_int_div5::ap_const_lv32_1A = "11010";
const sc_lv<32> operator_int_div5::ap_const_lv32_15 = "10101";
const sc_lv<32> operator_int_div5::ap_const_lv32_17 = "10111";
const sc_lv<32> operator_int_div5::ap_const_lv32_12 = "10010";
const sc_lv<32> operator_int_div5::ap_const_lv32_14 = "10100";
const sc_lv<32> operator_int_div5::ap_const_lv32_F = "1111";
const sc_lv<32> operator_int_div5::ap_const_lv32_11 = "10001";
const sc_lv<32> operator_int_div5::ap_const_lv32_C = "1100";
const sc_lv<32> operator_int_div5::ap_const_lv32_E = "1110";
const sc_lv<32> operator_int_div5::ap_const_lv32_9 = "1001";
const sc_lv<32> operator_int_div5::ap_const_lv32_B = "1011";
const sc_lv<32> operator_int_div5::ap_const_lv32_6 = "110";
const sc_lv<32> operator_int_div5::ap_const_lv32_8 = "1000";
const sc_lv<32> operator_int_div5::ap_const_lv32_3 = "11";
const sc_lv<32> operator_int_div5::ap_const_lv32_5 = "101";
const bool operator_int_div5::ap_const_boolean_1 = true;

operator_int_div5::operator_int_div5(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_lut_div5_chunk_fu_68 = new lut_div5_chunk("grp_lut_div5_chunk_fu_68");
    grp_lut_div5_chunk_fu_68->ap_ready(grp_lut_div5_chunk_fu_68_ap_ready);
    grp_lut_div5_chunk_fu_68->d_V(grp_lut_div5_chunk_fu_68_d_V);
    grp_lut_div5_chunk_fu_68->r_in_V(grp_lut_div5_chunk_fu_68_r_in_V);
    grp_lut_div5_chunk_fu_68->ap_return_0(grp_lut_div5_chunk_fu_68_ap_return_0);
    grp_lut_div5_chunk_fu_68->ap_return_1(grp_lut_div5_chunk_fu_68_ap_return_1);
    grp_lut_div5_chunk_fu_75 = new lut_div5_chunk("grp_lut_div5_chunk_fu_75");
    grp_lut_div5_chunk_fu_75->ap_ready(grp_lut_div5_chunk_fu_75_ap_ready);
    grp_lut_div5_chunk_fu_75->d_V(grp_lut_div5_chunk_fu_75_d_V);
    grp_lut_div5_chunk_fu_75->r_in_V(grp_lut_div5_chunk_fu_68_ap_return_1);
    grp_lut_div5_chunk_fu_75->ap_return_0(grp_lut_div5_chunk_fu_75_ap_return_0);
    grp_lut_div5_chunk_fu_75->ap_return_1(grp_lut_div5_chunk_fu_75_ap_return_1);
    grp_lut_div5_chunk_fu_81 = new lut_div5_chunk("grp_lut_div5_chunk_fu_81");
    grp_lut_div5_chunk_fu_81->ap_ready(grp_lut_div5_chunk_fu_81_ap_ready);
    grp_lut_div5_chunk_fu_81->d_V(grp_lut_div5_chunk_fu_81_d_V);
    grp_lut_div5_chunk_fu_81->r_in_V(grp_lut_div5_chunk_fu_75_ap_return_1);
    grp_lut_div5_chunk_fu_81->ap_return_0(grp_lut_div5_chunk_fu_81_ap_return_0);
    grp_lut_div5_chunk_fu_81->ap_return_1(grp_lut_div5_chunk_fu_81_ap_return_1);
    grp_lut_div5_chunk_fu_87 = new lut_div5_chunk("grp_lut_div5_chunk_fu_87");
    grp_lut_div5_chunk_fu_87->ap_ready(grp_lut_div5_chunk_fu_87_ap_ready);
    grp_lut_div5_chunk_fu_87->d_V(grp_lut_div5_chunk_fu_87_d_V);
    grp_lut_div5_chunk_fu_87->r_in_V(grp_lut_div5_chunk_fu_81_ap_return_1);
    grp_lut_div5_chunk_fu_87->ap_return_0(grp_lut_div5_chunk_fu_87_ap_return_0);
    grp_lut_div5_chunk_fu_87->ap_return_1(grp_lut_div5_chunk_fu_87_ap_return_1);
    grp_lut_div5_chunk_fu_93 = new lut_div5_chunk("grp_lut_div5_chunk_fu_93");
    grp_lut_div5_chunk_fu_93->ap_ready(grp_lut_div5_chunk_fu_93_ap_ready);
    grp_lut_div5_chunk_fu_93->d_V(grp_lut_div5_chunk_fu_93_d_V);
    grp_lut_div5_chunk_fu_93->r_in_V(grp_lut_div5_chunk_fu_87_ap_return_1);
    grp_lut_div5_chunk_fu_93->ap_return_0(grp_lut_div5_chunk_fu_93_ap_return_0);
    grp_lut_div5_chunk_fu_93->ap_return_1(grp_lut_div5_chunk_fu_93_ap_return_1);
    call_ret4_9_i_i_lut_div5_chunk_fu_99 = new lut_div5_chunk("call_ret4_9_i_i_lut_div5_chunk_fu_99");
    call_ret4_9_i_i_lut_div5_chunk_fu_99->ap_ready(call_ret4_9_i_i_lut_div5_chunk_fu_99_ap_ready);
    call_ret4_9_i_i_lut_div5_chunk_fu_99->d_V(tmp_1_reg_347);
    call_ret4_9_i_i_lut_div5_chunk_fu_99->r_in_V(grp_lut_div5_chunk_fu_93_ap_return_1);
    call_ret4_9_i_i_lut_div5_chunk_fu_99->ap_return_0(call_ret4_9_i_i_lut_div5_chunk_fu_99_ap_return_0);
    call_ret4_9_i_i_lut_div5_chunk_fu_99->ap_return_1(call_ret4_9_i_i_lut_div5_chunk_fu_99_ap_return_1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( tmp_reg_292 );
    sensitive << ( q_chunk_V_ret2_i_i_reg_297 );
    sensitive << ( q_chunk_V_ret2_1_i_i_reg_302 );
    sensitive << ( q_chunk_V_ret2_2_i_i_reg_307 );
    sensitive << ( q_chunk_V_ret2_3_i_i_reg_312 );
    sensitive << ( grp_lut_div5_chunk_fu_68_ap_return_0 );
    sensitive << ( grp_lut_div5_chunk_fu_75_ap_return_0 );
    sensitive << ( grp_lut_div5_chunk_fu_81_ap_return_0 );
    sensitive << ( grp_lut_div5_chunk_fu_87_ap_return_0 );
    sensitive << ( grp_lut_div5_chunk_fu_93_ap_return_0 );
    sensitive << ( call_ret4_9_i_i_lut_div5_chunk_fu_99_ap_return_0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_d_chunk_V_fu_160_p1);
    sensitive << ( p_Result_i_i_fu_150_p4 );

    SC_METHOD(thread_grp_lut_div5_chunk_fu_68_d_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_Result_19_4_i_i_reg_322 );
    sensitive << ( d_chunk_V_fu_160_p1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_lut_div5_chunk_fu_68_r_in_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( r_V_ret3_3_i_i_reg_317 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_lut_div5_chunk_fu_75_d_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_r );
    sensitive << ( p_Result_19_5_i_i_reg_327 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_lut_div5_chunk_fu_81_d_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_r );
    sensitive << ( p_Result_19_6_i_i_reg_332 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_lut_div5_chunk_fu_87_d_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_r );
    sensitive << ( p_Result_19_7_i_i_reg_337 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_lut_div5_chunk_fu_93_d_V);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_r );
    sensitive << ( p_Result_19_8_i_i_reg_342 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_Result_i_i_fu_150_p4);
    sensitive << ( in_r );

    SC_METHOD(thread_tmp_1_fu_263_p1);
    sensitive << ( in_r );

    SC_METHOD(thread_tmp_fu_165_p1);
    sensitive << ( grp_lut_div5_chunk_fu_68_ap_return_0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "01";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "operator_int_div5_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r, "(port)in_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_fu_165_p1, "tmp_fu_165_p1");
    sc_trace(mVcdFile, tmp_reg_292, "tmp_reg_292");
    sc_trace(mVcdFile, q_chunk_V_ret2_i_i_reg_297, "q_chunk_V_ret2_i_i_reg_297");
    sc_trace(mVcdFile, q_chunk_V_ret2_1_i_i_reg_302, "q_chunk_V_ret2_1_i_i_reg_302");
    sc_trace(mVcdFile, q_chunk_V_ret2_2_i_i_reg_307, "q_chunk_V_ret2_2_i_i_reg_307");
    sc_trace(mVcdFile, q_chunk_V_ret2_3_i_i_reg_312, "q_chunk_V_ret2_3_i_i_reg_312");
    sc_trace(mVcdFile, r_V_ret3_3_i_i_reg_317, "r_V_ret3_3_i_i_reg_317");
    sc_trace(mVcdFile, p_Result_19_4_i_i_reg_322, "p_Result_19_4_i_i_reg_322");
    sc_trace(mVcdFile, p_Result_19_5_i_i_reg_327, "p_Result_19_5_i_i_reg_327");
    sc_trace(mVcdFile, p_Result_19_6_i_i_reg_332, "p_Result_19_6_i_i_reg_332");
    sc_trace(mVcdFile, p_Result_19_7_i_i_reg_337, "p_Result_19_7_i_i_reg_337");
    sc_trace(mVcdFile, p_Result_19_8_i_i_reg_342, "p_Result_19_8_i_i_reg_342");
    sc_trace(mVcdFile, tmp_1_fu_263_p1, "tmp_1_fu_263_p1");
    sc_trace(mVcdFile, tmp_1_reg_347, "tmp_1_reg_347");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_68_ap_ready, "grp_lut_div5_chunk_fu_68_ap_ready");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_68_d_V, "grp_lut_div5_chunk_fu_68_d_V");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_68_r_in_V, "grp_lut_div5_chunk_fu_68_r_in_V");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_68_ap_return_0, "grp_lut_div5_chunk_fu_68_ap_return_0");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_68_ap_return_1, "grp_lut_div5_chunk_fu_68_ap_return_1");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_75_ap_ready, "grp_lut_div5_chunk_fu_75_ap_ready");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_75_d_V, "grp_lut_div5_chunk_fu_75_d_V");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_75_ap_return_0, "grp_lut_div5_chunk_fu_75_ap_return_0");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_75_ap_return_1, "grp_lut_div5_chunk_fu_75_ap_return_1");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_81_ap_ready, "grp_lut_div5_chunk_fu_81_ap_ready");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_81_d_V, "grp_lut_div5_chunk_fu_81_d_V");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_81_ap_return_0, "grp_lut_div5_chunk_fu_81_ap_return_0");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_81_ap_return_1, "grp_lut_div5_chunk_fu_81_ap_return_1");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_87_ap_ready, "grp_lut_div5_chunk_fu_87_ap_ready");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_87_d_V, "grp_lut_div5_chunk_fu_87_d_V");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_87_ap_return_0, "grp_lut_div5_chunk_fu_87_ap_return_0");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_87_ap_return_1, "grp_lut_div5_chunk_fu_87_ap_return_1");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_93_ap_ready, "grp_lut_div5_chunk_fu_93_ap_ready");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_93_d_V, "grp_lut_div5_chunk_fu_93_d_V");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_93_ap_return_0, "grp_lut_div5_chunk_fu_93_ap_return_0");
    sc_trace(mVcdFile, grp_lut_div5_chunk_fu_93_ap_return_1, "grp_lut_div5_chunk_fu_93_ap_return_1");
    sc_trace(mVcdFile, call_ret4_9_i_i_lut_div5_chunk_fu_99_ap_ready, "call_ret4_9_i_i_lut_div5_chunk_fu_99_ap_ready");
    sc_trace(mVcdFile, call_ret4_9_i_i_lut_div5_chunk_fu_99_ap_return_0, "call_ret4_9_i_i_lut_div5_chunk_fu_99_ap_return_0");
    sc_trace(mVcdFile, call_ret4_9_i_i_lut_div5_chunk_fu_99_ap_return_1, "call_ret4_9_i_i_lut_div5_chunk_fu_99_ap_return_1");
    sc_trace(mVcdFile, d_chunk_V_fu_160_p1, "d_chunk_V_fu_160_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, p_Result_i_i_fu_150_p4, "p_Result_i_i_fu_150_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("operator_int_div5.hdltvin.dat");
    mHdltvoutHandle.open("operator_int_div5.hdltvout.dat");
}

operator_int_div5::~operator_int_div5() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_lut_div5_chunk_fu_68;
    delete grp_lut_div5_chunk_fu_75;
    delete grp_lut_div5_chunk_fu_81;
    delete grp_lut_div5_chunk_fu_87;
    delete grp_lut_div5_chunk_fu_93;
    delete call_ret4_9_i_i_lut_div5_chunk_fu_99;
}

void operator_int_div5::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        p_Result_19_4_i_i_reg_322 = in_r.read().range(17, 15);
        p_Result_19_5_i_i_reg_327 = in_r.read().range(14, 12);
        p_Result_19_6_i_i_reg_332 = in_r.read().range(11, 9);
        p_Result_19_7_i_i_reg_337 = in_r.read().range(8, 6);
        p_Result_19_8_i_i_reg_342 = in_r.read().range(5, 3);
        q_chunk_V_ret2_1_i_i_reg_302 = grp_lut_div5_chunk_fu_81_ap_return_0.read();
        q_chunk_V_ret2_2_i_i_reg_307 = grp_lut_div5_chunk_fu_87_ap_return_0.read();
        q_chunk_V_ret2_3_i_i_reg_312 = grp_lut_div5_chunk_fu_93_ap_return_0.read();
        q_chunk_V_ret2_i_i_reg_297 = grp_lut_div5_chunk_fu_75_ap_return_0.read();
        r_V_ret3_3_i_i_reg_317 = grp_lut_div5_chunk_fu_93_ap_return_1.read();
        tmp_1_reg_347 = tmp_1_fu_263_p1.read();
        tmp_reg_292 = tmp_fu_165_p1.read();
    }
}

void operator_int_div5::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void operator_int_div5::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void operator_int_div5::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void operator_int_div5::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void operator_int_div5::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void operator_int_div5::thread_ap_return() {
    ap_return = esl_concat<29,3>(esl_concat<26,3>(esl_concat<23,3>(esl_concat<20,3>(esl_concat<17,3>(esl_concat<14,3>(esl_concat<11,3>(esl_concat<8,3>(esl_concat<5,3>(esl_concat<2,3>(tmp_reg_292.read(), q_chunk_V_ret2_i_i_reg_297.read()), q_chunk_V_ret2_1_i_i_reg_302.read()), q_chunk_V_ret2_2_i_i_reg_307.read()), q_chunk_V_ret2_3_i_i_reg_312.read()), grp_lut_div5_chunk_fu_68_ap_return_0.read()), grp_lut_div5_chunk_fu_75_ap_return_0.read()), grp_lut_div5_chunk_fu_81_ap_return_0.read()), grp_lut_div5_chunk_fu_87_ap_return_0.read()), grp_lut_div5_chunk_fu_93_ap_return_0.read()), call_ret4_9_i_i_lut_div5_chunk_fu_99_ap_return_0.read());
}

void operator_int_div5::thread_d_chunk_V_fu_160_p1() {
    d_chunk_V_fu_160_p1 = esl_zext<3,2>(p_Result_i_i_fu_150_p4.read());
}

void operator_int_div5::thread_grp_lut_div5_chunk_fu_68_d_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_lut_div5_chunk_fu_68_d_V = p_Result_19_4_i_i_reg_322.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_lut_div5_chunk_fu_68_d_V = d_chunk_V_fu_160_p1.read();
    } else {
        grp_lut_div5_chunk_fu_68_d_V = "XXX";
    }
}

void operator_int_div5::thread_grp_lut_div5_chunk_fu_68_r_in_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_lut_div5_chunk_fu_68_r_in_V = r_V_ret3_3_i_i_reg_317.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_lut_div5_chunk_fu_68_r_in_V = ap_const_lv3_0;
    } else {
        grp_lut_div5_chunk_fu_68_r_in_V = "XXX";
    }
}

void operator_int_div5::thread_grp_lut_div5_chunk_fu_75_d_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_lut_div5_chunk_fu_75_d_V = p_Result_19_5_i_i_reg_327.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_lut_div5_chunk_fu_75_d_V = in_r.read().range(29, 27);
    } else {
        grp_lut_div5_chunk_fu_75_d_V = "XXX";
    }
}

void operator_int_div5::thread_grp_lut_div5_chunk_fu_81_d_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_lut_div5_chunk_fu_81_d_V = p_Result_19_6_i_i_reg_332.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_lut_div5_chunk_fu_81_d_V = in_r.read().range(26, 24);
    } else {
        grp_lut_div5_chunk_fu_81_d_V = "XXX";
    }
}

void operator_int_div5::thread_grp_lut_div5_chunk_fu_87_d_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_lut_div5_chunk_fu_87_d_V = p_Result_19_7_i_i_reg_337.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_lut_div5_chunk_fu_87_d_V = in_r.read().range(23, 21);
    } else {
        grp_lut_div5_chunk_fu_87_d_V = "XXX";
    }
}

void operator_int_div5::thread_grp_lut_div5_chunk_fu_93_d_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_lut_div5_chunk_fu_93_d_V = p_Result_19_8_i_i_reg_342.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_lut_div5_chunk_fu_93_d_V = in_r.read().range(20, 18);
    } else {
        grp_lut_div5_chunk_fu_93_d_V = "XXX";
    }
}

void operator_int_div5::thread_p_Result_i_i_fu_150_p4() {
    p_Result_i_i_fu_150_p4 = in_r.read().range(31, 30);
}

void operator_int_div5::thread_tmp_1_fu_263_p1() {
    tmp_1_fu_263_p1 = in_r.read().range(3-1, 0);
}

void operator_int_div5::thread_tmp_fu_165_p1() {
    tmp_fu_165_p1 = grp_lut_div5_chunk_fu_68_ap_return_0.read().range(2-1, 0);
}

void operator_int_div5::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

void operator_int_div5::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r\" :  \"" << in_r.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

