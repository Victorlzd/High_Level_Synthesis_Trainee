// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "operator_long_div6.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic operator_long_div6::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic operator_long_div6::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<32> operator_long_div6::ap_ST_fsm_state1 = "1";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state2 = "10";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state3 = "100";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state4 = "1000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state5 = "10000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state6 = "100000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<32> operator_long_div6::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<32> operator_long_div6::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> operator_long_div6::ap_const_lv32_1 = "1";
const sc_lv<32> operator_long_div6::ap_const_lv32_3 = "11";
const sc_lv<32> operator_long_div6::ap_const_lv32_5 = "101";
const sc_lv<32> operator_long_div6::ap_const_lv32_7 = "111";
const sc_lv<32> operator_long_div6::ap_const_lv32_9 = "1001";
const sc_lv<32> operator_long_div6::ap_const_lv32_B = "1011";
const sc_lv<32> operator_long_div6::ap_const_lv32_D = "1101";
const sc_lv<32> operator_long_div6::ap_const_lv32_F = "1111";
const sc_lv<32> operator_long_div6::ap_const_lv32_11 = "10001";
const sc_lv<32> operator_long_div6::ap_const_lv32_13 = "10011";
const sc_lv<32> operator_long_div6::ap_const_lv32_15 = "10101";
const sc_lv<32> operator_long_div6::ap_const_lv32_17 = "10111";
const sc_lv<32> operator_long_div6::ap_const_lv32_19 = "11001";
const sc_lv<32> operator_long_div6::ap_const_lv32_1B = "11011";
const sc_lv<32> operator_long_div6::ap_const_lv32_1D = "11101";
const sc_lv<32> operator_long_div6::ap_const_lv32_2 = "10";
const sc_lv<32> operator_long_div6::ap_const_lv32_4 = "100";
const sc_lv<32> operator_long_div6::ap_const_lv32_6 = "110";
const sc_lv<32> operator_long_div6::ap_const_lv32_8 = "1000";
const sc_lv<32> operator_long_div6::ap_const_lv32_A = "1010";
const sc_lv<32> operator_long_div6::ap_const_lv32_C = "1100";
const sc_lv<32> operator_long_div6::ap_const_lv32_E = "1110";
const sc_lv<32> operator_long_div6::ap_const_lv32_10 = "10000";
const sc_lv<32> operator_long_div6::ap_const_lv32_12 = "10010";
const sc_lv<32> operator_long_div6::ap_const_lv32_14 = "10100";
const sc_lv<32> operator_long_div6::ap_const_lv32_16 = "10110";
const sc_lv<32> operator_long_div6::ap_const_lv32_18 = "11000";
const sc_lv<32> operator_long_div6::ap_const_lv32_1A = "11010";
const sc_lv<32> operator_long_div6::ap_const_lv32_1C = "11100";
const sc_lv<32> operator_long_div6::ap_const_lv32_1E = "11110";
const sc_lv<32> operator_long_div6::ap_const_lv32_1F = "11111";
const sc_lv<2> operator_long_div6::ap_const_lv2_0 = "00";
const sc_lv<32> operator_long_div6::ap_const_lv32_3D = "111101";
const sc_lv<32> operator_long_div6::ap_const_lv32_3F = "111111";
const sc_lv<32> operator_long_div6::ap_const_lv32_39 = "111001";
const sc_lv<32> operator_long_div6::ap_const_lv32_3C = "111100";
const sc_lv<32> operator_long_div6::ap_const_lv32_35 = "110101";
const sc_lv<32> operator_long_div6::ap_const_lv32_38 = "111000";
const sc_lv<32> operator_long_div6::ap_const_lv32_31 = "110001";
const sc_lv<32> operator_long_div6::ap_const_lv32_34 = "110100";
const sc_lv<32> operator_long_div6::ap_const_lv32_2D = "101101";
const sc_lv<32> operator_long_div6::ap_const_lv32_30 = "110000";
const sc_lv<32> operator_long_div6::ap_const_lv32_29 = "101001";
const sc_lv<32> operator_long_div6::ap_const_lv32_2C = "101100";
const sc_lv<32> operator_long_div6::ap_const_lv32_25 = "100101";
const sc_lv<32> operator_long_div6::ap_const_lv32_28 = "101000";
const sc_lv<32> operator_long_div6::ap_const_lv32_21 = "100001";
const sc_lv<32> operator_long_div6::ap_const_lv32_24 = "100100";
const sc_lv<32> operator_long_div6::ap_const_lv32_20 = "100000";
const bool operator_long_div6::ap_const_boolean_1 = true;

operator_long_div6::operator_long_div6(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_lut_div3_chunk_fu_104 = new lut_div3_chunk("grp_lut_div3_chunk_fu_104");
    grp_lut_div3_chunk_fu_104->ap_clk(ap_clk);
    grp_lut_div3_chunk_fu_104->ap_rst(ap_rst);
    grp_lut_div3_chunk_fu_104->ap_start(grp_lut_div3_chunk_fu_104_ap_start);
    grp_lut_div3_chunk_fu_104->ap_done(grp_lut_div3_chunk_fu_104_ap_done);
    grp_lut_div3_chunk_fu_104->ap_idle(grp_lut_div3_chunk_fu_104_ap_idle);
    grp_lut_div3_chunk_fu_104->ap_ready(grp_lut_div3_chunk_fu_104_ap_ready);
    grp_lut_div3_chunk_fu_104->d_V(grp_lut_div3_chunk_fu_104_d_V);
    grp_lut_div3_chunk_fu_104->r_in_V(grp_lut_div3_chunk_fu_104_r_in_V);
    grp_lut_div3_chunk_fu_104->ap_return_0(grp_lut_div3_chunk_fu_104_ap_return_0);
    grp_lut_div3_chunk_fu_104->ap_return_1(grp_lut_div3_chunk_fu_104_ap_return_1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_lut_div3_chunk_fu_104_ap_done );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_lut_div3_chunk_fu_104_ap_done );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ap_return);
    sensitive << ( grp_lut_div3_chunk_fu_104_ap_done );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( p_Result_s_fu_305_p17 );

    SC_METHOD(thread_d_chunk_V_fu_146_p1);
    sensitive << ( p_Result_i_fu_136_p4 );

    SC_METHOD(thread_grp_lut_div3_chunk_fu_104_ap_start);
    sensitive << ( grp_lut_div3_chunk_fu_104_ap_start_reg );

    SC_METHOD(thread_grp_lut_div3_chunk_fu_104_d_V);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( d_chunk_V_reg_330 );
    sensitive << ( d_chunk_V_1_reg_335 );
    sensitive << ( d_chunk_V_2_reg_340 );
    sensitive << ( d_chunk_V_3_reg_345 );
    sensitive << ( d_chunk_V_4_reg_350 );
    sensitive << ( d_chunk_V_5_reg_355 );
    sensitive << ( d_chunk_V_6_reg_360 );
    sensitive << ( d_chunk_V_7_reg_365 );
    sensitive << ( d_chunk_V_8_reg_370 );
    sensitive << ( d_chunk_V_9_reg_375 );
    sensitive << ( d_chunk_V_10_reg_380 );
    sensitive << ( d_chunk_V_11_reg_385 );
    sensitive << ( d_chunk_V_12_reg_390 );
    sensitive << ( d_chunk_V_13_reg_395 );
    sensitive << ( d_chunk_V_14_reg_400 );
    sensitive << ( d_chunk_V_15_reg_405 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_grp_lut_div3_chunk_fu_104_r_in_V);
    sensitive << ( reg_131 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_p_Result_i_fu_136_p4);
    sensitive << ( in_r );

    SC_METHOD(thread_p_Result_s_fu_305_p17);
    sensitive << ( tmp_reg_410 );
    sensitive << ( q_chunk_V_reg_415 );
    sensitive << ( q_chunk_V_1_reg_420 );
    sensitive << ( q_chunk_V_2_reg_425 );
    sensitive << ( q_chunk_V_3_reg_430 );
    sensitive << ( q_chunk_V_4_reg_435 );
    sensitive << ( q_chunk_V_5_reg_440 );
    sensitive << ( q_chunk_V_6_reg_445 );
    sensitive << ( q_chunk_V_7_reg_450 );
    sensitive << ( q_chunk_V_8_reg_455 );
    sensitive << ( q_chunk_V_9_reg_460 );
    sensitive << ( q_chunk_V_11_reg_465 );
    sensitive << ( q_chunk_V_12_reg_470 );
    sensitive << ( q_chunk_V_13_reg_475 );
    sensitive << ( q_chunk_V_14_reg_480 );
    sensitive << ( grp_lut_div3_chunk_fu_104_ap_return_0 );

    SC_METHOD(thread_tmp_fu_301_p1);
    sensitive << ( grp_lut_div3_chunk_fu_104_ap_return_0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_lut_div3_chunk_fu_104_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000000000000000000000000001";
    grp_lut_div3_chunk_fu_104_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "operator_long_div6_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r, "(port)in_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_131, "reg_131");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_lut_div3_chunk_fu_104_ap_idle, "grp_lut_div3_chunk_fu_104_ap_idle");
    sc_trace(mVcdFile, grp_lut_div3_chunk_fu_104_ap_ready, "grp_lut_div3_chunk_fu_104_ap_ready");
    sc_trace(mVcdFile, grp_lut_div3_chunk_fu_104_ap_done, "grp_lut_div3_chunk_fu_104_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, d_chunk_V_fu_146_p1, "d_chunk_V_fu_146_p1");
    sc_trace(mVcdFile, d_chunk_V_reg_330, "d_chunk_V_reg_330");
    sc_trace(mVcdFile, d_chunk_V_1_reg_335, "d_chunk_V_1_reg_335");
    sc_trace(mVcdFile, d_chunk_V_2_reg_340, "d_chunk_V_2_reg_340");
    sc_trace(mVcdFile, d_chunk_V_3_reg_345, "d_chunk_V_3_reg_345");
    sc_trace(mVcdFile, d_chunk_V_4_reg_350, "d_chunk_V_4_reg_350");
    sc_trace(mVcdFile, d_chunk_V_5_reg_355, "d_chunk_V_5_reg_355");
    sc_trace(mVcdFile, d_chunk_V_6_reg_360, "d_chunk_V_6_reg_360");
    sc_trace(mVcdFile, d_chunk_V_7_reg_365, "d_chunk_V_7_reg_365");
    sc_trace(mVcdFile, d_chunk_V_8_reg_370, "d_chunk_V_8_reg_370");
    sc_trace(mVcdFile, d_chunk_V_9_reg_375, "d_chunk_V_9_reg_375");
    sc_trace(mVcdFile, d_chunk_V_10_reg_380, "d_chunk_V_10_reg_380");
    sc_trace(mVcdFile, d_chunk_V_11_reg_385, "d_chunk_V_11_reg_385");
    sc_trace(mVcdFile, d_chunk_V_12_reg_390, "d_chunk_V_12_reg_390");
    sc_trace(mVcdFile, d_chunk_V_13_reg_395, "d_chunk_V_13_reg_395");
    sc_trace(mVcdFile, d_chunk_V_14_reg_400, "d_chunk_V_14_reg_400");
    sc_trace(mVcdFile, d_chunk_V_15_reg_405, "d_chunk_V_15_reg_405");
    sc_trace(mVcdFile, tmp_fu_301_p1, "tmp_fu_301_p1");
    sc_trace(mVcdFile, tmp_reg_410, "tmp_reg_410");
    sc_trace(mVcdFile, q_chunk_V_reg_415, "q_chunk_V_reg_415");
    sc_trace(mVcdFile, q_chunk_V_1_reg_420, "q_chunk_V_1_reg_420");
    sc_trace(mVcdFile, q_chunk_V_2_reg_425, "q_chunk_V_2_reg_425");
    sc_trace(mVcdFile, q_chunk_V_3_reg_430, "q_chunk_V_3_reg_430");
    sc_trace(mVcdFile, q_chunk_V_4_reg_435, "q_chunk_V_4_reg_435");
    sc_trace(mVcdFile, q_chunk_V_5_reg_440, "q_chunk_V_5_reg_440");
    sc_trace(mVcdFile, q_chunk_V_6_reg_445, "q_chunk_V_6_reg_445");
    sc_trace(mVcdFile, q_chunk_V_7_reg_450, "q_chunk_V_7_reg_450");
    sc_trace(mVcdFile, q_chunk_V_8_reg_455, "q_chunk_V_8_reg_455");
    sc_trace(mVcdFile, q_chunk_V_9_reg_460, "q_chunk_V_9_reg_460");
    sc_trace(mVcdFile, q_chunk_V_11_reg_465, "q_chunk_V_11_reg_465");
    sc_trace(mVcdFile, q_chunk_V_12_reg_470, "q_chunk_V_12_reg_470");
    sc_trace(mVcdFile, q_chunk_V_13_reg_475, "q_chunk_V_13_reg_475");
    sc_trace(mVcdFile, q_chunk_V_14_reg_480, "q_chunk_V_14_reg_480");
    sc_trace(mVcdFile, grp_lut_div3_chunk_fu_104_ap_start, "grp_lut_div3_chunk_fu_104_ap_start");
    sc_trace(mVcdFile, grp_lut_div3_chunk_fu_104_d_V, "grp_lut_div3_chunk_fu_104_d_V");
    sc_trace(mVcdFile, grp_lut_div3_chunk_fu_104_r_in_V, "grp_lut_div3_chunk_fu_104_r_in_V");
    sc_trace(mVcdFile, grp_lut_div3_chunk_fu_104_ap_return_0, "grp_lut_div3_chunk_fu_104_ap_return_0");
    sc_trace(mVcdFile, grp_lut_div3_chunk_fu_104_ap_return_1, "grp_lut_div3_chunk_fu_104_ap_return_1");
    sc_trace(mVcdFile, grp_lut_div3_chunk_fu_104_ap_start_reg, "grp_lut_div3_chunk_fu_104_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, p_Result_i_fu_136_p4, "p_Result_i_fu_136_p4");
    sc_trace(mVcdFile, p_Result_s_fu_305_p17, "p_Result_s_fu_305_p17");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("operator_long_div6.hdltvin.dat");
    mHdltvoutHandle.open("operator_long_div6.hdltvout.dat");
}

operator_long_div6::~operator_long_div6() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_lut_div3_chunk_fu_104;
}

void operator_long_div6::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_lut_div3_chunk_fu_104_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
            grp_lut_div3_chunk_fu_104_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_lut_div3_chunk_fu_104_ap_ready.read())) {
            grp_lut_div3_chunk_fu_104_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        d_chunk_V_10_reg_380 = in_r.read().range(24, 21);
        d_chunk_V_11_reg_385 = in_r.read().range(20, 17);
        d_chunk_V_12_reg_390 = in_r.read().range(16, 13);
        d_chunk_V_13_reg_395 = in_r.read().range(12, 9);
        d_chunk_V_14_reg_400 = in_r.read().range(8, 5);
        d_chunk_V_15_reg_405 = in_r.read().range(4, 1);
        d_chunk_V_1_reg_335 = in_r.read().range(60, 57);
        d_chunk_V_2_reg_340 = in_r.read().range(56, 53);
        d_chunk_V_3_reg_345 = in_r.read().range(52, 49);
        d_chunk_V_4_reg_350 = in_r.read().range(48, 45);
        d_chunk_V_5_reg_355 = in_r.read().range(44, 41);
        d_chunk_V_6_reg_360 = in_r.read().range(40, 37);
        d_chunk_V_7_reg_365 = in_r.read().range(36, 33);
        d_chunk_V_8_reg_370 = in_r.read().range(32, 29);
        d_chunk_V_9_reg_375 = in_r.read().range(28, 25);
        d_chunk_V_reg_330 = d_chunk_V_fu_146_p1.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        q_chunk_V_11_reg_465 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        q_chunk_V_12_reg_470 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        q_chunk_V_13_reg_475 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        q_chunk_V_14_reg_480 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        q_chunk_V_1_reg_420 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        q_chunk_V_2_reg_425 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        q_chunk_V_3_reg_430 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        q_chunk_V_4_reg_435 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        q_chunk_V_5_reg_440 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        q_chunk_V_6_reg_445 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        q_chunk_V_7_reg_450 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        q_chunk_V_8_reg_455 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        q_chunk_V_9_reg_460 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        q_chunk_V_reg_415 = grp_lut_div3_chunk_fu_104_ap_return_0.read();
    }
    if (((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) || (esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())))) {
        reg_131 = grp_lut_div3_chunk_fu_104_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_reg_410 = tmp_fu_301_p1.read();
    }
}

void operator_long_div6::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void operator_long_div6::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void operator_long_div6::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void operator_long_div6::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void operator_long_div6::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void operator_long_div6::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void operator_long_div6::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void operator_long_div6::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void operator_long_div6::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void operator_long_div6::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void operator_long_div6::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void operator_long_div6::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void operator_long_div6::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void operator_long_div6::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void operator_long_div6::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void operator_long_div6::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void operator_long_div6::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void operator_long_div6::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void operator_long_div6::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void operator_long_div6::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void operator_long_div6::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void operator_long_div6::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void operator_long_div6::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void operator_long_div6::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void operator_long_div6::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void operator_long_div6::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void operator_long_div6::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void operator_long_div6::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void operator_long_div6::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void operator_long_div6::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void operator_long_div6::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void operator_long_div6::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void operator_long_div6::thread_ap_done() {
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void operator_long_div6::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void operator_long_div6::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void operator_long_div6::thread_ap_return() {
    ap_return = esl_zext<64,63>(p_Result_s_fu_305_p17.read());
}

void operator_long_div6::thread_d_chunk_V_fu_146_p1() {
    d_chunk_V_fu_146_p1 = esl_zext<4,3>(p_Result_i_fu_136_p4.read());
}

void operator_long_div6::thread_grp_lut_div3_chunk_fu_104_ap_start() {
    grp_lut_div3_chunk_fu_104_ap_start = grp_lut_div3_chunk_fu_104_ap_start_reg.read();
}

void operator_long_div6::thread_grp_lut_div3_chunk_fu_104_d_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_15_reg_405.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_14_reg_400.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_13_reg_395.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_12_reg_390.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_11_reg_385.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_10_reg_380.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_9_reg_375.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_8_reg_370.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_7_reg_365.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_6_reg_360.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_5_reg_355.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_4_reg_350.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_3_reg_345.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_2_reg_340.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_1_reg_335.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_lut_div3_chunk_fu_104_d_V = d_chunk_V_reg_330.read();
    } else {
        grp_lut_div3_chunk_fu_104_d_V = "XXXX";
    }
}

void operator_long_div6::thread_grp_lut_div3_chunk_fu_104_r_in_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        grp_lut_div3_chunk_fu_104_r_in_V = reg_131.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_lut_div3_chunk_fu_104_r_in_V = ap_const_lv2_0;
    } else {
        grp_lut_div3_chunk_fu_104_r_in_V =  (sc_lv<2>) ("XX");
    }
}

void operator_long_div6::thread_p_Result_i_fu_136_p4() {
    p_Result_i_fu_136_p4 = in_r.read().range(63, 61);
}

void operator_long_div6::thread_p_Result_s_fu_305_p17() {
    p_Result_s_fu_305_p17 = esl_concat<59,4>(esl_concat<55,4>(esl_concat<51,4>(esl_concat<47,4>(esl_concat<43,4>(esl_concat<39,4>(esl_concat<35,4>(esl_concat<31,4>(esl_concat<27,4>(esl_concat<23,4>(esl_concat<19,4>(esl_concat<15,4>(esl_concat<11,4>(esl_concat<7,4>(esl_concat<3,4>(tmp_reg_410.read(), q_chunk_V_reg_415.read()), q_chunk_V_1_reg_420.read()), q_chunk_V_2_reg_425.read()), q_chunk_V_3_reg_430.read()), q_chunk_V_4_reg_435.read()), q_chunk_V_5_reg_440.read()), q_chunk_V_6_reg_445.read()), q_chunk_V_7_reg_450.read()), q_chunk_V_8_reg_455.read()), q_chunk_V_9_reg_460.read()), q_chunk_V_11_reg_465.read()), q_chunk_V_12_reg_470.read()), q_chunk_V_13_reg_475.read()), q_chunk_V_14_reg_480.read()), grp_lut_div3_chunk_fu_104_ap_return_0.read());
}

void operator_long_div6::thread_tmp_fu_301_p1() {
    tmp_fu_301_p1 = grp_lut_div3_chunk_fu_104_ap_return_0.read().range(3-1, 0);
}

void operator_long_div6::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(grp_lut_div3_chunk_fu_104_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void operator_long_div6::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r\" :  \"" << in_r.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

