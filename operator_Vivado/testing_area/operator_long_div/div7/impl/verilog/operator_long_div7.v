// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="operator_long_div7,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.262850,HLS_SYN_LAT=65,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=187,HLS_SYN_LUT=360,HLS_VERSION=2018_2}" *)

module operator_long_div7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 44'd1;
parameter    ap_ST_fsm_state2 = 44'd2;
parameter    ap_ST_fsm_state3 = 44'd4;
parameter    ap_ST_fsm_state4 = 44'd8;
parameter    ap_ST_fsm_state5 = 44'd16;
parameter    ap_ST_fsm_state6 = 44'd32;
parameter    ap_ST_fsm_state7 = 44'd64;
parameter    ap_ST_fsm_state8 = 44'd128;
parameter    ap_ST_fsm_state9 = 44'd256;
parameter    ap_ST_fsm_state10 = 44'd512;
parameter    ap_ST_fsm_state11 = 44'd1024;
parameter    ap_ST_fsm_state12 = 44'd2048;
parameter    ap_ST_fsm_state13 = 44'd4096;
parameter    ap_ST_fsm_state14 = 44'd8192;
parameter    ap_ST_fsm_state15 = 44'd16384;
parameter    ap_ST_fsm_state16 = 44'd32768;
parameter    ap_ST_fsm_state17 = 44'd65536;
parameter    ap_ST_fsm_state18 = 44'd131072;
parameter    ap_ST_fsm_state19 = 44'd262144;
parameter    ap_ST_fsm_state20 = 44'd524288;
parameter    ap_ST_fsm_state21 = 44'd1048576;
parameter    ap_ST_fsm_state22 = 44'd2097152;
parameter    ap_ST_fsm_state23 = 44'd4194304;
parameter    ap_ST_fsm_state24 = 44'd8388608;
parameter    ap_ST_fsm_state25 = 44'd16777216;
parameter    ap_ST_fsm_state26 = 44'd33554432;
parameter    ap_ST_fsm_state27 = 44'd67108864;
parameter    ap_ST_fsm_state28 = 44'd134217728;
parameter    ap_ST_fsm_state29 = 44'd268435456;
parameter    ap_ST_fsm_state30 = 44'd536870912;
parameter    ap_ST_fsm_state31 = 44'd1073741824;
parameter    ap_ST_fsm_state32 = 44'd2147483648;
parameter    ap_ST_fsm_state33 = 44'd4294967296;
parameter    ap_ST_fsm_state34 = 44'd8589934592;
parameter    ap_ST_fsm_state35 = 44'd17179869184;
parameter    ap_ST_fsm_state36 = 44'd34359738368;
parameter    ap_ST_fsm_state37 = 44'd68719476736;
parameter    ap_ST_fsm_state38 = 44'd137438953472;
parameter    ap_ST_fsm_state39 = 44'd274877906944;
parameter    ap_ST_fsm_state40 = 44'd549755813888;
parameter    ap_ST_fsm_state41 = 44'd1099511627776;
parameter    ap_ST_fsm_state42 = 44'd2199023255552;
parameter    ap_ST_fsm_state43 = 44'd4398046511104;
parameter    ap_ST_fsm_state44 = 44'd8796093022208;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] in_r;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [43:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] reg_149;
wire    ap_CS_fsm_state2;
wire    grp_lut_div7_chunk_fu_122_ap_idle;
wire    grp_lut_div7_chunk_fu_122_ap_ready;
wire    grp_lut_div7_chunk_fu_122_ap_done;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state42;
wire   [2:0] d_chunk_V_fu_162_p1;
reg   [2:0] d_chunk_V_reg_402;
reg   [2:0] d_chunk_V_1_reg_407;
reg   [2:0] d_chunk_V_2_reg_412;
reg   [2:0] d_chunk_V_3_reg_417;
reg   [2:0] d_chunk_V_4_reg_422;
reg   [2:0] d_chunk_V_5_reg_427;
reg   [2:0] d_chunk_V_6_reg_432;
reg   [2:0] d_chunk_V_7_reg_437;
reg   [2:0] d_chunk_V_8_reg_442;
reg   [2:0] d_chunk_V_9_reg_447;
reg   [2:0] d_chunk_V_10_reg_452;
reg   [2:0] d_chunk_V_11_reg_457;
reg   [2:0] d_chunk_V_12_reg_462;
reg   [2:0] d_chunk_V_13_reg_467;
reg   [2:0] d_chunk_V_14_reg_472;
reg   [2:0] d_chunk_V_15_reg_477;
reg   [2:0] d_chunk_V_16_reg_482;
reg   [2:0] d_chunk_V_17_reg_487;
reg   [2:0] d_chunk_V_18_reg_492;
reg   [2:0] d_chunk_V_19_reg_497;
reg   [2:0] d_chunk_V_20_reg_502;
wire   [2:0] d_chunk_V_21_fu_367_p1;
reg   [2:0] d_chunk_V_21_reg_507;
wire   [0:0] tmp_1_fu_371_p1;
reg   [0:0] tmp_1_reg_512;
reg   [2:0] q_chunk_V_reg_517;
reg   [2:0] q_chunk_V_1_reg_522;
reg   [2:0] q_chunk_V_2_reg_527;
reg   [2:0] q_chunk_V_3_reg_532;
reg   [2:0] q_chunk_V_4_reg_537;
reg   [2:0] q_chunk_V_5_reg_542;
reg   [2:0] q_chunk_V_6_reg_547;
reg   [2:0] q_chunk_V_7_reg_552;
reg   [2:0] q_chunk_V_8_reg_557;
reg   [2:0] q_chunk_V_9_reg_562;
reg   [2:0] q_chunk_V_11_reg_567;
reg   [2:0] q_chunk_V_12_reg_572;
reg   [2:0] q_chunk_V_13_reg_577;
reg   [2:0] q_chunk_V_14_reg_582;
reg   [2:0] q_chunk_V_15_reg_587;
reg   [2:0] q_chunk_V_16_reg_592;
reg   [2:0] q_chunk_V_17_reg_597;
reg   [2:0] q_chunk_V_18_reg_602;
reg   [2:0] q_chunk_V_19_reg_607;
reg   [2:0] q_chunk_V_20_reg_612;
wire    grp_lut_div7_chunk_fu_122_ap_start;
reg   [2:0] grp_lut_div7_chunk_fu_122_d_V;
reg   [2:0] grp_lut_div7_chunk_fu_122_r_in_V;
wire   [2:0] grp_lut_div7_chunk_fu_122_ap_return_0;
wire   [2:0] grp_lut_div7_chunk_fu_122_ap_return_1;
reg    grp_lut_div7_chunk_fu_122_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire   [0:0] tmp_fu_154_p3;
reg   [43:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 44'd1;
#0 grp_lut_div7_chunk_fu_122_ap_start_reg = 1'b0;
end

lut_div7_chunk grp_lut_div7_chunk_fu_122(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lut_div7_chunk_fu_122_ap_start),
    .ap_done(grp_lut_div7_chunk_fu_122_ap_done),
    .ap_idle(grp_lut_div7_chunk_fu_122_ap_idle),
    .ap_ready(grp_lut_div7_chunk_fu_122_ap_ready),
    .d_V(grp_lut_div7_chunk_fu_122_d_V),
    .r_in_V(grp_lut_div7_chunk_fu_122_r_in_V),
    .ap_return_0(grp_lut_div7_chunk_fu_122_ap_return_0),
    .ap_return_1(grp_lut_div7_chunk_fu_122_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lut_div7_chunk_fu_122_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_lut_div7_chunk_fu_122_ap_start_reg <= 1'b1;
        end else if ((grp_lut_div7_chunk_fu_122_ap_ready == 1'b1)) begin
            grp_lut_div7_chunk_fu_122_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        d_chunk_V_10_reg_452 <= {{in_r[35:33]}};
        d_chunk_V_11_reg_457 <= {{in_r[32:30]}};
        d_chunk_V_12_reg_462 <= {{in_r[29:27]}};
        d_chunk_V_13_reg_467 <= {{in_r[26:24]}};
        d_chunk_V_14_reg_472 <= {{in_r[23:21]}};
        d_chunk_V_15_reg_477 <= {{in_r[20:18]}};
        d_chunk_V_16_reg_482 <= {{in_r[17:15]}};
        d_chunk_V_17_reg_487 <= {{in_r[14:12]}};
        d_chunk_V_18_reg_492 <= {{in_r[11:9]}};
        d_chunk_V_19_reg_497 <= {{in_r[8:6]}};
        d_chunk_V_1_reg_407 <= {{in_r[62:60]}};
        d_chunk_V_20_reg_502 <= {{in_r[5:3]}};
        d_chunk_V_21_reg_507 <= d_chunk_V_21_fu_367_p1;
        d_chunk_V_2_reg_412 <= {{in_r[59:57]}};
        d_chunk_V_3_reg_417 <= {{in_r[56:54]}};
        d_chunk_V_4_reg_422 <= {{in_r[53:51]}};
        d_chunk_V_5_reg_427 <= {{in_r[50:48]}};
        d_chunk_V_6_reg_432 <= {{in_r[47:45]}};
        d_chunk_V_7_reg_437 <= {{in_r[44:42]}};
        d_chunk_V_8_reg_442 <= {{in_r[41:39]}};
        d_chunk_V_9_reg_447 <= {{in_r[38:36]}};
        d_chunk_V_reg_402[0] <= d_chunk_V_fu_162_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        q_chunk_V_11_reg_567 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        q_chunk_V_12_reg_572 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        q_chunk_V_13_reg_577 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
        q_chunk_V_14_reg_582 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        q_chunk_V_15_reg_587 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        q_chunk_V_16_reg_592 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
        q_chunk_V_17_reg_597 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
        q_chunk_V_18_reg_602 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        q_chunk_V_19_reg_607 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        q_chunk_V_1_reg_522 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
        q_chunk_V_20_reg_612 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        q_chunk_V_2_reg_527 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        q_chunk_V_3_reg_532 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        q_chunk_V_4_reg_537 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        q_chunk_V_5_reg_542 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        q_chunk_V_6_reg_547 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        q_chunk_V_7_reg_552 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        q_chunk_V_8_reg_557 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        q_chunk_V_9_reg_562 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        q_chunk_V_reg_517 <= grp_lut_div7_chunk_fu_122_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state38)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_149 <= grp_lut_div7_chunk_fu_122_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_1_reg_512 <= tmp_1_fu_371_p1;
    end
end

always @ (*) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_21_reg_507;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_20_reg_502;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_19_reg_497;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_18_reg_492;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_17_reg_487;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_16_reg_482;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_15_reg_477;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_14_reg_472;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_13_reg_467;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_12_reg_462;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_11_reg_457;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_10_reg_452;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_9_reg_447;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_8_reg_442;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_7_reg_437;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_6_reg_432;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_5_reg_427;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_4_reg_422;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_3_reg_417;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_2_reg_412;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_1_reg_407;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_lut_div7_chunk_fu_122_d_V = d_chunk_V_reg_402;
    end else begin
        grp_lut_div7_chunk_fu_122_d_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_lut_div7_chunk_fu_122_r_in_V = reg_149;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_lut_div7_chunk_fu_122_r_in_V = 3'd0;
    end else begin
        grp_lut_div7_chunk_fu_122_r_in_V = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((grp_lut_div7_chunk_fu_122_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = {{{{{{{{{{{{{{{{{{{{{{tmp_1_reg_512}, {q_chunk_V_reg_517}}, {q_chunk_V_1_reg_522}}, {q_chunk_V_2_reg_527}}, {q_chunk_V_3_reg_532}}, {q_chunk_V_4_reg_537}}, {q_chunk_V_5_reg_542}}, {q_chunk_V_6_reg_547}}, {q_chunk_V_7_reg_552}}, {q_chunk_V_8_reg_557}}, {q_chunk_V_9_reg_562}}, {q_chunk_V_11_reg_567}}, {q_chunk_V_12_reg_572}}, {q_chunk_V_13_reg_577}}, {q_chunk_V_14_reg_582}}, {q_chunk_V_15_reg_587}}, {q_chunk_V_16_reg_592}}, {q_chunk_V_17_reg_597}}, {q_chunk_V_18_reg_602}}, {q_chunk_V_19_reg_607}}, {q_chunk_V_20_reg_612}}, {grp_lut_div7_chunk_fu_122_ap_return_0}};

assign d_chunk_V_21_fu_367_p1 = in_r[2:0];

assign d_chunk_V_fu_162_p1 = tmp_fu_154_p3;

assign grp_lut_div7_chunk_fu_122_ap_start = grp_lut_div7_chunk_fu_122_ap_start_reg;

assign tmp_1_fu_371_p1 = grp_lut_div7_chunk_fu_122_ap_return_0[0:0];

assign tmp_fu_154_p3 = in_r[32'd63];

always @ (posedge ap_clk) begin
    d_chunk_V_reg_402[2:1] <= 2'b00;
end

endmodule //operator_long_div7
