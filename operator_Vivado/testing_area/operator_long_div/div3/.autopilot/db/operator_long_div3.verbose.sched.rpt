

================================================================
== Vivado HLS Report for 'operator_long_div3'
================================================================
* Date:           Fri Aug 31 16:49:20 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        operator_long_div
* Solution:       div3
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   2.50|     1.595|        0.31|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   47|   47|   47|   47|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 32
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.59>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%in_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %in_r) nounwind"   --->   Operation 33 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%d_chunk_V = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 60, i32 63) nounwind" [test.cpp:65->test.cpp:117]   --->   Operation 34 'partselect' 'd_chunk_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [2/2] (1.59ns)   --->   "%call_ret1_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V, i2 0) nounwind" [test.cpp:66->test.cpp:117]   --->   Operation 35 'call' 'call_ret1_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%d_chunk_V_1 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 56, i32 59) nounwind" [test.cpp:68->test.cpp:117]   --->   Operation 36 'partselect' 'd_chunk_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%d_chunk_V_2 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 52, i32 55) nounwind" [test.cpp:71->test.cpp:117]   --->   Operation 37 'partselect' 'd_chunk_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%d_chunk_V_3 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 48, i32 51) nounwind" [test.cpp:74->test.cpp:117]   --->   Operation 38 'partselect' 'd_chunk_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%d_chunk_V_4 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 44, i32 47) nounwind" [test.cpp:77->test.cpp:117]   --->   Operation 39 'partselect' 'd_chunk_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%d_chunk_V_5 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 40, i32 43) nounwind" [test.cpp:80->test.cpp:117]   --->   Operation 40 'partselect' 'd_chunk_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%d_chunk_V_6 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 36, i32 39) nounwind" [test.cpp:83->test.cpp:117]   --->   Operation 41 'partselect' 'd_chunk_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%d_chunk_V_7 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 32, i32 35) nounwind" [test.cpp:86->test.cpp:117]   --->   Operation 42 'partselect' 'd_chunk_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%d_chunk_V_8 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 28, i32 31) nounwind" [test.cpp:89->test.cpp:117]   --->   Operation 43 'partselect' 'd_chunk_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%d_chunk_V_9 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 24, i32 27) nounwind" [test.cpp:92->test.cpp:117]   --->   Operation 44 'partselect' 'd_chunk_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%d_chunk_V_10 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 20, i32 23) nounwind" [test.cpp:95->test.cpp:117]   --->   Operation 45 'partselect' 'd_chunk_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%d_chunk_V_11 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 16, i32 19) nounwind" [test.cpp:98->test.cpp:117]   --->   Operation 46 'partselect' 'd_chunk_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%d_chunk_V_12 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 12, i32 15) nounwind" [test.cpp:101->test.cpp:117]   --->   Operation 47 'partselect' 'd_chunk_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%d_chunk_V_13 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 8, i32 11) nounwind" [test.cpp:104->test.cpp:117]   --->   Operation 48 'partselect' 'd_chunk_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%d_chunk_V_14 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %in_read, i32 4, i32 7) nounwind" [test.cpp:107->test.cpp:117]   --->   Operation 49 'partselect' 'd_chunk_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%d_chunk_V_15 = trunc i64 %in_read to i4" [test.cpp:110->test.cpp:117]   --->   Operation 50 'trunc' 'd_chunk_V_15' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.33>
ST_2 : Operation 51 [1/2] (1.33ns)   --->   "%call_ret1_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V, i2 0) nounwind" [test.cpp:66->test.cpp:117]   --->   Operation 51 'call' 'call_ret1_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%q_chunk_V = extractvalue { i4, i2 } %call_ret1_i, 0" [test.cpp:66->test.cpp:117]   --->   Operation 52 'extractvalue' 'q_chunk_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%r_V = extractvalue { i4, i2 } %call_ret1_i, 1" [test.cpp:66->test.cpp:117]   --->   Operation 53 'extractvalue' 'r_V' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.59>
ST_3 : Operation 54 [2/2] (1.59ns)   --->   "%call_ret2_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_1, i2 %r_V) nounwind" [test.cpp:69->test.cpp:117]   --->   Operation 54 'call' 'call_ret2_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 1.33>
ST_4 : Operation 55 [1/2] (1.33ns)   --->   "%call_ret2_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_1, i2 %r_V) nounwind" [test.cpp:69->test.cpp:117]   --->   Operation 55 'call' 'call_ret2_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%q_chunk_V_1 = extractvalue { i4, i2 } %call_ret2_i, 0" [test.cpp:69->test.cpp:117]   --->   Operation 56 'extractvalue' 'q_chunk_V_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%r_V_1 = extractvalue { i4, i2 } %call_ret2_i, 1" [test.cpp:69->test.cpp:117]   --->   Operation 57 'extractvalue' 'r_V_1' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 1.59>
ST_5 : Operation 58 [2/2] (1.59ns)   --->   "%call_ret3_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_2, i2 %r_V_1) nounwind" [test.cpp:72->test.cpp:117]   --->   Operation 58 'call' 'call_ret3_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 1.33>
ST_6 : Operation 59 [1/2] (1.33ns)   --->   "%call_ret3_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_2, i2 %r_V_1) nounwind" [test.cpp:72->test.cpp:117]   --->   Operation 59 'call' 'call_ret3_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%q_chunk_V_2 = extractvalue { i4, i2 } %call_ret3_i, 0" [test.cpp:72->test.cpp:117]   --->   Operation 60 'extractvalue' 'q_chunk_V_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%r_V_2 = extractvalue { i4, i2 } %call_ret3_i, 1" [test.cpp:72->test.cpp:117]   --->   Operation 61 'extractvalue' 'r_V_2' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 1.59>
ST_7 : Operation 62 [2/2] (1.59ns)   --->   "%call_ret4_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_3, i2 %r_V_2) nounwind" [test.cpp:75->test.cpp:117]   --->   Operation 62 'call' 'call_ret4_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 1.33>
ST_8 : Operation 63 [1/2] (1.33ns)   --->   "%call_ret4_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_3, i2 %r_V_2) nounwind" [test.cpp:75->test.cpp:117]   --->   Operation 63 'call' 'call_ret4_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 64 [1/1] (0.00ns)   --->   "%q_chunk_V_3 = extractvalue { i4, i2 } %call_ret4_i, 0" [test.cpp:75->test.cpp:117]   --->   Operation 64 'extractvalue' 'q_chunk_V_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 65 [1/1] (0.00ns)   --->   "%r_V_3 = extractvalue { i4, i2 } %call_ret4_i, 1" [test.cpp:75->test.cpp:117]   --->   Operation 65 'extractvalue' 'r_V_3' <Predicate = true> <Delay = 0.00>

State 9 <SV = 8> <Delay = 1.59>
ST_9 : Operation 66 [2/2] (1.59ns)   --->   "%call_ret5_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_4, i2 %r_V_3) nounwind" [test.cpp:78->test.cpp:117]   --->   Operation 66 'call' 'call_ret5_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 1.33>
ST_10 : Operation 67 [1/2] (1.33ns)   --->   "%call_ret5_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_4, i2 %r_V_3) nounwind" [test.cpp:78->test.cpp:117]   --->   Operation 67 'call' 'call_ret5_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 68 [1/1] (0.00ns)   --->   "%q_chunk_V_4 = extractvalue { i4, i2 } %call_ret5_i, 0" [test.cpp:78->test.cpp:117]   --->   Operation 68 'extractvalue' 'q_chunk_V_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 69 [1/1] (0.00ns)   --->   "%r_V_4 = extractvalue { i4, i2 } %call_ret5_i, 1" [test.cpp:78->test.cpp:117]   --->   Operation 69 'extractvalue' 'r_V_4' <Predicate = true> <Delay = 0.00>

State 11 <SV = 10> <Delay = 1.59>
ST_11 : Operation 70 [2/2] (1.59ns)   --->   "%call_ret6_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_5, i2 %r_V_4) nounwind" [test.cpp:81->test.cpp:117]   --->   Operation 70 'call' 'call_ret6_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 1.33>
ST_12 : Operation 71 [1/2] (1.33ns)   --->   "%call_ret6_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_5, i2 %r_V_4) nounwind" [test.cpp:81->test.cpp:117]   --->   Operation 71 'call' 'call_ret6_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 72 [1/1] (0.00ns)   --->   "%q_chunk_V_5 = extractvalue { i4, i2 } %call_ret6_i, 0" [test.cpp:81->test.cpp:117]   --->   Operation 72 'extractvalue' 'q_chunk_V_5' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 73 [1/1] (0.00ns)   --->   "%r_V_5 = extractvalue { i4, i2 } %call_ret6_i, 1" [test.cpp:81->test.cpp:117]   --->   Operation 73 'extractvalue' 'r_V_5' <Predicate = true> <Delay = 0.00>

State 13 <SV = 12> <Delay = 1.59>
ST_13 : Operation 74 [2/2] (1.59ns)   --->   "%call_ret7_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_6, i2 %r_V_5) nounwind" [test.cpp:84->test.cpp:117]   --->   Operation 74 'call' 'call_ret7_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 1.33>
ST_14 : Operation 75 [1/2] (1.33ns)   --->   "%call_ret7_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_6, i2 %r_V_5) nounwind" [test.cpp:84->test.cpp:117]   --->   Operation 75 'call' 'call_ret7_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 76 [1/1] (0.00ns)   --->   "%q_chunk_V_6 = extractvalue { i4, i2 } %call_ret7_i, 0" [test.cpp:84->test.cpp:117]   --->   Operation 76 'extractvalue' 'q_chunk_V_6' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 77 [1/1] (0.00ns)   --->   "%r_V_6 = extractvalue { i4, i2 } %call_ret7_i, 1" [test.cpp:84->test.cpp:117]   --->   Operation 77 'extractvalue' 'r_V_6' <Predicate = true> <Delay = 0.00>

State 15 <SV = 14> <Delay = 1.59>
ST_15 : Operation 78 [2/2] (1.59ns)   --->   "%call_ret8_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_7, i2 %r_V_6) nounwind" [test.cpp:87->test.cpp:117]   --->   Operation 78 'call' 'call_ret8_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 1.33>
ST_16 : Operation 79 [1/2] (1.33ns)   --->   "%call_ret8_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_7, i2 %r_V_6) nounwind" [test.cpp:87->test.cpp:117]   --->   Operation 79 'call' 'call_ret8_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 80 [1/1] (0.00ns)   --->   "%q_chunk_V_7 = extractvalue { i4, i2 } %call_ret8_i, 0" [test.cpp:87->test.cpp:117]   --->   Operation 80 'extractvalue' 'q_chunk_V_7' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 81 [1/1] (0.00ns)   --->   "%r_V_7 = extractvalue { i4, i2 } %call_ret8_i, 1" [test.cpp:87->test.cpp:117]   --->   Operation 81 'extractvalue' 'r_V_7' <Predicate = true> <Delay = 0.00>

State 17 <SV = 16> <Delay = 1.59>
ST_17 : Operation 82 [2/2] (1.59ns)   --->   "%call_ret9_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_8, i2 %r_V_7) nounwind" [test.cpp:90->test.cpp:117]   --->   Operation 82 'call' 'call_ret9_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 1.33>
ST_18 : Operation 83 [1/2] (1.33ns)   --->   "%call_ret9_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_8, i2 %r_V_7) nounwind" [test.cpp:90->test.cpp:117]   --->   Operation 83 'call' 'call_ret9_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 84 [1/1] (0.00ns)   --->   "%q_chunk_V_8 = extractvalue { i4, i2 } %call_ret9_i, 0" [test.cpp:90->test.cpp:117]   --->   Operation 84 'extractvalue' 'q_chunk_V_8' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 85 [1/1] (0.00ns)   --->   "%r_V_8 = extractvalue { i4, i2 } %call_ret9_i, 1" [test.cpp:90->test.cpp:117]   --->   Operation 85 'extractvalue' 'r_V_8' <Predicate = true> <Delay = 0.00>

State 19 <SV = 18> <Delay = 1.59>
ST_19 : Operation 86 [2/2] (1.59ns)   --->   "%call_ret10_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_9, i2 %r_V_8) nounwind" [test.cpp:93->test.cpp:117]   --->   Operation 86 'call' 'call_ret10_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 19> <Delay = 1.33>
ST_20 : Operation 87 [1/2] (1.33ns)   --->   "%call_ret10_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_9, i2 %r_V_8) nounwind" [test.cpp:93->test.cpp:117]   --->   Operation 87 'call' 'call_ret10_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 88 [1/1] (0.00ns)   --->   "%q_chunk_V_9 = extractvalue { i4, i2 } %call_ret10_i, 0" [test.cpp:93->test.cpp:117]   --->   Operation 88 'extractvalue' 'q_chunk_V_9' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 89 [1/1] (0.00ns)   --->   "%r_V_9 = extractvalue { i4, i2 } %call_ret10_i, 1" [test.cpp:93->test.cpp:117]   --->   Operation 89 'extractvalue' 'r_V_9' <Predicate = true> <Delay = 0.00>

State 21 <SV = 20> <Delay = 1.59>
ST_21 : Operation 90 [2/2] (1.59ns)   --->   "%call_ret11_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_10, i2 %r_V_9) nounwind" [test.cpp:96->test.cpp:117]   --->   Operation 90 'call' 'call_ret11_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 1.33>
ST_22 : Operation 91 [1/2] (1.33ns)   --->   "%call_ret11_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_10, i2 %r_V_9) nounwind" [test.cpp:96->test.cpp:117]   --->   Operation 91 'call' 'call_ret11_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 92 [1/1] (0.00ns)   --->   "%q_chunk_V_10 = extractvalue { i4, i2 } %call_ret11_i, 0" [test.cpp:96->test.cpp:117]   --->   Operation 92 'extractvalue' 'q_chunk_V_10' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 93 [1/1] (0.00ns)   --->   "%r_V_10 = extractvalue { i4, i2 } %call_ret11_i, 1" [test.cpp:96->test.cpp:117]   --->   Operation 93 'extractvalue' 'r_V_10' <Predicate = true> <Delay = 0.00>

State 23 <SV = 22> <Delay = 1.59>
ST_23 : Operation 94 [2/2] (1.59ns)   --->   "%call_ret12_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_11, i2 %r_V_10) nounwind" [test.cpp:99->test.cpp:117]   --->   Operation 94 'call' 'call_ret12_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 23> <Delay = 1.33>
ST_24 : Operation 95 [1/2] (1.33ns)   --->   "%call_ret12_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_11, i2 %r_V_10) nounwind" [test.cpp:99->test.cpp:117]   --->   Operation 95 'call' 'call_ret12_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 96 [1/1] (0.00ns)   --->   "%q_chunk_V_11 = extractvalue { i4, i2 } %call_ret12_i, 0" [test.cpp:99->test.cpp:117]   --->   Operation 96 'extractvalue' 'q_chunk_V_11' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 97 [1/1] (0.00ns)   --->   "%r_V_11 = extractvalue { i4, i2 } %call_ret12_i, 1" [test.cpp:99->test.cpp:117]   --->   Operation 97 'extractvalue' 'r_V_11' <Predicate = true> <Delay = 0.00>

State 25 <SV = 24> <Delay = 1.59>
ST_25 : Operation 98 [2/2] (1.59ns)   --->   "%call_ret13_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_12, i2 %r_V_11) nounwind" [test.cpp:102->test.cpp:117]   --->   Operation 98 'call' 'call_ret13_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 26 <SV = 25> <Delay = 1.33>
ST_26 : Operation 99 [1/2] (1.33ns)   --->   "%call_ret13_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_12, i2 %r_V_11) nounwind" [test.cpp:102->test.cpp:117]   --->   Operation 99 'call' 'call_ret13_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_26 : Operation 100 [1/1] (0.00ns)   --->   "%q_chunk_V_12 = extractvalue { i4, i2 } %call_ret13_i, 0" [test.cpp:102->test.cpp:117]   --->   Operation 100 'extractvalue' 'q_chunk_V_12' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 101 [1/1] (0.00ns)   --->   "%r_V_12 = extractvalue { i4, i2 } %call_ret13_i, 1" [test.cpp:102->test.cpp:117]   --->   Operation 101 'extractvalue' 'r_V_12' <Predicate = true> <Delay = 0.00>

State 27 <SV = 26> <Delay = 1.59>
ST_27 : Operation 102 [2/2] (1.59ns)   --->   "%call_ret14_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_13, i2 %r_V_12) nounwind" [test.cpp:105->test.cpp:117]   --->   Operation 102 'call' 'call_ret14_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 27> <Delay = 1.33>
ST_28 : Operation 103 [1/2] (1.33ns)   --->   "%call_ret14_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_13, i2 %r_V_12) nounwind" [test.cpp:105->test.cpp:117]   --->   Operation 103 'call' 'call_ret14_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_28 : Operation 104 [1/1] (0.00ns)   --->   "%q_chunk_V_13 = extractvalue { i4, i2 } %call_ret14_i, 0" [test.cpp:105->test.cpp:117]   --->   Operation 104 'extractvalue' 'q_chunk_V_13' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 105 [1/1] (0.00ns)   --->   "%r_V_13 = extractvalue { i4, i2 } %call_ret14_i, 1" [test.cpp:105->test.cpp:117]   --->   Operation 105 'extractvalue' 'r_V_13' <Predicate = true> <Delay = 0.00>

State 29 <SV = 28> <Delay = 1.59>
ST_29 : Operation 106 [2/2] (1.59ns)   --->   "%call_ret15_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_14, i2 %r_V_13) nounwind" [test.cpp:108->test.cpp:117]   --->   Operation 106 'call' 'call_ret15_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 30 <SV = 29> <Delay = 1.33>
ST_30 : Operation 107 [1/2] (1.33ns)   --->   "%call_ret15_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_14, i2 %r_V_13) nounwind" [test.cpp:108->test.cpp:117]   --->   Operation 107 'call' 'call_ret15_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_30 : Operation 108 [1/1] (0.00ns)   --->   "%q_chunk_V_14 = extractvalue { i4, i2 } %call_ret15_i, 0" [test.cpp:108->test.cpp:117]   --->   Operation 108 'extractvalue' 'q_chunk_V_14' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 109 [1/1] (0.00ns)   --->   "%r_V_14 = extractvalue { i4, i2 } %call_ret15_i, 1" [test.cpp:108->test.cpp:117]   --->   Operation 109 'extractvalue' 'r_V_14' <Predicate = true> <Delay = 0.00>

State 31 <SV = 30> <Delay = 1.59>
ST_31 : Operation 110 [2/2] (1.59ns)   --->   "%call_ret_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_15, i2 %r_V_14) nounwind" [test.cpp:111->test.cpp:117]   --->   Operation 110 'call' 'call_ret_i' <Predicate = true> <Delay = 1.59> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 32 <SV = 31> <Delay = 1.33>
ST_32 : Operation 111 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 %in_r) nounwind, !map !126"   --->   Operation 111 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 112 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 0) nounwind, !map !132"   --->   Operation 112 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 113 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @operator_long_div3_s) nounwind"   --->   Operation 113 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 114 [1/2] (1.33ns)   --->   "%call_ret_i = call fastcc { i4, i2 } @lut_div3_chunk(i4 %d_chunk_V_15, i2 %r_V_14) nounwind" [test.cpp:111->test.cpp:117]   --->   Operation 114 'call' 'call_ret_i' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_32 : Operation 115 [1/1] (0.00ns)   --->   "%q_chunk_V_15 = extractvalue { i4, i2 } %call_ret_i, 0" [test.cpp:111->test.cpp:117]   --->   Operation 115 'extractvalue' 'q_chunk_V_15' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 116 [1/1] (0.00ns)   --->   "%p_Result_s = call i64 @_ssdm_op_BitConcatenate.i64.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i4 %q_chunk_V, i4 %q_chunk_V_1, i4 %q_chunk_V_2, i4 %q_chunk_V_3, i4 %q_chunk_V_4, i4 %q_chunk_V_5, i4 %q_chunk_V_6, i4 %q_chunk_V_7, i4 %q_chunk_V_8, i4 %q_chunk_V_9, i4 %q_chunk_V_10, i4 %q_chunk_V_11, i4 %q_chunk_V_12, i4 %q_chunk_V_13, i4 %q_chunk_V_14, i4 %q_chunk_V_15) nounwind" [test.cpp:112->test.cpp:117]   --->   Operation 116 'bitconcatenate' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 117 [1/1] (0.00ns)   --->   "ret i64 %p_Result_s" [test.cpp:117]   --->   Operation 117 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 2.5ns, clock uncertainty: 0.312ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	wire read on port 'in_r' [11]  (0 ns)
	'call' operation ('call_ret1_i', test.cpp:66->test.cpp:117) to 'lut_div3_chunk' [13]  (1.59 ns)

 <State 2>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret1_i', test.cpp:66->test.cpp:117) to 'lut_div3_chunk' [13]  (1.33 ns)

 <State 3>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret2_i', test.cpp:69->test.cpp:117) to 'lut_div3_chunk' [17]  (1.59 ns)

 <State 4>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret2_i', test.cpp:69->test.cpp:117) to 'lut_div3_chunk' [17]  (1.33 ns)

 <State 5>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret3_i', test.cpp:72->test.cpp:117) to 'lut_div3_chunk' [21]  (1.59 ns)

 <State 6>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret3_i', test.cpp:72->test.cpp:117) to 'lut_div3_chunk' [21]  (1.33 ns)

 <State 7>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret4_i', test.cpp:75->test.cpp:117) to 'lut_div3_chunk' [25]  (1.59 ns)

 <State 8>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret4_i', test.cpp:75->test.cpp:117) to 'lut_div3_chunk' [25]  (1.33 ns)

 <State 9>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret5_i', test.cpp:78->test.cpp:117) to 'lut_div3_chunk' [29]  (1.59 ns)

 <State 10>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret5_i', test.cpp:78->test.cpp:117) to 'lut_div3_chunk' [29]  (1.33 ns)

 <State 11>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret6_i', test.cpp:81->test.cpp:117) to 'lut_div3_chunk' [33]  (1.59 ns)

 <State 12>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret6_i', test.cpp:81->test.cpp:117) to 'lut_div3_chunk' [33]  (1.33 ns)

 <State 13>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret7_i', test.cpp:84->test.cpp:117) to 'lut_div3_chunk' [37]  (1.59 ns)

 <State 14>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret7_i', test.cpp:84->test.cpp:117) to 'lut_div3_chunk' [37]  (1.33 ns)

 <State 15>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret8_i', test.cpp:87->test.cpp:117) to 'lut_div3_chunk' [41]  (1.59 ns)

 <State 16>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret8_i', test.cpp:87->test.cpp:117) to 'lut_div3_chunk' [41]  (1.33 ns)

 <State 17>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret9_i', test.cpp:90->test.cpp:117) to 'lut_div3_chunk' [45]  (1.59 ns)

 <State 18>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret9_i', test.cpp:90->test.cpp:117) to 'lut_div3_chunk' [45]  (1.33 ns)

 <State 19>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret10_i', test.cpp:93->test.cpp:117) to 'lut_div3_chunk' [49]  (1.59 ns)

 <State 20>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret10_i', test.cpp:93->test.cpp:117) to 'lut_div3_chunk' [49]  (1.33 ns)

 <State 21>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret11_i', test.cpp:96->test.cpp:117) to 'lut_div3_chunk' [53]  (1.59 ns)

 <State 22>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret11_i', test.cpp:96->test.cpp:117) to 'lut_div3_chunk' [53]  (1.33 ns)

 <State 23>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret12_i', test.cpp:99->test.cpp:117) to 'lut_div3_chunk' [57]  (1.59 ns)

 <State 24>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret12_i', test.cpp:99->test.cpp:117) to 'lut_div3_chunk' [57]  (1.33 ns)

 <State 25>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret13_i', test.cpp:102->test.cpp:117) to 'lut_div3_chunk' [61]  (1.59 ns)

 <State 26>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret13_i', test.cpp:102->test.cpp:117) to 'lut_div3_chunk' [61]  (1.33 ns)

 <State 27>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret14_i', test.cpp:105->test.cpp:117) to 'lut_div3_chunk' [65]  (1.59 ns)

 <State 28>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret14_i', test.cpp:105->test.cpp:117) to 'lut_div3_chunk' [65]  (1.33 ns)

 <State 29>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret15_i', test.cpp:108->test.cpp:117) to 'lut_div3_chunk' [69]  (1.59 ns)

 <State 30>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret15_i', test.cpp:108->test.cpp:117) to 'lut_div3_chunk' [69]  (1.33 ns)

 <State 31>: 1.59ns
The critical path consists of the following:
	'call' operation ('call_ret_i', test.cpp:111->test.cpp:117) to 'lut_div3_chunk' [73]  (1.59 ns)

 <State 32>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret_i', test.cpp:111->test.cpp:117) to 'lut_div3_chunk' [73]  (1.33 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
