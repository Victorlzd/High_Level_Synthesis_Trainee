-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity operator_long_div3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of operator_long_div3 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "operator_long_div3,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=28.424000,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=68,HLS_SYN_LUT=13254,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal q_chunk_V_0_i_i_reg_404 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_0_1_i_i_reg_409 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_0_2_i_i_reg_414 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_0_3_i_i_reg_419 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_0_4_i_i_reg_424 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_0_5_i_i_reg_429 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_0_6_i_i_reg_434 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_chunk_V_0_7_i_i_reg_439 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_ret_7_i_i_reg_444 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_13_8_i_i_reg_449 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_13_9_i_i_reg_454 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_13_i_i_4_reg_459 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_13_10_i_i_reg_464 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_13_11_i_i_reg_469 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_13_12_i_i_reg_474 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_13_13_i_i_reg_479 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_372_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_484 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_94_ap_ready : STD_LOGIC;
    signal grp_lut_div3_chunk_fu_94_d_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_94_r_in_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div3_chunk_fu_94_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_94_ap_return_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div3_chunk_fu_101_ap_ready : STD_LOGIC;
    signal grp_lut_div3_chunk_fu_101_d_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_101_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_101_ap_return_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div3_chunk_fu_107_ap_ready : STD_LOGIC;
    signal grp_lut_div3_chunk_fu_107_d_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_107_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_107_ap_return_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div3_chunk_fu_113_ap_ready : STD_LOGIC;
    signal grp_lut_div3_chunk_fu_113_d_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_113_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_113_ap_return_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div3_chunk_fu_119_ap_ready : STD_LOGIC;
    signal grp_lut_div3_chunk_fu_119_d_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_119_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_119_ap_return_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div3_chunk_fu_125_ap_ready : STD_LOGIC;
    signal grp_lut_div3_chunk_fu_125_d_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_125_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_125_ap_return_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div3_chunk_fu_131_ap_ready : STD_LOGIC;
    signal grp_lut_div3_chunk_fu_131_d_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_131_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_131_ap_return_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div3_chunk_fu_137_ap_ready : STD_LOGIC;
    signal grp_lut_div3_chunk_fu_137_d_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_137_ap_return_0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div3_chunk_fu_137_ap_return_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);

    component lut_div3_chunk IS
    port (
        ap_ready : OUT STD_LOGIC;
        d_V : IN STD_LOGIC_VECTOR (3 downto 0);
        r_in_V : IN STD_LOGIC_VECTOR (1 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    grp_lut_div3_chunk_fu_94 : component lut_div3_chunk
    port map (
        ap_ready => grp_lut_div3_chunk_fu_94_ap_ready,
        d_V => grp_lut_div3_chunk_fu_94_d_V,
        r_in_V => grp_lut_div3_chunk_fu_94_r_in_V,
        ap_return_0 => grp_lut_div3_chunk_fu_94_ap_return_0,
        ap_return_1 => grp_lut_div3_chunk_fu_94_ap_return_1);

    grp_lut_div3_chunk_fu_101 : component lut_div3_chunk
    port map (
        ap_ready => grp_lut_div3_chunk_fu_101_ap_ready,
        d_V => grp_lut_div3_chunk_fu_101_d_V,
        r_in_V => grp_lut_div3_chunk_fu_94_ap_return_1,
        ap_return_0 => grp_lut_div3_chunk_fu_101_ap_return_0,
        ap_return_1 => grp_lut_div3_chunk_fu_101_ap_return_1);

    grp_lut_div3_chunk_fu_107 : component lut_div3_chunk
    port map (
        ap_ready => grp_lut_div3_chunk_fu_107_ap_ready,
        d_V => grp_lut_div3_chunk_fu_107_d_V,
        r_in_V => grp_lut_div3_chunk_fu_101_ap_return_1,
        ap_return_0 => grp_lut_div3_chunk_fu_107_ap_return_0,
        ap_return_1 => grp_lut_div3_chunk_fu_107_ap_return_1);

    grp_lut_div3_chunk_fu_113 : component lut_div3_chunk
    port map (
        ap_ready => grp_lut_div3_chunk_fu_113_ap_ready,
        d_V => grp_lut_div3_chunk_fu_113_d_V,
        r_in_V => grp_lut_div3_chunk_fu_107_ap_return_1,
        ap_return_0 => grp_lut_div3_chunk_fu_113_ap_return_0,
        ap_return_1 => grp_lut_div3_chunk_fu_113_ap_return_1);

    grp_lut_div3_chunk_fu_119 : component lut_div3_chunk
    port map (
        ap_ready => grp_lut_div3_chunk_fu_119_ap_ready,
        d_V => grp_lut_div3_chunk_fu_119_d_V,
        r_in_V => grp_lut_div3_chunk_fu_113_ap_return_1,
        ap_return_0 => grp_lut_div3_chunk_fu_119_ap_return_0,
        ap_return_1 => grp_lut_div3_chunk_fu_119_ap_return_1);

    grp_lut_div3_chunk_fu_125 : component lut_div3_chunk
    port map (
        ap_ready => grp_lut_div3_chunk_fu_125_ap_ready,
        d_V => grp_lut_div3_chunk_fu_125_d_V,
        r_in_V => grp_lut_div3_chunk_fu_119_ap_return_1,
        ap_return_0 => grp_lut_div3_chunk_fu_125_ap_return_0,
        ap_return_1 => grp_lut_div3_chunk_fu_125_ap_return_1);

    grp_lut_div3_chunk_fu_131 : component lut_div3_chunk
    port map (
        ap_ready => grp_lut_div3_chunk_fu_131_ap_ready,
        d_V => grp_lut_div3_chunk_fu_131_d_V,
        r_in_V => grp_lut_div3_chunk_fu_125_ap_return_1,
        ap_return_0 => grp_lut_div3_chunk_fu_131_ap_return_0,
        ap_return_1 => grp_lut_div3_chunk_fu_131_ap_return_1);

    grp_lut_div3_chunk_fu_137 : component lut_div3_chunk
    port map (
        ap_ready => grp_lut_div3_chunk_fu_137_ap_ready,
        d_V => grp_lut_div3_chunk_fu_137_d_V,
        r_in_V => grp_lut_div3_chunk_fu_131_ap_return_1,
        ap_return_0 => grp_lut_div3_chunk_fu_137_ap_return_0,
        ap_return_1 => grp_lut_div3_chunk_fu_137_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_Result_13_10_i_i_reg_464 <= in_r(19 downto 16);
                p_Result_13_11_i_i_reg_469 <= in_r(15 downto 12);
                p_Result_13_12_i_i_reg_474 <= in_r(11 downto 8);
                p_Result_13_13_i_i_reg_479 <= in_r(7 downto 4);
                p_Result_13_8_i_i_reg_449 <= in_r(31 downto 28);
                p_Result_13_9_i_i_reg_454 <= in_r(27 downto 24);
                p_Result_13_i_i_4_reg_459 <= in_r(23 downto 20);
                q_chunk_V_0_1_i_i_reg_409 <= grp_lut_div3_chunk_fu_101_ap_return_0;
                q_chunk_V_0_2_i_i_reg_414 <= grp_lut_div3_chunk_fu_107_ap_return_0;
                q_chunk_V_0_3_i_i_reg_419 <= grp_lut_div3_chunk_fu_113_ap_return_0;
                q_chunk_V_0_4_i_i_reg_424 <= grp_lut_div3_chunk_fu_119_ap_return_0;
                q_chunk_V_0_5_i_i_reg_429 <= grp_lut_div3_chunk_fu_125_ap_return_0;
                q_chunk_V_0_6_i_i_reg_434 <= grp_lut_div3_chunk_fu_131_ap_return_0;
                q_chunk_V_0_7_i_i_reg_439 <= grp_lut_div3_chunk_fu_137_ap_return_0;
                q_chunk_V_0_i_i_reg_404 <= grp_lut_div3_chunk_fu_94_ap_return_0;
                r_V_ret_7_i_i_reg_444 <= grp_lut_div3_chunk_fu_137_ap_return_1;
                tmp_reg_484 <= tmp_fu_372_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_done_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= (((((((((((((((q_chunk_V_0_i_i_reg_404 & q_chunk_V_0_1_i_i_reg_409) & q_chunk_V_0_2_i_i_reg_414) & q_chunk_V_0_3_i_i_reg_419) & q_chunk_V_0_4_i_i_reg_424) & q_chunk_V_0_5_i_i_reg_429) & q_chunk_V_0_6_i_i_reg_434) & q_chunk_V_0_7_i_i_reg_439) & grp_lut_div3_chunk_fu_94_ap_return_0) & grp_lut_div3_chunk_fu_101_ap_return_0) & grp_lut_div3_chunk_fu_107_ap_return_0) & grp_lut_div3_chunk_fu_113_ap_return_0) & grp_lut_div3_chunk_fu_119_ap_return_0) & grp_lut_div3_chunk_fu_125_ap_return_0) & grp_lut_div3_chunk_fu_131_ap_return_0) & grp_lut_div3_chunk_fu_137_ap_return_0);

    grp_lut_div3_chunk_fu_101_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_9_i_i_reg_454, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_101_d_V <= p_Result_13_9_i_i_reg_454;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div3_chunk_fu_101_d_V <= in_r(59 downto 56);
        else 
            grp_lut_div3_chunk_fu_101_d_V <= "XXXX";
        end if; 
    end process;


    grp_lut_div3_chunk_fu_107_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_i_i_4_reg_459, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_107_d_V <= p_Result_13_i_i_4_reg_459;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div3_chunk_fu_107_d_V <= in_r(55 downto 52);
        else 
            grp_lut_div3_chunk_fu_107_d_V <= "XXXX";
        end if; 
    end process;


    grp_lut_div3_chunk_fu_113_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_10_i_i_reg_464, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_113_d_V <= p_Result_13_10_i_i_reg_464;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div3_chunk_fu_113_d_V <= in_r(51 downto 48);
        else 
            grp_lut_div3_chunk_fu_113_d_V <= "XXXX";
        end if; 
    end process;


    grp_lut_div3_chunk_fu_119_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_11_i_i_reg_469, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_119_d_V <= p_Result_13_11_i_i_reg_469;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div3_chunk_fu_119_d_V <= in_r(47 downto 44);
        else 
            grp_lut_div3_chunk_fu_119_d_V <= "XXXX";
        end if; 
    end process;


    grp_lut_div3_chunk_fu_125_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_12_i_i_reg_474, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_125_d_V <= p_Result_13_12_i_i_reg_474;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div3_chunk_fu_125_d_V <= in_r(43 downto 40);
        else 
            grp_lut_div3_chunk_fu_125_d_V <= "XXXX";
        end if; 
    end process;


    grp_lut_div3_chunk_fu_131_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_13_i_i_reg_479, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_131_d_V <= p_Result_13_13_i_i_reg_479;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div3_chunk_fu_131_d_V <= in_r(39 downto 36);
        else 
            grp_lut_div3_chunk_fu_131_d_V <= "XXXX";
        end if; 
    end process;


    grp_lut_div3_chunk_fu_137_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, tmp_reg_484, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_137_d_V <= tmp_reg_484;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div3_chunk_fu_137_d_V <= in_r(35 downto 32);
        else 
            grp_lut_div3_chunk_fu_137_d_V <= "XXXX";
        end if; 
    end process;


    grp_lut_div3_chunk_fu_94_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_8_i_i_reg_449, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_94_d_V <= p_Result_13_8_i_i_reg_449;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div3_chunk_fu_94_d_V <= in_r(63 downto 60);
        else 
            grp_lut_div3_chunk_fu_94_d_V <= "XXXX";
        end if; 
    end process;


    grp_lut_div3_chunk_fu_94_r_in_V_assign_proc : process(ap_CS_fsm_state1, r_V_ret_7_i_i_reg_444, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div3_chunk_fu_94_r_in_V <= r_V_ret_7_i_i_reg_444;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div3_chunk_fu_94_r_in_V <= ap_const_lv2_0;
        else 
            grp_lut_div3_chunk_fu_94_r_in_V <= "XX";
        end if; 
    end process;

    tmp_fu_372_p1 <= in_r(4 - 1 downto 0);
end behav;
