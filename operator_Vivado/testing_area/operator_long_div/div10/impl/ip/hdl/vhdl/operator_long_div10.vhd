-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity operator_long_div10 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of operator_long_div10 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "operator_long_div10,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=41.193625,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=68,HLS_SYN_LUT=18198,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal q_chunk_V_0_i_i_reg_537 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_0_1_i_i_reg_542 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_0_2_i_i_reg_547 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_0_3_i_i_reg_552 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_0_4_i_i_reg_557 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_0_5_i_i_reg_562 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_0_6_i_i_reg_567 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_0_7_i_i_reg_572 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_0_8_i_i_reg_577 : STD_LOGIC_VECTOR (2 downto 0);
    signal q_chunk_V_0_9_i_i_reg_582 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_ret_9_i_i_reg_587 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_i_i_4_reg_592 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_10_i_i_reg_597 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_11_i_i_reg_602 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_12_i_i_reg_607 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_13_i_i_reg_612 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_14_i_i_reg_617 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_15_i_i_reg_622 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_16_i_i_reg_627 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_17_i_i_reg_632 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_18_i_i_reg_637 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_19_i_i_reg_642 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_116_ap_ready : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_116_d_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_116_r_in_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_116_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_116_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_123_ap_ready : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_123_d_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_123_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_123_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_129_ap_ready : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_129_d_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_129_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_129_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_135_ap_ready : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_135_d_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_135_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_135_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_141_ap_ready : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_141_d_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_141_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_141_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_147_ap_ready : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_147_d_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_147_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_147_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_153_ap_ready : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_153_d_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_153_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_153_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_159_ap_ready : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_159_d_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_159_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_159_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_165_ap_ready : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_165_d_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_165_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_165_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_171_ap_ready : STD_LOGIC;
    signal grp_lut_div5_chunk_fu_171_d_V : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_171_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_lut_div5_chunk_fu_171_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal call_ret_19_i_i_lut_div5_chunk_fu_177_ap_ready : STD_LOGIC;
    signal call_ret_19_i_i_lut_div5_chunk_fu_177_ap_return_0 : STD_LOGIC_VECTOR (2 downto 0);
    signal call_ret_19_i_i_lut_div5_chunk_fu_177_ap_return_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal agg_result_V_0_i_i_fu_497_p22 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);

    component lut_div5_chunk IS
    port (
        ap_ready : OUT STD_LOGIC;
        d_V : IN STD_LOGIC_VECTOR (2 downto 0);
        r_in_V : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;



begin
    grp_lut_div5_chunk_fu_116 : component lut_div5_chunk
    port map (
        ap_ready => grp_lut_div5_chunk_fu_116_ap_ready,
        d_V => grp_lut_div5_chunk_fu_116_d_V,
        r_in_V => grp_lut_div5_chunk_fu_116_r_in_V,
        ap_return_0 => grp_lut_div5_chunk_fu_116_ap_return_0,
        ap_return_1 => grp_lut_div5_chunk_fu_116_ap_return_1);

    grp_lut_div5_chunk_fu_123 : component lut_div5_chunk
    port map (
        ap_ready => grp_lut_div5_chunk_fu_123_ap_ready,
        d_V => grp_lut_div5_chunk_fu_123_d_V,
        r_in_V => grp_lut_div5_chunk_fu_116_ap_return_1,
        ap_return_0 => grp_lut_div5_chunk_fu_123_ap_return_0,
        ap_return_1 => grp_lut_div5_chunk_fu_123_ap_return_1);

    grp_lut_div5_chunk_fu_129 : component lut_div5_chunk
    port map (
        ap_ready => grp_lut_div5_chunk_fu_129_ap_ready,
        d_V => grp_lut_div5_chunk_fu_129_d_V,
        r_in_V => grp_lut_div5_chunk_fu_123_ap_return_1,
        ap_return_0 => grp_lut_div5_chunk_fu_129_ap_return_0,
        ap_return_1 => grp_lut_div5_chunk_fu_129_ap_return_1);

    grp_lut_div5_chunk_fu_135 : component lut_div5_chunk
    port map (
        ap_ready => grp_lut_div5_chunk_fu_135_ap_ready,
        d_V => grp_lut_div5_chunk_fu_135_d_V,
        r_in_V => grp_lut_div5_chunk_fu_129_ap_return_1,
        ap_return_0 => grp_lut_div5_chunk_fu_135_ap_return_0,
        ap_return_1 => grp_lut_div5_chunk_fu_135_ap_return_1);

    grp_lut_div5_chunk_fu_141 : component lut_div5_chunk
    port map (
        ap_ready => grp_lut_div5_chunk_fu_141_ap_ready,
        d_V => grp_lut_div5_chunk_fu_141_d_V,
        r_in_V => grp_lut_div5_chunk_fu_135_ap_return_1,
        ap_return_0 => grp_lut_div5_chunk_fu_141_ap_return_0,
        ap_return_1 => grp_lut_div5_chunk_fu_141_ap_return_1);

    grp_lut_div5_chunk_fu_147 : component lut_div5_chunk
    port map (
        ap_ready => grp_lut_div5_chunk_fu_147_ap_ready,
        d_V => grp_lut_div5_chunk_fu_147_d_V,
        r_in_V => grp_lut_div5_chunk_fu_141_ap_return_1,
        ap_return_0 => grp_lut_div5_chunk_fu_147_ap_return_0,
        ap_return_1 => grp_lut_div5_chunk_fu_147_ap_return_1);

    grp_lut_div5_chunk_fu_153 : component lut_div5_chunk
    port map (
        ap_ready => grp_lut_div5_chunk_fu_153_ap_ready,
        d_V => grp_lut_div5_chunk_fu_153_d_V,
        r_in_V => grp_lut_div5_chunk_fu_147_ap_return_1,
        ap_return_0 => grp_lut_div5_chunk_fu_153_ap_return_0,
        ap_return_1 => grp_lut_div5_chunk_fu_153_ap_return_1);

    grp_lut_div5_chunk_fu_159 : component lut_div5_chunk
    port map (
        ap_ready => grp_lut_div5_chunk_fu_159_ap_ready,
        d_V => grp_lut_div5_chunk_fu_159_d_V,
        r_in_V => grp_lut_div5_chunk_fu_153_ap_return_1,
        ap_return_0 => grp_lut_div5_chunk_fu_159_ap_return_0,
        ap_return_1 => grp_lut_div5_chunk_fu_159_ap_return_1);

    grp_lut_div5_chunk_fu_165 : component lut_div5_chunk
    port map (
        ap_ready => grp_lut_div5_chunk_fu_165_ap_ready,
        d_V => grp_lut_div5_chunk_fu_165_d_V,
        r_in_V => grp_lut_div5_chunk_fu_159_ap_return_1,
        ap_return_0 => grp_lut_div5_chunk_fu_165_ap_return_0,
        ap_return_1 => grp_lut_div5_chunk_fu_165_ap_return_1);

    grp_lut_div5_chunk_fu_171 : component lut_div5_chunk
    port map (
        ap_ready => grp_lut_div5_chunk_fu_171_ap_ready,
        d_V => grp_lut_div5_chunk_fu_171_d_V,
        r_in_V => grp_lut_div5_chunk_fu_165_ap_return_1,
        ap_return_0 => grp_lut_div5_chunk_fu_171_ap_return_0,
        ap_return_1 => grp_lut_div5_chunk_fu_171_ap_return_1);

    call_ret_19_i_i_lut_div5_chunk_fu_177 : component lut_div5_chunk
    port map (
        ap_ready => call_ret_19_i_i_lut_div5_chunk_fu_177_ap_ready,
        d_V => p_Result_13_19_i_i_reg_642,
        r_in_V => grp_lut_div5_chunk_fu_171_ap_return_1,
        ap_return_0 => call_ret_19_i_i_lut_div5_chunk_fu_177_ap_return_0,
        ap_return_1 => call_ret_19_i_i_lut_div5_chunk_fu_177_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_Result_13_10_i_i_reg_597 <= in_r(30 downto 28);
                p_Result_13_11_i_i_reg_602 <= in_r(27 downto 25);
                p_Result_13_12_i_i_reg_607 <= in_r(24 downto 22);
                p_Result_13_13_i_i_reg_612 <= in_r(21 downto 19);
                p_Result_13_14_i_i_reg_617 <= in_r(18 downto 16);
                p_Result_13_15_i_i_reg_622 <= in_r(15 downto 13);
                p_Result_13_16_i_i_reg_627 <= in_r(12 downto 10);
                p_Result_13_17_i_i_reg_632 <= in_r(9 downto 7);
                p_Result_13_18_i_i_reg_637 <= in_r(6 downto 4);
                p_Result_13_19_i_i_reg_642 <= in_r(3 downto 1);
                p_Result_13_i_i_4_reg_592 <= in_r(33 downto 31);
                q_chunk_V_0_1_i_i_reg_542 <= grp_lut_div5_chunk_fu_123_ap_return_0;
                q_chunk_V_0_2_i_i_reg_547 <= grp_lut_div5_chunk_fu_129_ap_return_0;
                q_chunk_V_0_3_i_i_reg_552 <= grp_lut_div5_chunk_fu_135_ap_return_0;
                q_chunk_V_0_4_i_i_reg_557 <= grp_lut_div5_chunk_fu_141_ap_return_0;
                q_chunk_V_0_5_i_i_reg_562 <= grp_lut_div5_chunk_fu_147_ap_return_0;
                q_chunk_V_0_6_i_i_reg_567 <= grp_lut_div5_chunk_fu_153_ap_return_0;
                q_chunk_V_0_7_i_i_reg_572 <= grp_lut_div5_chunk_fu_159_ap_return_0;
                q_chunk_V_0_8_i_i_reg_577 <= grp_lut_div5_chunk_fu_165_ap_return_0;
                q_chunk_V_0_9_i_i_reg_582 <= grp_lut_div5_chunk_fu_171_ap_return_0;
                q_chunk_V_0_i_i_reg_537 <= grp_lut_div5_chunk_fu_116_ap_return_0;
                r_V_ret_9_i_i_reg_587 <= grp_lut_div5_chunk_fu_171_ap_return_1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    agg_result_V_0_i_i_fu_497_p22 <= ((((((((((((((((((((q_chunk_V_0_i_i_reg_537 & q_chunk_V_0_1_i_i_reg_542) & q_chunk_V_0_2_i_i_reg_547) & q_chunk_V_0_3_i_i_reg_552) & q_chunk_V_0_4_i_i_reg_557) & q_chunk_V_0_5_i_i_reg_562) & q_chunk_V_0_6_i_i_reg_567) & q_chunk_V_0_7_i_i_reg_572) & q_chunk_V_0_8_i_i_reg_577) & q_chunk_V_0_9_i_i_reg_582) & grp_lut_div5_chunk_fu_116_ap_return_0) & grp_lut_div5_chunk_fu_123_ap_return_0) & grp_lut_div5_chunk_fu_129_ap_return_0) & grp_lut_div5_chunk_fu_135_ap_return_0) & grp_lut_div5_chunk_fu_141_ap_return_0) & grp_lut_div5_chunk_fu_147_ap_return_0) & grp_lut_div5_chunk_fu_153_ap_return_0) & grp_lut_div5_chunk_fu_159_ap_return_0) & grp_lut_div5_chunk_fu_165_ap_return_0) & grp_lut_div5_chunk_fu_171_ap_return_0) & call_ret_19_i_i_lut_div5_chunk_fu_177_ap_return_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_done_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= std_logic_vector(IEEE.numeric_std.resize(unsigned(agg_result_V_0_i_i_fu_497_p22),64));

    grp_lut_div5_chunk_fu_116_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_i_i_4_reg_592, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_116_d_V <= p_Result_13_i_i_4_reg_592;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div5_chunk_fu_116_d_V <= in_r(63 downto 61);
        else 
            grp_lut_div5_chunk_fu_116_d_V <= "XXX";
        end if; 
    end process;


    grp_lut_div5_chunk_fu_116_r_in_V_assign_proc : process(ap_CS_fsm_state1, r_V_ret_9_i_i_reg_587, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_116_r_in_V <= r_V_ret_9_i_i_reg_587;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div5_chunk_fu_116_r_in_V <= ap_const_lv3_0;
        else 
            grp_lut_div5_chunk_fu_116_r_in_V <= "XXX";
        end if; 
    end process;


    grp_lut_div5_chunk_fu_123_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_10_i_i_reg_597, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_123_d_V <= p_Result_13_10_i_i_reg_597;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div5_chunk_fu_123_d_V <= in_r(60 downto 58);
        else 
            grp_lut_div5_chunk_fu_123_d_V <= "XXX";
        end if; 
    end process;


    grp_lut_div5_chunk_fu_129_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_11_i_i_reg_602, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_129_d_V <= p_Result_13_11_i_i_reg_602;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div5_chunk_fu_129_d_V <= in_r(57 downto 55);
        else 
            grp_lut_div5_chunk_fu_129_d_V <= "XXX";
        end if; 
    end process;


    grp_lut_div5_chunk_fu_135_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_12_i_i_reg_607, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_135_d_V <= p_Result_13_12_i_i_reg_607;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div5_chunk_fu_135_d_V <= in_r(54 downto 52);
        else 
            grp_lut_div5_chunk_fu_135_d_V <= "XXX";
        end if; 
    end process;


    grp_lut_div5_chunk_fu_141_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_13_i_i_reg_612, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_141_d_V <= p_Result_13_13_i_i_reg_612;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div5_chunk_fu_141_d_V <= in_r(51 downto 49);
        else 
            grp_lut_div5_chunk_fu_141_d_V <= "XXX";
        end if; 
    end process;


    grp_lut_div5_chunk_fu_147_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_14_i_i_reg_617, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_147_d_V <= p_Result_13_14_i_i_reg_617;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div5_chunk_fu_147_d_V <= in_r(48 downto 46);
        else 
            grp_lut_div5_chunk_fu_147_d_V <= "XXX";
        end if; 
    end process;


    grp_lut_div5_chunk_fu_153_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_15_i_i_reg_622, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_153_d_V <= p_Result_13_15_i_i_reg_622;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div5_chunk_fu_153_d_V <= in_r(45 downto 43);
        else 
            grp_lut_div5_chunk_fu_153_d_V <= "XXX";
        end if; 
    end process;


    grp_lut_div5_chunk_fu_159_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_16_i_i_reg_627, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_159_d_V <= p_Result_13_16_i_i_reg_627;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div5_chunk_fu_159_d_V <= in_r(42 downto 40);
        else 
            grp_lut_div5_chunk_fu_159_d_V <= "XXX";
        end if; 
    end process;


    grp_lut_div5_chunk_fu_165_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_17_i_i_reg_632, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_165_d_V <= p_Result_13_17_i_i_reg_632;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div5_chunk_fu_165_d_V <= in_r(39 downto 37);
        else 
            grp_lut_div5_chunk_fu_165_d_V <= "XXX";
        end if; 
    end process;


    grp_lut_div5_chunk_fu_171_d_V_assign_proc : process(ap_CS_fsm_state1, in_r, p_Result_13_18_i_i_reg_637, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_div5_chunk_fu_171_d_V <= p_Result_13_18_i_i_reg_637;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_lut_div5_chunk_fu_171_d_V <= in_r(36 downto 34);
        else 
            grp_lut_div5_chunk_fu_171_d_V <= "XXX";
        end if; 
    end process;

end behav;
