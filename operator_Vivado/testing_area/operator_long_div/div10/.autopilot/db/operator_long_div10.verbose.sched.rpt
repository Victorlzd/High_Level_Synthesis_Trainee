

================================================================
== Vivado HLS Report for 'operator_long_div10'
================================================================
* Date:           Fri Aug  3 12:02:01 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        operator_long_div
* Solution:       div10
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|    41.194|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    1|    1|    1|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 37.4>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%in_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %in_r) nounwind"   --->   Operation 3 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%p_Result_13_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 61, i32 63)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 4 'partselect' 'p_Result_13_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (3.74ns)   --->   "%call_ret_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_i_i, i3 0) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 5 'call' 'call_ret_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%q_chunk_V_0_i_i = extractvalue { i3, i3 } %call_ret_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 6 'extractvalue' 'q_chunk_V_0_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%r_V_ret_i_i = extractvalue { i3, i3 } %call_ret_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 7 'extractvalue' 'r_V_ret_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_Result_13_1_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 58, i32 60)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 8 'partselect' 'p_Result_13_1_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (3.74ns)   --->   "%call_ret_1_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_1_i_i, i3 %r_V_ret_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 9 'call' 'call_ret_1_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%q_chunk_V_0_1_i_i = extractvalue { i3, i3 } %call_ret_1_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 10 'extractvalue' 'q_chunk_V_0_1_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%r_V_ret_1_i_i = extractvalue { i3, i3 } %call_ret_1_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 11 'extractvalue' 'r_V_ret_1_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_Result_13_2_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 55, i32 57)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 12 'partselect' 'p_Result_13_2_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (3.74ns)   --->   "%call_ret_2_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_2_i_i, i3 %r_V_ret_1_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 13 'call' 'call_ret_2_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%q_chunk_V_0_2_i_i = extractvalue { i3, i3 } %call_ret_2_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 14 'extractvalue' 'q_chunk_V_0_2_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%r_V_ret_2_i_i = extractvalue { i3, i3 } %call_ret_2_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 15 'extractvalue' 'r_V_ret_2_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_Result_13_3_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 52, i32 54)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 16 'partselect' 'p_Result_13_3_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (3.74ns)   --->   "%call_ret_3_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_3_i_i, i3 %r_V_ret_2_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 17 'call' 'call_ret_3_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%q_chunk_V_0_3_i_i = extractvalue { i3, i3 } %call_ret_3_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 18 'extractvalue' 'q_chunk_V_0_3_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%r_V_ret_3_i_i = extractvalue { i3, i3 } %call_ret_3_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 19 'extractvalue' 'r_V_ret_3_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%p_Result_13_4_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 49, i32 51)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 20 'partselect' 'p_Result_13_4_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (3.74ns)   --->   "%call_ret_4_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_4_i_i, i3 %r_V_ret_3_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 21 'call' 'call_ret_4_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%q_chunk_V_0_4_i_i = extractvalue { i3, i3 } %call_ret_4_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 22 'extractvalue' 'q_chunk_V_0_4_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%r_V_ret_4_i_i = extractvalue { i3, i3 } %call_ret_4_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 23 'extractvalue' 'r_V_ret_4_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%p_Result_13_5_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 46, i32 48)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 24 'partselect' 'p_Result_13_5_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (3.74ns)   --->   "%call_ret_5_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_5_i_i, i3 %r_V_ret_4_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 25 'call' 'call_ret_5_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%q_chunk_V_0_5_i_i = extractvalue { i3, i3 } %call_ret_5_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 26 'extractvalue' 'q_chunk_V_0_5_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%r_V_ret_5_i_i = extractvalue { i3, i3 } %call_ret_5_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 27 'extractvalue' 'r_V_ret_5_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%p_Result_13_6_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 43, i32 45)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 28 'partselect' 'p_Result_13_6_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (3.74ns)   --->   "%call_ret_6_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_6_i_i, i3 %r_V_ret_5_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 29 'call' 'call_ret_6_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%q_chunk_V_0_6_i_i = extractvalue { i3, i3 } %call_ret_6_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 30 'extractvalue' 'q_chunk_V_0_6_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%r_V_ret_6_i_i = extractvalue { i3, i3 } %call_ret_6_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 31 'extractvalue' 'r_V_ret_6_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%p_Result_13_7_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 40, i32 42)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 32 'partselect' 'p_Result_13_7_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (3.74ns)   --->   "%call_ret_7_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_7_i_i, i3 %r_V_ret_6_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 33 'call' 'call_ret_7_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%q_chunk_V_0_7_i_i = extractvalue { i3, i3 } %call_ret_7_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 34 'extractvalue' 'q_chunk_V_0_7_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%r_V_ret_7_i_i = extractvalue { i3, i3 } %call_ret_7_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 35 'extractvalue' 'r_V_ret_7_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%p_Result_13_8_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 37, i32 39)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 36 'partselect' 'p_Result_13_8_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (3.74ns)   --->   "%call_ret_8_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_8_i_i, i3 %r_V_ret_7_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 37 'call' 'call_ret_8_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%q_chunk_V_0_8_i_i = extractvalue { i3, i3 } %call_ret_8_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 38 'extractvalue' 'q_chunk_V_0_8_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%r_V_ret_8_i_i = extractvalue { i3, i3 } %call_ret_8_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 39 'extractvalue' 'r_V_ret_8_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%p_Result_13_9_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 34, i32 36)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 40 'partselect' 'p_Result_13_9_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (3.74ns)   --->   "%call_ret_9_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_9_i_i, i3 %r_V_ret_8_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 41 'call' 'call_ret_9_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%q_chunk_V_0_9_i_i = extractvalue { i3, i3 } %call_ret_9_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 42 'extractvalue' 'q_chunk_V_0_9_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%r_V_ret_9_i_i = extractvalue { i3, i3 } %call_ret_9_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 43 'extractvalue' 'r_V_ret_9_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%p_Result_13_i_i_4 = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 31, i32 33)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 44 'partselect' 'p_Result_13_i_i_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%p_Result_13_10_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 28, i32 30)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 45 'partselect' 'p_Result_13_10_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%p_Result_13_11_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 25, i32 27)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 46 'partselect' 'p_Result_13_11_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%p_Result_13_12_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 22, i32 24)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 47 'partselect' 'p_Result_13_12_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%p_Result_13_13_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 19, i32 21)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 48 'partselect' 'p_Result_13_13_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%p_Result_13_14_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 16, i32 18)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 49 'partselect' 'p_Result_13_14_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%p_Result_13_15_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 13, i32 15)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 50 'partselect' 'p_Result_13_15_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%p_Result_13_16_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 10, i32 12)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 51 'partselect' 'p_Result_13_16_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%p_Result_13_17_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 7, i32 9)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 52 'partselect' 'p_Result_13_17_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%p_Result_13_18_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 4, i32 6)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 53 'partselect' 'p_Result_13_18_i_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%p_Result_13_19_i_i = call i3 @_ssdm_op_PartSelect.i3.i64.i32.i32(i64 %in_read, i32 1, i32 3)" [test.cpp:5266->test.cpp:5275->test.cpp:5281]   --->   Operation 54 'partselect' 'p_Result_13_19_i_i' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 41.1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 %in_r) nounwind, !map !362"   --->   Operation 55 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 0) nounwind, !map !368"   --->   Operation 56 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([20 x i8]* @operator_long_div10_s) nounwind"   --->   Operation 57 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLatency(i32 0, i32 1, [1 x i8]* @p_str) nounwind" [test.cpp:5279]   --->   Operation 58 'speclatency' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (3.74ns)   --->   "%call_ret_i_i_5 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_i_i_4, i3 %r_V_ret_9_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 59 'call' 'call_ret_i_i_5' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%q_chunk_V_0_i_i_6 = extractvalue { i3, i3 } %call_ret_i_i_5, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 60 'extractvalue' 'q_chunk_V_0_i_i_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%r_V_ret_i_i_7 = extractvalue { i3, i3 } %call_ret_i_i_5, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 61 'extractvalue' 'r_V_ret_i_i_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (3.74ns)   --->   "%call_ret_10_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_10_i_i, i3 %r_V_ret_i_i_7) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 62 'call' 'call_ret_10_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%q_chunk_V_0_10_i_i = extractvalue { i3, i3 } %call_ret_10_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 63 'extractvalue' 'q_chunk_V_0_10_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%r_V_ret_10_i_i = extractvalue { i3, i3 } %call_ret_10_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 64 'extractvalue' 'r_V_ret_10_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (3.74ns)   --->   "%call_ret_11_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_11_i_i, i3 %r_V_ret_10_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 65 'call' 'call_ret_11_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%q_chunk_V_0_11_i_i = extractvalue { i3, i3 } %call_ret_11_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 66 'extractvalue' 'q_chunk_V_0_11_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%r_V_ret_11_i_i = extractvalue { i3, i3 } %call_ret_11_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 67 'extractvalue' 'r_V_ret_11_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (3.74ns)   --->   "%call_ret_12_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_12_i_i, i3 %r_V_ret_11_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 68 'call' 'call_ret_12_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%q_chunk_V_0_12_i_i = extractvalue { i3, i3 } %call_ret_12_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 69 'extractvalue' 'q_chunk_V_0_12_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%r_V_ret_12_i_i = extractvalue { i3, i3 } %call_ret_12_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 70 'extractvalue' 'r_V_ret_12_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (3.74ns)   --->   "%call_ret_13_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_13_i_i, i3 %r_V_ret_12_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 71 'call' 'call_ret_13_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%q_chunk_V_0_13_i_i = extractvalue { i3, i3 } %call_ret_13_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 72 'extractvalue' 'q_chunk_V_0_13_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%r_V_ret_13_i_i = extractvalue { i3, i3 } %call_ret_13_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 73 'extractvalue' 'r_V_ret_13_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (3.74ns)   --->   "%call_ret_14_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_14_i_i, i3 %r_V_ret_13_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 74 'call' 'call_ret_14_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%q_chunk_V_0_14_i_i = extractvalue { i3, i3 } %call_ret_14_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 75 'extractvalue' 'q_chunk_V_0_14_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%r_V_ret_14_i_i = extractvalue { i3, i3 } %call_ret_14_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 76 'extractvalue' 'r_V_ret_14_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (3.74ns)   --->   "%call_ret_15_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_15_i_i, i3 %r_V_ret_14_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 77 'call' 'call_ret_15_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%q_chunk_V_0_15_i_i = extractvalue { i3, i3 } %call_ret_15_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 78 'extractvalue' 'q_chunk_V_0_15_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%r_V_ret_15_i_i = extractvalue { i3, i3 } %call_ret_15_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 79 'extractvalue' 'r_V_ret_15_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (3.74ns)   --->   "%call_ret_16_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_16_i_i, i3 %r_V_ret_15_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 80 'call' 'call_ret_16_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%q_chunk_V_0_16_i_i = extractvalue { i3, i3 } %call_ret_16_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 81 'extractvalue' 'q_chunk_V_0_16_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%r_V_ret_16_i_i = extractvalue { i3, i3 } %call_ret_16_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 82 'extractvalue' 'r_V_ret_16_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (3.74ns)   --->   "%call_ret_17_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_17_i_i, i3 %r_V_ret_16_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 83 'call' 'call_ret_17_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%q_chunk_V_0_17_i_i = extractvalue { i3, i3 } %call_ret_17_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 84 'extractvalue' 'q_chunk_V_0_17_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%r_V_ret_17_i_i = extractvalue { i3, i3 } %call_ret_17_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 85 'extractvalue' 'r_V_ret_17_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (3.74ns)   --->   "%call_ret_18_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_18_i_i, i3 %r_V_ret_17_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 86 'call' 'call_ret_18_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%q_chunk_V_0_18_i_i = extractvalue { i3, i3 } %call_ret_18_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 87 'extractvalue' 'q_chunk_V_0_18_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%r_V_ret_18_i_i = extractvalue { i3, i3 } %call_ret_18_i_i, 1" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 88 'extractvalue' 'r_V_ret_18_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (3.74ns)   --->   "%call_ret_19_i_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_13_19_i_i, i3 %r_V_ret_18_i_i) nounwind" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 89 'call' 'call_ret_19_i_i' <Predicate = true> <Delay = 3.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%q_chunk_V_0_19_i_i = extractvalue { i3, i3 } %call_ret_19_i_i, 0" [test.cpp:5267->test.cpp:5275->test.cpp:5281]   --->   Operation 90 'extractvalue' 'q_chunk_V_0_19_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%agg_result_V_0_i_i = call i63 @_ssdm_op_BitConcatenate.i63.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3(i3 %q_chunk_V_0_i_i, i3 %q_chunk_V_0_1_i_i, i3 %q_chunk_V_0_2_i_i, i3 %q_chunk_V_0_3_i_i, i3 %q_chunk_V_0_4_i_i, i3 %q_chunk_V_0_5_i_i, i3 %q_chunk_V_0_6_i_i, i3 %q_chunk_V_0_7_i_i, i3 %q_chunk_V_0_8_i_i, i3 %q_chunk_V_0_9_i_i, i3 %q_chunk_V_0_i_i_6, i3 %q_chunk_V_0_10_i_i, i3 %q_chunk_V_0_11_i_i, i3 %q_chunk_V_0_12_i_i, i3 %q_chunk_V_0_13_i_i, i3 %q_chunk_V_0_14_i_i, i3 %q_chunk_V_0_15_i_i, i3 %q_chunk_V_0_16_i_i, i3 %q_chunk_V_0_17_i_i, i3 %q_chunk_V_0_18_i_i, i3 %q_chunk_V_0_19_i_i) nounwind" [test.cpp:5268->test.cpp:5275->test.cpp:5281]   --->   Operation 91 'bitconcatenate' 'agg_result_V_0_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%agg_result_V_i = zext i63 %agg_result_V_0_i_i to i64" [test.cpp:5275->test.cpp:5281]   --->   Operation 92 'zext' 'agg_result_V_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "ret i64 %agg_result_V_i" [test.cpp:5281]   --->   Operation 93 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 37.4ns
The critical path consists of the following:
	wire read on port 'in_r' [5]  (0 ns)
	'call' operation ('call_ret_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [8]  (3.74 ns)
	'call' operation ('call_ret_1_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [12]  (3.74 ns)
	'call' operation ('call_ret_2_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [16]  (3.74 ns)
	'call' operation ('call_ret_3_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [20]  (3.74 ns)
	'call' operation ('call_ret_4_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [24]  (3.74 ns)
	'call' operation ('call_ret_5_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [28]  (3.74 ns)
	'call' operation ('call_ret_6_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [32]  (3.74 ns)
	'call' operation ('call_ret_7_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [36]  (3.74 ns)
	'call' operation ('call_ret_8_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [40]  (3.74 ns)
	'call' operation ('call_ret_9_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [44]  (3.74 ns)

 <State 2>: 41.2ns
The critical path consists of the following:
	'call' operation ('call_ret_i_i_5', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [48]  (3.74 ns)
	'call' operation ('call_ret_10_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [52]  (3.74 ns)
	'call' operation ('call_ret_11_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [56]  (3.74 ns)
	'call' operation ('call_ret_12_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [60]  (3.74 ns)
	'call' operation ('call_ret_13_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [64]  (3.74 ns)
	'call' operation ('call_ret_14_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [68]  (3.74 ns)
	'call' operation ('call_ret_15_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [72]  (3.74 ns)
	'call' operation ('call_ret_16_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [76]  (3.74 ns)
	'call' operation ('call_ret_17_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [80]  (3.74 ns)
	'call' operation ('call_ret_18_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [84]  (3.74 ns)
	'call' operation ('call_ret_19_i_i', test.cpp:5267->test.cpp:5275->test.cpp:5281) to 'lut_div5_chunk' [88]  (3.74 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
