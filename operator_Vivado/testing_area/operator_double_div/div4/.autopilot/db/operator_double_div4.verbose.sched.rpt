

================================================================
== Vivado HLS Report for 'operator_double_div4'
================================================================
* Date:           Fri Aug 31 15:17:54 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        operator_double_div
* Solution:       div4
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   2.50|     2.292|        0.31|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    8|    8|    8|    8|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.94>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%in_read = call double @_ssdm_op_Read.ap_auto.double(double %in_r) nounwind"   --->   Operation 10 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_Val2_s = bitcast double %in_read to i64" [test.cpp:69->test.cpp:296]   --->   Operation 11 'bitcast' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_Repl2_2 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_s, i32 63)" [test.cpp:70->test.cpp:296]   --->   Operation 12 'bitselect' 'p_Repl2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%new_exp_V_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_s, i32 52, i32 62) nounwind" [test.cpp:71->test.cpp:296]   --->   Operation 13 'partselect' 'new_exp_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%new_mant_V_1 = trunc i64 %p_Val2_s to i52" [test.cpp:72->test.cpp:296]   --->   Operation 14 'trunc' 'new_mant_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp = call i10 @_ssdm_op_PartSelect.i10.i64.i32.i32(i64 %p_Val2_s, i32 53, i32 62)" [test.cpp:304]   --->   Operation 15 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.29ns)   --->   "%icmp = icmp eq i10 %tmp, 0" [test.cpp:304]   --->   Operation 16 'icmp' 'icmp' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (1.32ns)   --->   "%tmp_2 = icmp eq i11 %new_exp_V_1, 0" [test.cpp:308]   --->   Operation 17 'icmp' 'tmp_2' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.32ns)   --->   "%tmp_3 = icmp ugt i11 %new_exp_V_1, 2" [test.cpp:311]   --->   Operation 18 'icmp' 'tmp_3' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node p_0272_2)   --->   "%tmp_5 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %p_Val2_s, i32 52, i32 53)" [test.cpp:313]   --->   Operation 19 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node p_0272_2)   --->   "%shift_V_cast = xor i2 %tmp_5, -1" [test.cpp:313]   --->   Operation 20 'xor' 'shift_V_cast' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node p_0272_2)   --->   "%p_shift_V = select i1 %tmp_2, i2 -2, i2 0" [test.cpp:308]   --->   Operation 21 'select' 'p_shift_V' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node p_0272_2)   --->   "%tmp_6 = or i1 %tmp_2, %tmp_3" [test.cpp:308]   --->   Operation 22 'or' 'tmp_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.62ns) (out node of the LUT)   --->   "%p_0272_2 = select i1 %tmp_6, i2 %p_shift_V, i2 %shift_V_cast" [test.cpp:308]   --->   Operation 23 'select' 'p_0272_2' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_8 = call i9 @_ssdm_op_PartSelect.i9.i64.i32.i32(i64 %p_Val2_s, i32 54, i32 62)" [test.cpp:318]   --->   Operation 24 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.25ns)   --->   "%icmp4 = icmp eq i9 %tmp_8, 0" [test.cpp:318]   --->   Operation 25 'icmp' 'icmp4' <Predicate = true> <Delay = 1.25> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 2.29>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%xf_V_cast2 = zext i52 %new_mant_V_1 to i55" [test.cpp:301]   --->   Operation 26 'zext' 'xf_V_cast2' <Predicate = (!icmp4)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_8_cast1 = zext i2 %p_0272_2 to i55" [test.cpp:319]   --->   Operation 27 'zext' 'tmp_8_cast1' <Predicate = (!icmp4)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_8_cast = zext i2 %p_0272_2 to i52" [test.cpp:319]   --->   Operation 28 'zext' 'tmp_8_cast' <Predicate = (icmp4)> <Delay = 0.00>
ST_2 : Operation 29 [7/7] (2.29ns)   --->   "%r_V = lshr i52 %new_mant_V_1, %tmp_8_cast" [test.cpp:319]   --->   Operation 29 'lshr' 'r_V' <Predicate = (icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [7/7] (2.29ns)   --->   "%r_V_1 = shl i55 %xf_V_cast2, %tmp_8_cast1" [test.cpp:321]   --->   Operation 30 'shl' 'r_V_1' <Predicate = (!icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 2.29>
ST_3 : Operation 31 [6/7] (2.29ns)   --->   "%r_V = lshr i52 %new_mant_V_1, %tmp_8_cast" [test.cpp:319]   --->   Operation 31 'lshr' 'r_V' <Predicate = (icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [6/7] (2.29ns)   --->   "%r_V_1 = shl i55 %xf_V_cast2, %tmp_8_cast1" [test.cpp:321]   --->   Operation 32 'shl' 'r_V_1' <Predicate = (!icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 2.29>
ST_4 : Operation 33 [5/7] (2.29ns)   --->   "%r_V = lshr i52 %new_mant_V_1, %tmp_8_cast" [test.cpp:319]   --->   Operation 33 'lshr' 'r_V' <Predicate = (icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 34 [5/7] (2.29ns)   --->   "%r_V_1 = shl i55 %xf_V_cast2, %tmp_8_cast1" [test.cpp:321]   --->   Operation 34 'shl' 'r_V_1' <Predicate = (!icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 2.29>
ST_5 : Operation 35 [4/7] (2.29ns)   --->   "%r_V = lshr i52 %new_mant_V_1, %tmp_8_cast" [test.cpp:319]   --->   Operation 35 'lshr' 'r_V' <Predicate = (icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 36 [4/7] (2.29ns)   --->   "%r_V_1 = shl i55 %xf_V_cast2, %tmp_8_cast1" [test.cpp:321]   --->   Operation 36 'shl' 'r_V_1' <Predicate = (!icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 2.29>
ST_6 : Operation 37 [3/7] (2.29ns)   --->   "%r_V = lshr i52 %new_mant_V_1, %tmp_8_cast" [test.cpp:319]   --->   Operation 37 'lshr' 'r_V' <Predicate = (icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 38 [3/7] (2.29ns)   --->   "%r_V_1 = shl i55 %xf_V_cast2, %tmp_8_cast1" [test.cpp:321]   --->   Operation 38 'shl' 'r_V_1' <Predicate = (!icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 2.29>
ST_7 : Operation 39 [2/7] (2.29ns)   --->   "%r_V = lshr i52 %new_mant_V_1, %tmp_8_cast" [test.cpp:319]   --->   Operation 39 'lshr' 'r_V' <Predicate = (icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 40 [2/7] (2.29ns)   --->   "%r_V_1 = shl i55 %xf_V_cast2, %tmp_8_cast1" [test.cpp:321]   --->   Operation 40 'shl' 'r_V_1' <Predicate = (!icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 2.29>
ST_8 : Operation 41 [1/7] (2.29ns)   --->   "%r_V = lshr i52 %new_mant_V_1, %tmp_8_cast" [test.cpp:319]   --->   Operation 41 'lshr' 'r_V' <Predicate = (icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 42 [1/7] (2.29ns)   --->   "%r_V_1 = shl i55 %xf_V_cast2, %tmp_8_cast1" [test.cpp:321]   --->   Operation 42 'shl' 'r_V_1' <Predicate = (!icmp4)> <Delay = 2.29> <Core = "ShiftnS">   --->   Core 29 'ShiftnS' <Latency = 6> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 2.06>
ST_9 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(double %in_r) nounwind, !map !258"   --->   Operation 43 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(double 0.000000e+00) nounwind, !map !264"   --->   Operation 44 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([21 x i8]* @operator_double_div4_1) nounwind"   --->   Operation 45 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 46 [1/1] (1.42ns)   --->   "%new_exp_V = add i11 -2, %new_exp_V_1" [test.cpp:307]   --->   Operation 46 'add' 'new_exp_V' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%tmp_9 = trunc i55 %r_V_1 to i52" [test.cpp:321]   --->   Operation 47 'trunc' 'tmp_9' <Predicate = (!icmp4)> <Delay = 0.00>
ST_9 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_s)   --->   "%xf_V = select i1 %icmp4, i52 %r_V, i52 %tmp_9" [test.cpp:318]   --->   Operation 48 'select' 'xf_V' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 49 [1/1] (1.32ns)   --->   "%tmp_1 = icmp eq i11 %new_exp_V_1, -1" [test.cpp:326]   --->   Operation 49 'icmp' 'tmp_1' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%p_s = select i1 %tmp_1, i11 -1, i11 0" [test.cpp:326]   --->   Operation 50 'select' 'p_s' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%tmp_4 = or i1 %tmp_1, %icmp" [test.cpp:326]   --->   Operation 51 'or' 'tmp_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 52 [1/1] (0.63ns) (out node of the LUT)   --->   "%p_Repl2_1 = select i1 %tmp_4, i11 %p_s, i11 %new_exp_V" [test.cpp:326]   --->   Operation 52 'select' 'p_Repl2_1' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 53 [1/1] (0.70ns) (out node of the LUT)   --->   "%p_Repl2_s = select i1 %tmp_1, i52 %new_mant_V_1, i52 %xf_V" [test.cpp:326]   --->   Operation 53 'select' 'p_Repl2_s' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 54 [1/1] (0.00ns)   --->   "%p_Result_s = call i64 @_ssdm_op_BitConcatenate.i64.i1.i11.i52(i1 %p_Repl2_2, i11 %p_Repl2_1, i52 %p_Repl2_s) nounwind" [test.cpp:96->test.cpp:330]   --->   Operation 54 'bitconcatenate' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 55 [1/1] (0.00ns)   --->   "%out = bitcast i64 %p_Result_s to double" [test.cpp:97->test.cpp:330]   --->   Operation 55 'bitcast' 'out' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 56 [1/1] (0.00ns)   --->   "ret double %out" [test.cpp:331]   --->   Operation 56 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 2.5ns, clock uncertainty: 0.312ns.

 <State 1>: 1.95ns
The critical path consists of the following:
	wire read on port 'in_r' [5]  (0 ns)
	'icmp' operation ('tmp_2', test.cpp:308) [14]  (1.33 ns)
	'select' operation ('p_shift_V', test.cpp:308) [18]  (0 ns)
	'select' operation ('p_0272_2', test.cpp:308) [20]  (0.62 ns)

 <State 2>: 2.29ns
The critical path consists of the following:
	'shl' operation ('r.V', test.cpp:321) [26]  (2.29 ns)

 <State 3>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', test.cpp:319) [25]  (2.29 ns)

 <State 4>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', test.cpp:319) [25]  (2.29 ns)

 <State 5>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', test.cpp:319) [25]  (2.29 ns)

 <State 6>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', test.cpp:319) [25]  (2.29 ns)

 <State 7>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', test.cpp:319) [25]  (2.29 ns)

 <State 8>: 2.29ns
The critical path consists of the following:
	'lshr' operation ('r.V', test.cpp:319) [25]  (2.29 ns)

 <State 9>: 2.06ns
The critical path consists of the following:
	'add' operation ('new_exp.V', test.cpp:307) [13]  (1.43 ns)
	'select' operation ('__Repl2__', test.cpp:326) [32]  (0.633 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
