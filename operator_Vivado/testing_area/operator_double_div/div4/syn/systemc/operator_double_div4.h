// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _operator_double_div4_HH_
#define _operator_double_div4_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "operator_double_dbkb.h"
#include "operator_double_dcud.h"

namespace ap_rtl {

struct operator_double_div4 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > in_r;
    sc_out< sc_lv<64> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    operator_double_div4(sc_module_name name);
    SC_HAS_PROCESS(operator_double_div4);

    ~operator_double_div4();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    operator_double_dbkb<1,7,1,52,2,52>* operator_double_dbkb_U1;
    operator_double_dcud<1,7,0,55,2,55>* operator_double_dcud_U2;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > p_Repl2_2_reg_246;
    sc_signal< sc_lv<11> > new_exp_V_1_fu_70_p4;
    sc_signal< sc_lv<11> > new_exp_V_1_reg_251;
    sc_signal< sc_lv<52> > new_mant_V_1_fu_80_p1;
    sc_signal< sc_lv<52> > new_mant_V_1_reg_257;
    sc_signal< sc_lv<1> > icmp_fu_94_p2;
    sc_signal< sc_lv<1> > icmp_reg_264;
    sc_signal< sc_lv<2> > p_0272_2_fu_142_p3;
    sc_signal< sc_lv<2> > p_0272_2_reg_269;
    sc_signal< sc_lv<1> > icmp4_fu_160_p2;
    sc_signal< sc_lv<1> > icmp4_reg_275;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<52> > grp_fu_175_p2;
    sc_signal< sc_lv<52> > r_V_reg_295;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<55> > grp_fu_180_p2;
    sc_signal< sc_lv<55> > r_V_1_reg_300;
    sc_signal< sc_lv<64> > p_Val2_s_fu_58_p1;
    sc_signal< sc_lv<10> > tmp_fu_84_p4;
    sc_signal< sc_lv<2> > tmp_5_fu_112_p4;
    sc_signal< sc_lv<1> > tmp_2_fu_100_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_106_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_136_p2;
    sc_signal< sc_lv<2> > p_shift_V_fu_128_p3;
    sc_signal< sc_lv<2> > shift_V_cast_fu_122_p2;
    sc_signal< sc_lv<9> > tmp_8_fu_150_p4;
    sc_signal< sc_lv<52> > grp_fu_175_p1;
    sc_signal< sc_lv<55> > grp_fu_180_p0;
    sc_signal< sc_lv<55> > grp_fu_180_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<52> > tmp_9_fu_191_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_200_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_213_p2;
    sc_signal< sc_lv<11> > p_s_fu_205_p3;
    sc_signal< sc_lv<11> > new_exp_V_fu_186_p2;
    sc_signal< sc_lv<52> > xf_V_fu_194_p3;
    sc_signal< sc_lv<11> > p_Repl2_1_fu_218_p3;
    sc_signal< sc_lv<52> > p_Repl2_s_fu_226_p3;
    sc_signal< sc_lv<64> > p_Result_s_fu_233_p4;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<11> ap_const_lv11_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_36;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<11> ap_const_lv11_7FE;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_175_p1();
    void thread_grp_fu_180_p0();
    void thread_grp_fu_180_p1();
    void thread_icmp4_fu_160_p2();
    void thread_icmp_fu_94_p2();
    void thread_new_exp_V_1_fu_70_p4();
    void thread_new_exp_V_fu_186_p2();
    void thread_new_mant_V_1_fu_80_p1();
    void thread_p_0272_2_fu_142_p3();
    void thread_p_Repl2_1_fu_218_p3();
    void thread_p_Repl2_s_fu_226_p3();
    void thread_p_Result_s_fu_233_p4();
    void thread_p_Val2_s_fu_58_p1();
    void thread_p_s_fu_205_p3();
    void thread_p_shift_V_fu_128_p3();
    void thread_shift_V_cast_fu_122_p2();
    void thread_tmp_1_fu_200_p2();
    void thread_tmp_2_fu_100_p2();
    void thread_tmp_3_fu_106_p2();
    void thread_tmp_4_fu_213_p2();
    void thread_tmp_5_fu_112_p4();
    void thread_tmp_6_fu_136_p2();
    void thread_tmp_8_fu_150_p4();
    void thread_tmp_9_fu_191_p1();
    void thread_tmp_fu_84_p4();
    void thread_xf_V_fu_194_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
