// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "operator_double_div4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic operator_double_div4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic operator_double_div4::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> operator_double_div4::ap_ST_fsm_state1 = "1";
const sc_lv<2> operator_double_div4::ap_ST_fsm_state2 = "10";
const sc_lv<32> operator_double_div4::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> operator_double_div4::ap_const_lv32_3F = "111111";
const sc_lv<32> operator_double_div4::ap_const_lv32_34 = "110100";
const sc_lv<32> operator_double_div4::ap_const_lv32_3E = "111110";
const sc_lv<32> operator_double_div4::ap_const_lv32_35 = "110101";
const sc_lv<10> operator_double_div4::ap_const_lv10_0 = "0000000000";
const sc_lv<11> operator_double_div4::ap_const_lv11_0 = "00000000000";
const sc_lv<11> operator_double_div4::ap_const_lv11_2 = "10";
const sc_lv<2> operator_double_div4::ap_const_lv2_3 = "11";
const sc_lv<2> operator_double_div4::ap_const_lv2_2 = "10";
const sc_lv<2> operator_double_div4::ap_const_lv2_0 = "00";
const sc_lv<32> operator_double_div4::ap_const_lv32_36 = "110110";
const sc_lv<9> operator_double_div4::ap_const_lv9_0 = "000000000";
const sc_lv<32> operator_double_div4::ap_const_lv32_1 = "1";
const sc_lv<11> operator_double_div4::ap_const_lv11_7FF = "11111111111";
const sc_lv<11> operator_double_div4::ap_const_lv11_7FE = "11111111110";
const sc_lv<1> operator_double_div4::ap_const_lv1_1 = "1";
const bool operator_double_div4::ap_const_boolean_1 = true;

operator_double_div4::operator_double_div4(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_Result_s_fu_270_p4 );

    SC_METHOD(thread_icmp4_fu_172_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_11_fu_162_p4 );

    SC_METHOD(thread_icmp_fu_106_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_10_fu_96_p4 );

    SC_METHOD(thread_new_exp_V_1_fu_186_p2);
    sensitive << ( new_exp_V_reg_288 );

    SC_METHOD(thread_new_exp_V_fu_82_p4);
    sensitive << ( p_Val2_s_fu_70_p1 );

    SC_METHOD(thread_new_mant_V_1_fu_256_p3);
    sensitive << ( icmp4_reg_317 );
    sensitive << ( tmp_12_fu_248_p1 );
    sensitive << ( tmp_13_fu_252_p1 );

    SC_METHOD(thread_new_mant_V_2_fu_92_p1);
    sensitive << ( p_Val2_s_fu_70_p1 );

    SC_METHOD(thread_new_mant_V_fu_263_p3);
    sensitive << ( new_mant_V_2_reg_294 );
    sensitive << ( tmp_fu_181_p2 );
    sensitive << ( new_mant_V_1_fu_256_p3 );

    SC_METHOD(thread_p_0274_2_fu_154_p3);
    sensitive << ( tmp_7_fu_148_p2 );
    sensitive << ( p_shift_V_fu_140_p3 );
    sensitive << ( shift_V_cast_fu_134_p2 );

    SC_METHOD(thread_p_Repl2_1_fu_204_p3);
    sensitive << ( tmp_5_fu_199_p2 );
    sensitive << ( p_new_exp_V_1_fu_191_p3 );
    sensitive << ( new_exp_V_1_fu_186_p2 );

    SC_METHOD(thread_p_Result_s_fu_270_p4);
    sensitive << ( p_Repl2_2_reg_283 );
    sensitive << ( p_Repl2_1_fu_204_p3 );
    sensitive << ( new_mant_V_fu_263_p3 );

    SC_METHOD(thread_p_Val2_s_fu_70_p1);
    sensitive << ( in_r );

    SC_METHOD(thread_p_cast_fu_226_p1);
    sensitive << ( xf_V_fu_219_p3 );

    SC_METHOD(thread_p_new_exp_V_1_fu_191_p3);
    sensitive << ( tmp_fu_181_p2 );

    SC_METHOD(thread_p_shift_V_fu_140_p3);
    sensitive << ( tmp_3_fu_112_p2 );

    SC_METHOD(thread_r_V_1_fu_242_p2);
    sensitive << ( p_cast_fu_226_p1 );
    sensitive << ( tmp_9_fu_230_p1 );

    SC_METHOD(thread_r_V_fu_236_p2);
    sensitive << ( xf_V_fu_219_p3 );
    sensitive << ( tmp_9_cast_fu_233_p1 );

    SC_METHOD(thread_shift_V_cast_fu_134_p2);
    sensitive << ( tmp_6_fu_124_p4 );

    SC_METHOD(thread_tmp_10_fu_96_p4);
    sensitive << ( p_Val2_s_fu_70_p1 );

    SC_METHOD(thread_tmp_11_fu_162_p4);
    sensitive << ( p_Val2_s_fu_70_p1 );

    SC_METHOD(thread_tmp_12_fu_248_p1);
    sensitive << ( r_V_fu_236_p2 );

    SC_METHOD(thread_tmp_13_fu_252_p1);
    sensitive << ( r_V_1_fu_242_p2 );

    SC_METHOD(thread_tmp_2_fu_212_p3);
    sensitive << ( new_mant_V_2_reg_294 );

    SC_METHOD(thread_tmp_3_fu_112_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( new_exp_V_fu_82_p4 );

    SC_METHOD(thread_tmp_4_fu_118_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( new_exp_V_fu_82_p4 );

    SC_METHOD(thread_tmp_5_fu_199_p2);
    sensitive << ( icmp_reg_301 );
    sensitive << ( tmp_fu_181_p2 );

    SC_METHOD(thread_tmp_6_fu_124_p4);
    sensitive << ( p_Val2_s_fu_70_p1 );

    SC_METHOD(thread_tmp_7_fu_148_p2);
    sensitive << ( tmp_3_fu_112_p2 );
    sensitive << ( tmp_4_fu_118_p2 );

    SC_METHOD(thread_tmp_9_cast_fu_233_p1);
    sensitive << ( p_0274_2_reg_311 );

    SC_METHOD(thread_tmp_9_fu_230_p1);
    sensitive << ( p_0274_2_reg_311 );

    SC_METHOD(thread_tmp_fu_181_p2);
    sensitive << ( new_exp_V_reg_288 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_xf_V_4_cast_fu_178_p1);
    sensitive << ( new_mant_V_2_reg_294 );

    SC_METHOD(thread_xf_V_fu_219_p3);
    sensitive << ( tmp_3_reg_306 );
    sensitive << ( xf_V_4_cast_fu_178_p1 );
    sensitive << ( tmp_2_fu_212_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "01";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "operator_double_div4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r, "(port)in_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_Repl2_2_reg_283, "p_Repl2_2_reg_283");
    sc_trace(mVcdFile, new_exp_V_fu_82_p4, "new_exp_V_fu_82_p4");
    sc_trace(mVcdFile, new_exp_V_reg_288, "new_exp_V_reg_288");
    sc_trace(mVcdFile, new_mant_V_2_fu_92_p1, "new_mant_V_2_fu_92_p1");
    sc_trace(mVcdFile, new_mant_V_2_reg_294, "new_mant_V_2_reg_294");
    sc_trace(mVcdFile, icmp_fu_106_p2, "icmp_fu_106_p2");
    sc_trace(mVcdFile, icmp_reg_301, "icmp_reg_301");
    sc_trace(mVcdFile, tmp_3_fu_112_p2, "tmp_3_fu_112_p2");
    sc_trace(mVcdFile, tmp_3_reg_306, "tmp_3_reg_306");
    sc_trace(mVcdFile, p_0274_2_fu_154_p3, "p_0274_2_fu_154_p3");
    sc_trace(mVcdFile, p_0274_2_reg_311, "p_0274_2_reg_311");
    sc_trace(mVcdFile, icmp4_fu_172_p2, "icmp4_fu_172_p2");
    sc_trace(mVcdFile, icmp4_reg_317, "icmp4_reg_317");
    sc_trace(mVcdFile, p_Val2_s_fu_70_p1, "p_Val2_s_fu_70_p1");
    sc_trace(mVcdFile, tmp_10_fu_96_p4, "tmp_10_fu_96_p4");
    sc_trace(mVcdFile, tmp_6_fu_124_p4, "tmp_6_fu_124_p4");
    sc_trace(mVcdFile, tmp_4_fu_118_p2, "tmp_4_fu_118_p2");
    sc_trace(mVcdFile, tmp_7_fu_148_p2, "tmp_7_fu_148_p2");
    sc_trace(mVcdFile, p_shift_V_fu_140_p3, "p_shift_V_fu_140_p3");
    sc_trace(mVcdFile, shift_V_cast_fu_134_p2, "shift_V_cast_fu_134_p2");
    sc_trace(mVcdFile, tmp_11_fu_162_p4, "tmp_11_fu_162_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_181_p2, "tmp_fu_181_p2");
    sc_trace(mVcdFile, tmp_5_fu_199_p2, "tmp_5_fu_199_p2");
    sc_trace(mVcdFile, p_new_exp_V_1_fu_191_p3, "p_new_exp_V_1_fu_191_p3");
    sc_trace(mVcdFile, new_exp_V_1_fu_186_p2, "new_exp_V_1_fu_186_p2");
    sc_trace(mVcdFile, xf_V_4_cast_fu_178_p1, "xf_V_4_cast_fu_178_p1");
    sc_trace(mVcdFile, tmp_2_fu_212_p3, "tmp_2_fu_212_p3");
    sc_trace(mVcdFile, xf_V_fu_219_p3, "xf_V_fu_219_p3");
    sc_trace(mVcdFile, tmp_9_cast_fu_233_p1, "tmp_9_cast_fu_233_p1");
    sc_trace(mVcdFile, p_cast_fu_226_p1, "p_cast_fu_226_p1");
    sc_trace(mVcdFile, tmp_9_fu_230_p1, "tmp_9_fu_230_p1");
    sc_trace(mVcdFile, r_V_fu_236_p2, "r_V_fu_236_p2");
    sc_trace(mVcdFile, r_V_1_fu_242_p2, "r_V_1_fu_242_p2");
    sc_trace(mVcdFile, tmp_12_fu_248_p1, "tmp_12_fu_248_p1");
    sc_trace(mVcdFile, tmp_13_fu_252_p1, "tmp_13_fu_252_p1");
    sc_trace(mVcdFile, new_mant_V_1_fu_256_p3, "new_mant_V_1_fu_256_p3");
    sc_trace(mVcdFile, p_Repl2_1_fu_204_p3, "p_Repl2_1_fu_204_p3");
    sc_trace(mVcdFile, new_mant_V_fu_263_p3, "new_mant_V_fu_263_p3");
    sc_trace(mVcdFile, p_Result_s_fu_270_p4, "p_Result_s_fu_270_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("operator_double_div4.hdltvin.dat");
    mHdltvoutHandle.open("operator_double_div4.hdltvout.dat");
}

operator_double_div4::~operator_double_div4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void operator_double_div4::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        icmp4_reg_317 = icmp4_fu_172_p2.read();
        icmp_reg_301 = icmp_fu_106_p2.read();
        new_exp_V_reg_288 = p_Val2_s_fu_70_p1.read().range(62, 52);
        new_mant_V_2_reg_294 = new_mant_V_2_fu_92_p1.read();
        p_0274_2_reg_311 = p_0274_2_fu_154_p3.read();
        p_Repl2_2_reg_283 = p_Val2_s_fu_70_p1.read().range(63, 63);
        tmp_3_reg_306 = tmp_3_fu_112_p2.read();
    }
}

void operator_double_div4::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void operator_double_div4::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void operator_double_div4::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void operator_double_div4::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void operator_double_div4::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void operator_double_div4::thread_ap_return() {
    ap_return = p_Result_s_fu_270_p4.read();
}

void operator_double_div4::thread_icmp4_fu_172_p2() {
    icmp4_fu_172_p2 = (!tmp_11_fu_162_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_11_fu_162_p4.read() == ap_const_lv9_0);
}

void operator_double_div4::thread_icmp_fu_106_p2() {
    icmp_fu_106_p2 = (!tmp_10_fu_96_p4.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_10_fu_96_p4.read() == ap_const_lv10_0);
}

void operator_double_div4::thread_new_exp_V_1_fu_186_p2() {
    new_exp_V_1_fu_186_p2 = (!ap_const_lv11_7FE.is_01() || !new_exp_V_reg_288.read().is_01())? sc_lv<11>(): (sc_bigint<11>(ap_const_lv11_7FE) + sc_biguint<11>(new_exp_V_reg_288.read()));
}

void operator_double_div4::thread_new_exp_V_fu_82_p4() {
    new_exp_V_fu_82_p4 = p_Val2_s_fu_70_p1.read().range(62, 52);
}

void operator_double_div4::thread_new_mant_V_1_fu_256_p3() {
    new_mant_V_1_fu_256_p3 = (!icmp4_reg_317.read()[0].is_01())? sc_lv<52>(): ((icmp4_reg_317.read()[0].to_bool())? tmp_12_fu_248_p1.read(): tmp_13_fu_252_p1.read());
}

void operator_double_div4::thread_new_mant_V_2_fu_92_p1() {
    new_mant_V_2_fu_92_p1 = p_Val2_s_fu_70_p1.read().range(52-1, 0);
}

void operator_double_div4::thread_new_mant_V_fu_263_p3() {
    new_mant_V_fu_263_p3 = (!tmp_fu_181_p2.read()[0].is_01())? sc_lv<52>(): ((tmp_fu_181_p2.read()[0].to_bool())? new_mant_V_2_reg_294.read(): new_mant_V_1_fu_256_p3.read());
}

void operator_double_div4::thread_p_0274_2_fu_154_p3() {
    p_0274_2_fu_154_p3 = (!tmp_7_fu_148_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_7_fu_148_p2.read()[0].to_bool())? p_shift_V_fu_140_p3.read(): shift_V_cast_fu_134_p2.read());
}

void operator_double_div4::thread_p_Repl2_1_fu_204_p3() {
    p_Repl2_1_fu_204_p3 = (!tmp_5_fu_199_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_5_fu_199_p2.read()[0].to_bool())? p_new_exp_V_1_fu_191_p3.read(): new_exp_V_1_fu_186_p2.read());
}

void operator_double_div4::thread_p_Result_s_fu_270_p4() {
    p_Result_s_fu_270_p4 = esl_concat<12,52>(esl_concat<1,11>(p_Repl2_2_reg_283.read(), p_Repl2_1_fu_204_p3.read()), new_mant_V_fu_263_p3.read());
}

void operator_double_div4::thread_p_Val2_s_fu_70_p1() {
    p_Val2_s_fu_70_p1 = in_r.read();
}

void operator_double_div4::thread_p_cast_fu_226_p1() {
    p_cast_fu_226_p1 = esl_zext<56,53>(xf_V_fu_219_p3.read());
}

void operator_double_div4::thread_p_new_exp_V_1_fu_191_p3() {
    p_new_exp_V_1_fu_191_p3 = (!tmp_fu_181_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_fu_181_p2.read()[0].to_bool())? ap_const_lv11_7FF: ap_const_lv11_0);
}

void operator_double_div4::thread_p_shift_V_fu_140_p3() {
    p_shift_V_fu_140_p3 = (!tmp_3_fu_112_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_3_fu_112_p2.read()[0].to_bool())? ap_const_lv2_2: ap_const_lv2_0);
}

void operator_double_div4::thread_r_V_1_fu_242_p2() {
    r_V_1_fu_242_p2 = (!tmp_9_fu_230_p1.read().is_01())? sc_lv<56>(): p_cast_fu_226_p1.read() << (unsigned short)tmp_9_fu_230_p1.read().to_uint();
}

void operator_double_div4::thread_r_V_fu_236_p2() {
    r_V_fu_236_p2 = (!tmp_9_cast_fu_233_p1.read().is_01())? sc_lv<53>(): xf_V_fu_219_p3.read() >> (unsigned short)tmp_9_cast_fu_233_p1.read().to_uint();
}

void operator_double_div4::thread_shift_V_cast_fu_134_p2() {
    shift_V_cast_fu_134_p2 = (tmp_6_fu_124_p4.read() ^ ap_const_lv2_3);
}

void operator_double_div4::thread_tmp_10_fu_96_p4() {
    tmp_10_fu_96_p4 = p_Val2_s_fu_70_p1.read().range(62, 53);
}

void operator_double_div4::thread_tmp_11_fu_162_p4() {
    tmp_11_fu_162_p4 = p_Val2_s_fu_70_p1.read().range(62, 54);
}

void operator_double_div4::thread_tmp_12_fu_248_p1() {
    tmp_12_fu_248_p1 = r_V_fu_236_p2.read().range(52-1, 0);
}

void operator_double_div4::thread_tmp_13_fu_252_p1() {
    tmp_13_fu_252_p1 = r_V_1_fu_242_p2.read().range(52-1, 0);
}

void operator_double_div4::thread_tmp_2_fu_212_p3() {
    tmp_2_fu_212_p3 = esl_concat<1,52>(ap_const_lv1_1, new_mant_V_2_reg_294.read());
}

void operator_double_div4::thread_tmp_3_fu_112_p2() {
    tmp_3_fu_112_p2 = (!new_exp_V_fu_82_p4.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(new_exp_V_fu_82_p4.read() == ap_const_lv11_0);
}

void operator_double_div4::thread_tmp_4_fu_118_p2() {
    tmp_4_fu_118_p2 = (!new_exp_V_fu_82_p4.read().is_01() || !ap_const_lv11_2.is_01())? sc_lv<1>(): (sc_biguint<11>(new_exp_V_fu_82_p4.read()) > sc_biguint<11>(ap_const_lv11_2));
}

void operator_double_div4::thread_tmp_5_fu_199_p2() {
    tmp_5_fu_199_p2 = (tmp_fu_181_p2.read() | icmp_reg_301.read());
}

void operator_double_div4::thread_tmp_6_fu_124_p4() {
    tmp_6_fu_124_p4 = p_Val2_s_fu_70_p1.read().range(53, 52);
}

void operator_double_div4::thread_tmp_7_fu_148_p2() {
    tmp_7_fu_148_p2 = (tmp_3_fu_112_p2.read() | tmp_4_fu_118_p2.read());
}

void operator_double_div4::thread_tmp_9_cast_fu_233_p1() {
    tmp_9_cast_fu_233_p1 = esl_zext<53,2>(p_0274_2_reg_311.read());
}

void operator_double_div4::thread_tmp_9_fu_230_p1() {
    tmp_9_fu_230_p1 = esl_zext<56,2>(p_0274_2_reg_311.read());
}

void operator_double_div4::thread_tmp_fu_181_p2() {
    tmp_fu_181_p2 = (!new_exp_V_reg_288.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<1>(): sc_lv<1>(new_exp_V_reg_288.read() == ap_const_lv11_7FF);
}

void operator_double_div4::thread_xf_V_4_cast_fu_178_p1() {
    xf_V_4_cast_fu_178_p1 = esl_zext<53,52>(new_mant_V_2_reg_294.read());
}

void operator_double_div4::thread_xf_V_fu_219_p3() {
    xf_V_fu_219_p3 = (!tmp_3_reg_306.read()[0].is_01())? sc_lv<53>(): ((tmp_3_reg_306.read()[0].to_bool())? xf_V_4_cast_fu_178_p1.read(): tmp_2_fu_212_p3.read());
}

void operator_double_div4::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

void operator_double_div4::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r\" :  \"" << in_r.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

