// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="operator_double_div9,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.531475,HLS_SYN_LAT=98,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1631,HLS_SYN_LUT=1829,HLS_VERSION=2018_2}" *)

module operator_double_div9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] in_r;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] p_Repl2_2_reg_333;
reg   [10:0] new_exp_V_1_reg_338;
wire   [51:0] new_mant_V_1_fu_113_p1;
reg   [51:0] new_mant_V_1_reg_349;
wire   [10:0] shift_V_cast_cast_fu_133_p3;
reg   [10:0] shift_V_cast_cast_reg_356;
wire   [0:0] icmp4_fu_151_p2;
reg   [0:0] icmp4_reg_364;
wire   [0:0] tmp_3_fu_157_p2;
reg   [0:0] tmp_3_reg_370;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_4_fu_162_p2;
reg   [0:0] tmp_4_reg_376;
wire   [10:0] shift_V_3_fu_201_p3;
reg   [10:0] shift_V_3_reg_381;
wire   [10:0] shift_V_4_fu_227_p3;
reg   [10:0] shift_V_4_reg_386;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_2_fu_233_p2;
reg   [0:0] tmp_2_reg_392;
wire   [10:0] p_Repl2_1_fu_252_p3;
reg   [10:0] p_Repl2_1_reg_397;
wire    ap_CS_fsm_state4;
wire   [51:0] grp_fu_269_p2;
reg   [51:0] r_V_reg_417;
wire    ap_CS_fsm_state10;
wire   [56:0] grp_fu_274_p2;
reg   [56:0] r_V_1_reg_422;
wire   [56:0] xf_V_7_fu_283_p3;
reg   [56:0] xf_V_7_reg_427;
wire    ap_CS_fsm_state11;
wire   [56:0] xf_V_5_fu_304_p2;
reg   [56:0] xf_V_5_reg_433;
wire    ap_CS_fsm_state12;
wire    grp_int_57_div9_fu_74_ap_start;
wire    grp_int_57_div9_fu_74_ap_done;
wire    grp_int_57_div9_fu_74_ap_idle;
wire    grp_int_57_div9_fu_74_ap_ready;
wire   [56:0] grp_int_57_div9_fu_74_ap_return;
reg    grp_int_57_div9_fu_74_ap_start_reg;
wire    ap_CS_fsm_state13;
wire   [63:0] p_Val2_s_fu_91_p1;
wire   [2:0] tmp_fu_117_p4;
wire   [0:0] icmp_fu_127_p2;
wire   [9:0] tmp_7_fu_141_p4;
wire   [0:0] sel_tmp2_demorgan_fu_176_p2;
wire   [0:0] sel_tmp2_fu_182_p2;
wire   [0:0] sel_tmp3_fu_188_p2;
wire   [10:0] shift_V_fu_166_p2;
wire   [10:0] shift_V_1_fu_171_p2;
wire   [10:0] shift_V_2_fu_193_p3;
wire   [0:0] sel_tmp6_fu_217_p2;
wire   [0:0] sel_tmp7_fu_222_p2;
wire   [0:0] tmp_1_fu_209_p2;
wire   [0:0] tmp_6_fu_246_p2;
wire   [10:0] p_s_fu_238_p3;
wire   [10:0] new_exp_V_fu_213_p2;
wire   [51:0] grp_fu_269_p1;
wire   [56:0] grp_fu_274_p0;
wire   [56:0] grp_fu_274_p1;
wire   [56:0] r_V_cast_fu_280_p1;
reg   [56:0] p_Result_s_fu_289_p4;
wire   [56:0] xf_V_6_fu_298_p3;
wire   [51:0] new_mant_V_fu_311_p1;
wire   [51:0] p_Repl2_s_fu_315_p3;
wire   [63:0] p_Result_1_fu_321_p4;
reg   [12:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 grp_int_57_div9_fu_74_ap_start_reg = 1'b0;
end

int_57_div9 grp_int_57_div9_fu_74(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_int_57_div9_fu_74_ap_start),
    .ap_done(grp_int_57_div9_fu_74_ap_done),
    .ap_idle(grp_int_57_div9_fu_74_ap_idle),
    .ap_ready(grp_int_57_div9_fu_74_ap_ready),
    .in_V(xf_V_5_reg_433),
    .ap_return(grp_int_57_div9_fu_74_ap_return)
);

operator_double_dbkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 52 ))
operator_double_dbkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(new_mant_V_1_reg_349),
    .din1(grp_fu_269_p1),
    .ce(1'b1),
    .dout(grp_fu_269_p2)
);

operator_double_dcud #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 57 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 57 ))
operator_double_dcud_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_274_p0),
    .din1(grp_fu_274_p1),
    .ce(1'b1),
    .dout(grp_fu_274_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_int_57_div9_fu_74_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_int_57_div9_fu_74_ap_start_reg <= 1'b1;
        end else if ((grp_int_57_div9_fu_74_ap_ready == 1'b1)) begin
            grp_int_57_div9_fu_74_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        icmp4_reg_364 <= icmp4_fu_151_p2;
        new_exp_V_1_reg_338 <= {{p_Val2_s_fu_91_p1[62:52]}};
        new_mant_V_1_reg_349 <= new_mant_V_1_fu_113_p1;
        p_Repl2_2_reg_333 <= p_Val2_s_fu_91_p1[32'd63];
        shift_V_cast_cast_reg_356[2 : 0] <= shift_V_cast_cast_fu_133_p3[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_Repl2_1_reg_397 <= p_Repl2_1_fu_252_p3;
        shift_V_4_reg_386 <= shift_V_4_fu_227_p3;
        tmp_2_reg_392 <= tmp_2_fu_233_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp4_reg_364 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        r_V_1_reg_422 <= grp_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp4_reg_364 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        r_V_reg_417 <= grp_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        shift_V_3_reg_381 <= shift_V_3_fu_201_p3;
        tmp_3_reg_370 <= tmp_3_fu_157_p2;
        tmp_4_reg_376 <= tmp_4_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        xf_V_5_reg_433 <= xf_V_5_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        xf_V_7_reg_427 <= xf_V_7_fu_283_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (grp_int_57_div9_fu_74_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (grp_int_57_div9_fu_74_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (grp_int_57_div9_fu_74_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_return = p_Result_1_fu_321_p4;

assign grp_fu_269_p1 = shift_V_4_reg_386;

assign grp_fu_274_p0 = new_mant_V_1_reg_349;

assign grp_fu_274_p1 = shift_V_4_reg_386;

assign grp_int_57_div9_fu_74_ap_start = grp_int_57_div9_fu_74_ap_start_reg;

assign icmp4_fu_151_p2 = ((tmp_7_fu_141_p4 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_127_p2 = ((tmp_fu_117_p4 == 3'd0) ? 1'b1 : 1'b0);

assign new_exp_V_fu_213_p2 = (new_exp_V_1_reg_338 - shift_V_cast_cast_reg_356);

assign new_mant_V_1_fu_113_p1 = p_Val2_s_fu_91_p1[51:0];

assign new_mant_V_fu_311_p1 = grp_int_57_div9_fu_74_ap_return[51:0];

assign p_Repl2_1_fu_252_p3 = ((tmp_6_fu_246_p2[0:0] === 1'b1) ? p_s_fu_238_p3 : new_exp_V_fu_213_p2);

assign p_Repl2_s_fu_315_p3 = ((tmp_2_reg_392[0:0] === 1'b1) ? new_mant_V_1_reg_349 : new_mant_V_fu_311_p1);

assign p_Result_1_fu_321_p4 = {{{p_Repl2_2_reg_333}, {p_Repl2_1_reg_397}}, {p_Repl2_s_fu_315_p3}};

always @ (*) begin
    p_Result_s_fu_289_p4 = xf_V_7_reg_427;
    p_Result_s_fu_289_p4[32'd52] = |(1'd1);
end

assign p_Val2_s_fu_91_p1 = in_r;

assign p_s_fu_238_p3 = ((tmp_2_fu_233_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign r_V_cast_fu_280_p1 = r_V_reg_417;

assign sel_tmp2_demorgan_fu_176_p2 = (tmp_4_fu_162_p2 | tmp_3_fu_157_p2);

assign sel_tmp2_fu_182_p2 = (sel_tmp2_demorgan_fu_176_p2 ^ 1'd1);

assign sel_tmp3_fu_188_p2 = (sel_tmp2_fu_182_p2 & icmp4_reg_364);

assign sel_tmp6_fu_217_p2 = (tmp_3_reg_370 ^ 1'd1);

assign sel_tmp7_fu_222_p2 = (tmp_4_reg_376 & sel_tmp6_fu_217_p2);

assign shift_V_1_fu_171_p2 = ($signed(11'd2047) + $signed(new_exp_V_1_reg_338));

assign shift_V_2_fu_193_p3 = ((sel_tmp3_fu_188_p2[0:0] === 1'b1) ? shift_V_fu_166_p2 : shift_V_1_fu_171_p2);

assign shift_V_3_fu_201_p3 = ((tmp_3_fu_157_p2[0:0] === 1'b1) ? 11'd0 : shift_V_2_fu_193_p3);

assign shift_V_4_fu_227_p3 = ((sel_tmp7_fu_222_p2[0:0] === 1'b1) ? shift_V_cast_cast_reg_356 : shift_V_3_reg_381);

assign shift_V_cast_cast_fu_133_p3 = ((icmp_fu_127_p2[0:0] === 1'b1) ? 11'd4 : 11'd3);

assign shift_V_fu_166_p2 = (11'd1 - new_exp_V_1_reg_338);

assign tmp_1_fu_209_p2 = ((shift_V_cast_cast_reg_356 > new_exp_V_1_reg_338) ? 1'b1 : 1'b0);

assign tmp_2_fu_233_p2 = ((new_exp_V_1_reg_338 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_3_fu_157_p2 = ((new_exp_V_1_reg_338 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_4_fu_162_p2 = ((shift_V_cast_cast_reg_356 < new_exp_V_1_reg_338) ? 1'b1 : 1'b0);

assign tmp_6_fu_246_p2 = (tmp_2_fu_233_p2 | tmp_1_fu_209_p2);

assign tmp_7_fu_141_p4 = {{p_Val2_s_fu_91_p1[62:53]}};

assign tmp_fu_117_p4 = {{p_Val2_s_fu_91_p1[51:49]}};

assign xf_V_5_fu_304_p2 = (57'd4 + xf_V_6_fu_298_p3);

assign xf_V_6_fu_298_p3 = ((tmp_3_reg_370[0:0] === 1'b1) ? xf_V_7_reg_427 : p_Result_s_fu_289_p4);

assign xf_V_7_fu_283_p3 = ((icmp4_reg_364[0:0] === 1'b1) ? r_V_cast_fu_280_p1 : r_V_1_reg_422);

always @ (posedge ap_clk) begin
    shift_V_cast_cast_reg_356[10:3] <= 8'b00000000;
end

endmodule //operator_double_div9
