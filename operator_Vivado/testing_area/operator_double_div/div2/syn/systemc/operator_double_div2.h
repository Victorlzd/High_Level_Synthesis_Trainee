// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _operator_double_div2_HH_
#define _operator_double_div2_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct operator_double_div2 : public sc_module {
    // Port declarations 6
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > in_r;
    sc_out< sc_lv<64> > ap_return;
    // Port declarations for the virtual clock. 
    sc_in_clk ap_virtual_clock;


    // Module declarations
    operator_double_div2(sc_module_name name);
    SC_HAS_PROCESS(operator_double_div2);

    ~operator_double_div2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<64> > p_Val2_s_fu_58_p1;
    sc_signal< sc_lv<52> > new_mant_V_2_fu_80_p1;
    sc_signal< sc_lv<11> > new_exp_V_fu_70_p4;
    sc_signal< sc_lv<1> > tmp_fu_88_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_94_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_114_p2;
    sc_signal< sc_lv<11> > p_new_exp_V_1_fu_106_p3;
    sc_signal< sc_lv<11> > new_exp_V_1_fu_100_p2;
    sc_signal< sc_lv<10> > tmp_10_fu_128_p4;
    sc_signal< sc_lv<2> > tmp_5_fu_144_p4;
    sc_signal< sc_lv<1> > icmp_fu_138_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_164_p2;
    sc_signal< sc_lv<2> > p_shift_V_fu_160_p1;
    sc_signal< sc_lv<2> > shift_V_cast_fu_154_p2;
    sc_signal< sc_lv<53> > xf_V_4_cast_fu_84_p1;
    sc_signal< sc_lv<53> > tmp_2_fu_178_p3;
    sc_signal< sc_lv<53> > xf_V_fu_186_p3;
    sc_signal< sc_lv<2> > p_0274_2_fu_170_p3;
    sc_signal< sc_lv<53> > tmp_9_cast_fu_208_p1;
    sc_signal< sc_lv<55> > p_cast_fu_194_p1;
    sc_signal< sc_lv<55> > tmp_9_fu_204_p1;
    sc_signal< sc_lv<53> > r_V_fu_212_p2;
    sc_signal< sc_lv<55> > r_V_1_fu_218_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_198_p2;
    sc_signal< sc_lv<52> > tmp_11_fu_224_p1;
    sc_signal< sc_lv<52> > tmp_12_fu_228_p1;
    sc_signal< sc_lv<52> > new_mant_V_1_fu_232_p3;
    sc_signal< sc_lv<1> > p_Repl2_2_fu_62_p3;
    sc_signal< sc_lv<11> > p_Repl2_1_fu_120_p3;
    sc_signal< sc_lv<52> > new_mant_V_fu_240_p3;
    sc_signal< sc_lv<64> > p_Result_s_fu_248_p4;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_icmp_fu_138_p2();
    void thread_new_exp_V_1_fu_100_p2();
    void thread_new_exp_V_fu_70_p4();
    void thread_new_mant_V_1_fu_232_p3();
    void thread_new_mant_V_2_fu_80_p1();
    void thread_new_mant_V_fu_240_p3();
    void thread_p_0274_2_fu_170_p3();
    void thread_p_Repl2_1_fu_120_p3();
    void thread_p_Repl2_2_fu_62_p3();
    void thread_p_Result_s_fu_248_p4();
    void thread_p_Val2_s_fu_58_p1();
    void thread_p_cast_fu_194_p1();
    void thread_p_new_exp_V_1_fu_106_p3();
    void thread_p_shift_V_fu_160_p1();
    void thread_r_V_1_fu_218_p2();
    void thread_r_V_fu_212_p2();
    void thread_shift_V_cast_fu_154_p2();
    void thread_tmp_10_fu_128_p4();
    void thread_tmp_11_fu_224_p1();
    void thread_tmp_12_fu_228_p1();
    void thread_tmp_1_fu_94_p2();
    void thread_tmp_2_fu_178_p3();
    void thread_tmp_3_fu_114_p2();
    void thread_tmp_5_fu_144_p4();
    void thread_tmp_6_fu_164_p2();
    void thread_tmp_8_fu_198_p2();
    void thread_tmp_9_cast_fu_208_p1();
    void thread_tmp_9_fu_204_p1();
    void thread_tmp_fu_88_p2();
    void thread_xf_V_4_cast_fu_84_p1();
    void thread_xf_V_fu_186_p3();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
