

================================================================
== Vivado HLS Report for 'operator_double_div2'
================================================================
* Date:           Fri Aug  3 14:15:11 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        operator_double_div
* Solution:       div2
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     5.661|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.66>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(double %in_r) nounwind, !map !362"   --->   Operation 2 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(double 0.000000e+00) nounwind, !map !368"   --->   Operation 3 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([21 x i8]* @operator_double_div2_1) nounwind"   --->   Operation 4 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%in_read = call double @_ssdm_op_Read.ap_auto.double(double %in_r) nounwind"   --->   Operation 5 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLatency(i32 0, i32 1, [1 x i8]* @p_str) nounwind" [test.cpp:6577]   --->   Operation 6 'speclatency' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_Val2_s = bitcast double %in_read to i64" [test.cpp:6544->test.cpp:6589]   --->   Operation 7 'bitcast' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_Repl2_2 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_s, i32 63)" [test.cpp:6545->test.cpp:6589]   --->   Operation 8 'bitselect' 'p_Repl2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%new_exp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %p_Val2_s, i32 52, i32 62) nounwind" [test.cpp:6546->test.cpp:6589]   --->   Operation 9 'partselect' 'new_exp_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%new_mant_V_2 = trunc i64 %p_Val2_s to i52" [test.cpp:6547->test.cpp:6589]   --->   Operation 10 'trunc' 'new_mant_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%xf_V_4_cast = zext i52 %new_mant_V_2 to i53" [test.cpp:6594]   --->   Operation 11 'zext' 'xf_V_4_cast' <Predicate = (tmp_1 & !tmp)> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.32ns)   --->   "%tmp = icmp eq i11 %new_exp_V, -1" [test.cpp:6597]   --->   Operation 12 'icmp' 'tmp' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (1.32ns)   --->   "%tmp_1 = icmp eq i11 %new_exp_V, 0" [test.cpp:6598]   --->   Operation 13 'icmp' 'tmp_1' <Predicate = true> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (1.42ns)   --->   "%new_exp_V_1 = add i11 -1, %new_exp_V" [test.cpp:6601]   --->   Operation 14 'add' 'new_exp_V_1' <Predicate = (!tmp_3)> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%p_new_exp_V_1 = select i1 %tmp, i11 -1, i11 0" [test.cpp:6570->test.cpp:6622]   --->   Operation 15 'select' 'p_new_exp_V_1' <Predicate = (tmp_3)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%tmp_3 = or i1 %tmp, %tmp_1" [test.cpp:6570->test.cpp:6622]   --->   Operation 16 'or' 'tmp_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.63ns) (out node of the LUT)   --->   "%p_Repl2_1 = select i1 %tmp_3, i11 %p_new_exp_V_1, i11 %new_exp_V_1" [test.cpp:6570->test.cpp:6622]   --->   Operation 17 'select' 'p_Repl2_1' <Predicate = true> <Delay = 0.63> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_10 = call i10 @_ssdm_op_PartSelect.i10.i64.i32.i32(i64 %p_Val2_s, i32 53, i32 62)" [test.cpp:6606]   --->   Operation 18 'partselect' 'tmp_10' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.29ns)   --->   "%icmp = icmp ne i10 %tmp_10, 0" [test.cpp:6606]   --->   Operation 19 'icmp' 'icmp' <Predicate = (!tmp)> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_5 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %p_Val2_s, i32 52, i32 53)" [test.cpp:6608]   --->   Operation 20 'partselect' 'tmp_5' <Predicate = (!tmp_6 & !tmp)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.00ns)   --->   "%shift_V_cast = sub i2 -2, %tmp_5" [test.cpp:6608]   --->   Operation 21 'sub' 'shift_V_cast' <Predicate = (!tmp_6 & !tmp)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node p_0274_2)   --->   "%p_shift_V = zext i1 %tmp_1 to i2" [test.cpp:6598]   --->   Operation 22 'zext' 'p_shift_V' <Predicate = (tmp_6 & !tmp)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node p_0274_2)   --->   "%tmp_6 = or i1 %tmp_1, %icmp" [test.cpp:6598]   --->   Operation 23 'or' 'tmp_6' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.62ns) (out node of the LUT)   --->   "%p_0274_2 = select i1 %tmp_6, i2 %p_shift_V, i2 %shift_V_cast" [test.cpp:6598]   --->   Operation 24 'select' 'p_0274_2' <Predicate = (!tmp)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_2 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %new_mant_V_2)" [test.cpp:6614]   --->   Operation 25 'bitconcatenate' 'tmp_2' <Predicate = (!tmp_1 & !tmp)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.70ns)   --->   "%xf_V = select i1 %tmp_1, i53 %xf_V_4_cast, i53 %tmp_2" [test.cpp:6598]   --->   Operation 26 'select' 'xf_V' <Predicate = (!tmp)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%p_cast = zext i53 %xf_V to i55" [test.cpp:6598]   --->   Operation 27 'zext' 'p_cast' <Predicate = (!tmp_8 & !tmp)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.32ns)   --->   "%tmp_8 = icmp ult i11 %new_exp_V, 3" [test.cpp:6615]   --->   Operation 28 'icmp' 'tmp_8' <Predicate = (!tmp)> <Delay = 1.32> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%tmp_9 = zext i2 %p_0274_2 to i55" [test.cpp:6616]   --->   Operation 29 'zext' 'tmp_9' <Predicate = (!tmp_8 & !tmp)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%tmp_9_cast = zext i2 %p_0274_2 to i53" [test.cpp:6616]   --->   Operation 30 'zext' 'tmp_9_cast' <Predicate = (tmp_8 & !tmp)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%r_V = lshr i53 %xf_V, %tmp_9_cast" [test.cpp:6616]   --->   Operation 31 'lshr' 'r_V' <Predicate = (tmp_8 & !tmp)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.92> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%r_V_1 = shl i55 %p_cast, %tmp_9" [test.cpp:6618]   --->   Operation 32 'shl' 'r_V_1' <Predicate = (!tmp_8 & !tmp)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.92> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%tmp_11 = trunc i53 %r_V to i52" [test.cpp:6615]   --->   Operation 33 'trunc' 'tmp_11' <Predicate = (tmp_8 & !tmp)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%tmp_12 = trunc i55 %r_V_1 to i52" [test.cpp:6615]   --->   Operation 34 'trunc' 'tmp_12' <Predicate = (!tmp_8 & !tmp)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (2.92ns) (out node of the LUT)   --->   "%new_mant_V_1 = select i1 %tmp_8, i52 %tmp_11, i52 %tmp_12" [test.cpp:6615]   --->   Operation 35 'select' 'new_mant_V_1' <Predicate = (!tmp)> <Delay = 2.92> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.70ns) (out node of the LUT)   --->   "%new_mant_V = select i1 %tmp, i52 %new_mant_V_2, i52 %new_mant_V_1" [test.cpp:6570->test.cpp:6622]   --->   Operation 36 'select' 'new_mant_V' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%p_Result_s = call i64 @_ssdm_op_BitConcatenate.i64.i1.i11.i52(i1 %p_Repl2_2, i11 %p_Repl2_1, i52 %new_mant_V) nounwind" [test.cpp:6571->test.cpp:6622]   --->   Operation 37 'bitconcatenate' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%out = bitcast i64 %p_Result_s to double" [test.cpp:6572->test.cpp:6622]   --->   Operation 38 'bitcast' 'out' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "ret double %out" [test.cpp:6623]   --->   Operation 39 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 5.66ns
The critical path consists of the following:
	wire read on port 'in_r' [5]  (0 ns)
	'icmp' operation ('tmp_1', test.cpp:6598) [13]  (1.33 ns)
	'select' operation ('xf.V', test.cpp:6598) [26]  (0.702 ns)
	'lshr' operation ('r.V', test.cpp:6616) [31]  (0 ns)
	'select' operation ('new_mant.V', test.cpp:6615) [35]  (2.93 ns)
	'select' operation ('new_mant.V', test.cpp:6570->test.cpp:6622) [36]  (0.708 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
