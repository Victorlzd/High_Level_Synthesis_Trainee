// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="operator_double_div11,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=30.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=24.311250,HLS_SYN_LAT=3,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=231,HLS_SYN_LUT=10848,HLS_VERSION=2018_2}" *)

module operator_double_div11 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] in_r;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] p_Repl2_2_reg_332;
wire   [51:0] new_mant_V_fu_100_p1;
wire   [0:0] tmp_1_fu_122_p2;
reg   [0:0] tmp_1_reg_342;
wire   [10:0] p_Repl2_1_fu_154_p3;
reg   [10:0] p_Repl2_1_reg_346;
wire   [56:0] xf_V_4_fu_308_p2;
reg   [56:0] xf_V_4_reg_351;
wire    grp_int_57_div11_fu_73_ap_start;
wire    grp_int_57_div11_fu_73_ap_done;
wire    grp_int_57_div11_fu_73_ap_idle;
wire    grp_int_57_div11_fu_73_ap_ready;
wire   [56:0] grp_int_57_div11_fu_73_ap_return;
wire   [51:0] new_mant_V_1_fu_315_p1;
reg   [51:0] ap_phi_mux_p_Repl2_s_phi_fu_67_p4;
reg   [51:0] p_Repl2_s_reg_64;
wire    ap_CS_fsm_state2;
reg    ap_block_state2_on_subcall_done;
reg    grp_int_57_div11_fu_73_ap_start_reg;
wire   [63:0] p_Val2_s_fu_78_p1;
wire   [0:0] tmp_fu_108_p2;
wire   [10:0] new_exp_V_fu_90_p4;
wire   [10:0] shift_V_cast_cast_fu_114_p3;
wire   [0:0] tmp_2_fu_128_p2;
wire   [0:0] tmp_7_fu_148_p2;
wire   [10:0] p_new_exp_V_1_fu_140_p3;
wire   [10:0] new_exp_V_1_fu_134_p2;
wire   [9:0] tmp_9_fu_174_p4;
wire   [0:0] tmp_4_fu_162_p2;
wire   [0:0] tmp_5_fu_168_p2;
wire   [0:0] sel_tmp3_demorgan_fu_202_p2;
wire   [0:0] icmp_fu_184_p2;
wire   [0:0] sel_tmp3_fu_208_p2;
wire   [0:0] sel_tmp4_fu_214_p2;
wire   [10:0] shift_V_fu_190_p2;
wire   [10:0] shift_V_1_fu_196_p2;
wire   [10:0] shift_V_2_fu_220_p3;
wire   [0:0] sel_tmp7_fu_236_p2;
wire   [0:0] sel_tmp8_fu_242_p2;
wire   [10:0] shift_V_3_fu_228_p3;
wire   [52:0] xf_V_5_cast_fu_104_p1;
wire   [52:0] tmp_3_fu_256_p3;
wire   [52:0] xf_V_fu_264_p3;
wire   [10:0] shift_V_4_fu_248_p3;
wire   [52:0] tmp_cast_fu_280_p1;
wire   [52:0] r_V_fu_284_p2;
wire   [56:0] p_cast_fu_272_p1;
wire   [56:0] tmp_s_fu_276_p1;
wire   [56:0] r_V_cast_fu_290_p1;
wire   [56:0] r_V_1_fu_294_p2;
wire   [56:0] xf_V_3_fu_300_p3;
wire   [63:0] p_Result_s_fu_320_p4;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 grp_int_57_div11_fu_73_ap_start_reg = 1'b0;
end

int_57_div11 grp_int_57_div11_fu_73(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_int_57_div11_fu_73_ap_start),
    .ap_done(grp_int_57_div11_fu_73_ap_done),
    .ap_idle(grp_int_57_div11_fu_73_ap_idle),
    .ap_ready(grp_int_57_div11_fu_73_ap_ready),
    .in_V(xf_V_4_reg_351),
    .ap_return(grp_int_57_div11_fu_73_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_int_57_div11_fu_73_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (tmp_1_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_int_57_div11_fu_73_ap_start_reg <= 1'b1;
        end else if ((grp_int_57_div11_fu_73_ap_ready == 1'b1)) begin
            grp_int_57_div11_fu_73_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (tmp_1_fu_122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Repl2_s_reg_64 <= new_mant_V_fu_100_p1;
    end else if (((1'b0 == ap_block_state2_on_subcall_done) & (tmp_1_reg_342 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Repl2_s_reg_64 <= new_mant_V_1_fu_315_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Repl2_1_reg_346 <= p_Repl2_1_fu_154_p3;
        p_Repl2_2_reg_332 <= p_Val2_s_fu_78_p1[32'd63];
        tmp_1_reg_342 <= tmp_1_fu_122_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (tmp_1_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        xf_V_4_reg_351 <= xf_V_4_fu_308_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_reg_342 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_p_Repl2_s_phi_fu_67_p4 = new_mant_V_1_fu_315_p1;
    end else begin
        ap_phi_mux_p_Repl2_s_phi_fu_67_p4 = p_Repl2_s_reg_64;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((tmp_1_reg_342 == 1'd0) & (grp_int_57_div11_fu_73_ap_done == 1'b0));
end

assign ap_return = p_Result_s_fu_320_p4;

assign grp_int_57_div11_fu_73_ap_start = grp_int_57_div11_fu_73_ap_start_reg;

assign icmp_fu_184_p2 = ((tmp_9_fu_174_p4 == 10'd0) ? 1'b1 : 1'b0);

assign new_exp_V_1_fu_134_p2 = (new_exp_V_fu_90_p4 - shift_V_cast_cast_fu_114_p3);

assign new_exp_V_fu_90_p4 = {{p_Val2_s_fu_78_p1[62:52]}};

assign new_mant_V_1_fu_315_p1 = grp_int_57_div11_fu_73_ap_return[51:0];

assign new_mant_V_fu_100_p1 = p_Val2_s_fu_78_p1[51:0];

assign p_Repl2_1_fu_154_p3 = ((tmp_7_fu_148_p2[0:0] === 1'b1) ? p_new_exp_V_1_fu_140_p3 : new_exp_V_1_fu_134_p2);

assign p_Result_s_fu_320_p4 = {{{p_Repl2_2_reg_332}, {p_Repl2_1_reg_346}}, {ap_phi_mux_p_Repl2_s_phi_fu_67_p4}};

assign p_Val2_s_fu_78_p1 = in_r;

assign p_cast_fu_272_p1 = xf_V_fu_264_p3;

assign p_new_exp_V_1_fu_140_p3 = ((tmp_1_fu_122_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign r_V_1_fu_294_p2 = p_cast_fu_272_p1 << tmp_s_fu_276_p1;

assign r_V_cast_fu_290_p1 = r_V_fu_284_p2;

assign r_V_fu_284_p2 = xf_V_fu_264_p3 >> tmp_cast_fu_280_p1;

assign sel_tmp3_demorgan_fu_202_p2 = (tmp_5_fu_168_p2 | tmp_4_fu_162_p2);

assign sel_tmp3_fu_208_p2 = (sel_tmp3_demorgan_fu_202_p2 ^ 1'd1);

assign sel_tmp4_fu_214_p2 = (sel_tmp3_fu_208_p2 & icmp_fu_184_p2);

assign sel_tmp7_fu_236_p2 = (tmp_4_fu_162_p2 ^ 1'd1);

assign sel_tmp8_fu_242_p2 = (tmp_5_fu_168_p2 & sel_tmp7_fu_236_p2);

assign shift_V_1_fu_196_p2 = ($signed(11'd2047) + $signed(new_exp_V_fu_90_p4));

assign shift_V_2_fu_220_p3 = ((sel_tmp4_fu_214_p2[0:0] === 1'b1) ? shift_V_fu_190_p2 : shift_V_1_fu_196_p2);

assign shift_V_3_fu_228_p3 = ((tmp_4_fu_162_p2[0:0] === 1'b1) ? 11'd0 : shift_V_2_fu_220_p3);

assign shift_V_4_fu_248_p3 = ((sel_tmp8_fu_242_p2[0:0] === 1'b1) ? shift_V_cast_cast_fu_114_p3 : shift_V_3_fu_228_p3);

assign shift_V_cast_cast_fu_114_p3 = ((tmp_fu_108_p2[0:0] === 1'b1) ? 11'd4 : 11'd3);

assign shift_V_fu_190_p2 = (11'd1 - new_exp_V_fu_90_p4);

assign tmp_1_fu_122_p2 = ((new_exp_V_fu_90_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_2_fu_128_p2 = ((shift_V_cast_cast_fu_114_p3 > new_exp_V_fu_90_p4) ? 1'b1 : 1'b0);

assign tmp_3_fu_256_p3 = {{1'd1}, {new_mant_V_fu_100_p1}};

assign tmp_4_fu_162_p2 = ((new_exp_V_fu_90_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_5_fu_168_p2 = ((shift_V_cast_cast_fu_114_p3 < new_exp_V_fu_90_p4) ? 1'b1 : 1'b0);

assign tmp_7_fu_148_p2 = (tmp_2_fu_128_p2 | tmp_1_fu_122_p2);

assign tmp_9_fu_174_p4 = {{p_Val2_s_fu_78_p1[62:53]}};

assign tmp_cast_fu_280_p1 = shift_V_4_fu_248_p3;

assign tmp_fu_108_p2 = ((new_mant_V_fu_100_p1 < 52'd1688849860263936) ? 1'b1 : 1'b0);

assign tmp_s_fu_276_p1 = shift_V_4_fu_248_p3;

assign xf_V_3_fu_300_p3 = ((icmp_fu_184_p2[0:0] === 1'b1) ? r_V_cast_fu_290_p1 : r_V_1_fu_294_p2);

assign xf_V_4_fu_308_p2 = (57'd5 + xf_V_3_fu_300_p3);

assign xf_V_5_cast_fu_104_p1 = new_mant_V_fu_100_p1;

assign xf_V_fu_264_p3 = ((tmp_4_fu_162_p2[0:0] === 1'b1) ? xf_V_5_cast_fu_104_p1 : tmp_3_fu_256_p3);

endmodule //operator_double_div11
