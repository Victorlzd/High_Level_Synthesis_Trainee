

================================================================
== Vivado HLS Report for 'int_57_div11'
================================================================
* Date:           Fri Aug 31 15:43:11 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        operator_double_div
* Solution:       div11
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   2.50|     2.094|        0.31|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   86|   86|   86|   86|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 58
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.09>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%in_V_read = call i57 @_ssdm_op_Read.ap_auto.i57(i57 %in_V)"   --->   Operation 59 'read' 'in_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i57.i32(i57 %in_V_read, i32 56)" [test.cpp:1057]   --->   Operation 60 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%d_chunk_V = zext i1 %tmp to i2" [test.cpp:1057]   --->   Operation 61 'zext' 'd_chunk_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [2/2] (2.09ns)   --->   "%call_ret1 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V, i4 0)" [test.cpp:1058]   --->   Operation 62 'call' 'call_ret1' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%d_chunk_V_1 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 54, i32 55)" [test.cpp:1060]   --->   Operation 63 'partselect' 'd_chunk_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%d_chunk_V_2 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 52, i32 53)" [test.cpp:1063]   --->   Operation 64 'partselect' 'd_chunk_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%d_chunk_V_3 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 50, i32 51)" [test.cpp:1066]   --->   Operation 65 'partselect' 'd_chunk_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%d_chunk_V_4 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 48, i32 49)" [test.cpp:1069]   --->   Operation 66 'partselect' 'd_chunk_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%d_chunk_V_5 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 46, i32 47)" [test.cpp:1072]   --->   Operation 67 'partselect' 'd_chunk_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%d_chunk_V_6 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 44, i32 45)" [test.cpp:1075]   --->   Operation 68 'partselect' 'd_chunk_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%d_chunk_V_7 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 42, i32 43)" [test.cpp:1078]   --->   Operation 69 'partselect' 'd_chunk_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%d_chunk_V_8 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 40, i32 41)" [test.cpp:1081]   --->   Operation 70 'partselect' 'd_chunk_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%d_chunk_V_9 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 38, i32 39)" [test.cpp:1084]   --->   Operation 71 'partselect' 'd_chunk_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%d_chunk_V_10 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 36, i32 37)" [test.cpp:1087]   --->   Operation 72 'partselect' 'd_chunk_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%d_chunk_V_11 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 34, i32 35)" [test.cpp:1090]   --->   Operation 73 'partselect' 'd_chunk_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%d_chunk_V_12 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 32, i32 33)" [test.cpp:1093]   --->   Operation 74 'partselect' 'd_chunk_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%d_chunk_V_13 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 30, i32 31)" [test.cpp:1096]   --->   Operation 75 'partselect' 'd_chunk_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%d_chunk_V_14 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 28, i32 29)" [test.cpp:1099]   --->   Operation 76 'partselect' 'd_chunk_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%d_chunk_V_15 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 26, i32 27)" [test.cpp:1102]   --->   Operation 77 'partselect' 'd_chunk_V_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%d_chunk_V_16 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 24, i32 25)" [test.cpp:1105]   --->   Operation 78 'partselect' 'd_chunk_V_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%d_chunk_V_17 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 22, i32 23)" [test.cpp:1108]   --->   Operation 79 'partselect' 'd_chunk_V_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%d_chunk_V_18 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 20, i32 21)" [test.cpp:1111]   --->   Operation 80 'partselect' 'd_chunk_V_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%d_chunk_V_19 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 18, i32 19)" [test.cpp:1114]   --->   Operation 81 'partselect' 'd_chunk_V_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%d_chunk_V_20 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 16, i32 17)" [test.cpp:1117]   --->   Operation 82 'partselect' 'd_chunk_V_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%d_chunk_V_21 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 14, i32 15)" [test.cpp:1120]   --->   Operation 83 'partselect' 'd_chunk_V_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%d_chunk_V_22 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 12, i32 13)" [test.cpp:1123]   --->   Operation 84 'partselect' 'd_chunk_V_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%d_chunk_V_23 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 10, i32 11)" [test.cpp:1126]   --->   Operation 85 'partselect' 'd_chunk_V_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%d_chunk_V_24 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 8, i32 9)" [test.cpp:1129]   --->   Operation 86 'partselect' 'd_chunk_V_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%d_chunk_V_25 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 6, i32 7)" [test.cpp:1132]   --->   Operation 87 'partselect' 'd_chunk_V_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%d_chunk_V_26 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 4, i32 5)" [test.cpp:1135]   --->   Operation 88 'partselect' 'd_chunk_V_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%d_chunk_V_27 = call i2 @_ssdm_op_PartSelect.i2.i57.i32.i32(i57 %in_V_read, i32 2, i32 3)" [test.cpp:1138]   --->   Operation 89 'partselect' 'd_chunk_V_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%d_chunk_V_28 = trunc i57 %in_V_read to i2" [test.cpp:1141]   --->   Operation 90 'trunc' 'd_chunk_V_28' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.33>
ST_2 : Operation 91 [1/2] (1.33ns)   --->   "%call_ret1 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V, i4 0)" [test.cpp:1058]   --->   Operation 91 'call' 'call_ret1' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%q_chunk_V_29 = extractvalue { i2, i4 } %call_ret1, 0" [test.cpp:1058]   --->   Operation 92 'extractvalue' 'q_chunk_V_29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%r_V = extractvalue { i2, i4 } %call_ret1, 1" [test.cpp:1058]   --->   Operation 93 'extractvalue' 'r_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_12 = trunc i2 %q_chunk_V_29 to i1" [test.cpp:1059]   --->   Operation 94 'trunc' 'tmp_12' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.09>
ST_3 : Operation 95 [2/2] (2.09ns)   --->   "%call_ret2 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_1, i4 %r_V)" [test.cpp:1061]   --->   Operation 95 'call' 'call_ret2' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 1.33>
ST_4 : Operation 96 [1/2] (1.33ns)   --->   "%call_ret2 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_1, i4 %r_V)" [test.cpp:1061]   --->   Operation 96 'call' 'call_ret2' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%q_chunk_V = extractvalue { i2, i4 } %call_ret2, 0" [test.cpp:1061]   --->   Operation 97 'extractvalue' 'q_chunk_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%r_V_2 = extractvalue { i2, i4 } %call_ret2, 1" [test.cpp:1061]   --->   Operation 98 'extractvalue' 'r_V_2' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.09>
ST_5 : Operation 99 [2/2] (2.09ns)   --->   "%call_ret3 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_2, i4 %r_V_2)" [test.cpp:1064]   --->   Operation 99 'call' 'call_ret3' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 1.33>
ST_6 : Operation 100 [1/2] (1.33ns)   --->   "%call_ret3 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_2, i4 %r_V_2)" [test.cpp:1064]   --->   Operation 100 'call' 'call_ret3' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 101 [1/1] (0.00ns)   --->   "%q_chunk_V_1 = extractvalue { i2, i4 } %call_ret3, 0" [test.cpp:1064]   --->   Operation 101 'extractvalue' 'q_chunk_V_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 102 [1/1] (0.00ns)   --->   "%r_V_3 = extractvalue { i2, i4 } %call_ret3, 1" [test.cpp:1064]   --->   Operation 102 'extractvalue' 'r_V_3' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 2.09>
ST_7 : Operation 103 [2/2] (2.09ns)   --->   "%call_ret4 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_3, i4 %r_V_3)" [test.cpp:1067]   --->   Operation 103 'call' 'call_ret4' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 1.33>
ST_8 : Operation 104 [1/2] (1.33ns)   --->   "%call_ret4 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_3, i4 %r_V_3)" [test.cpp:1067]   --->   Operation 104 'call' 'call_ret4' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "%q_chunk_V_2 = extractvalue { i2, i4 } %call_ret4, 0" [test.cpp:1067]   --->   Operation 105 'extractvalue' 'q_chunk_V_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "%r_V_4 = extractvalue { i2, i4 } %call_ret4, 1" [test.cpp:1067]   --->   Operation 106 'extractvalue' 'r_V_4' <Predicate = true> <Delay = 0.00>

State 9 <SV = 8> <Delay = 2.09>
ST_9 : Operation 107 [2/2] (2.09ns)   --->   "%call_ret5 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_4, i4 %r_V_4)" [test.cpp:1070]   --->   Operation 107 'call' 'call_ret5' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 1.33>
ST_10 : Operation 108 [1/2] (1.33ns)   --->   "%call_ret5 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_4, i4 %r_V_4)" [test.cpp:1070]   --->   Operation 108 'call' 'call_ret5' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 109 [1/1] (0.00ns)   --->   "%q_chunk_V_3 = extractvalue { i2, i4 } %call_ret5, 0" [test.cpp:1070]   --->   Operation 109 'extractvalue' 'q_chunk_V_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 110 [1/1] (0.00ns)   --->   "%r_V_5 = extractvalue { i2, i4 } %call_ret5, 1" [test.cpp:1070]   --->   Operation 110 'extractvalue' 'r_V_5' <Predicate = true> <Delay = 0.00>

State 11 <SV = 10> <Delay = 2.09>
ST_11 : Operation 111 [2/2] (2.09ns)   --->   "%call_ret6 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_5, i4 %r_V_5)" [test.cpp:1073]   --->   Operation 111 'call' 'call_ret6' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 1.33>
ST_12 : Operation 112 [1/2] (1.33ns)   --->   "%call_ret6 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_5, i4 %r_V_5)" [test.cpp:1073]   --->   Operation 112 'call' 'call_ret6' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 113 [1/1] (0.00ns)   --->   "%q_chunk_V_4 = extractvalue { i2, i4 } %call_ret6, 0" [test.cpp:1073]   --->   Operation 113 'extractvalue' 'q_chunk_V_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 114 [1/1] (0.00ns)   --->   "%r_V_6 = extractvalue { i2, i4 } %call_ret6, 1" [test.cpp:1073]   --->   Operation 114 'extractvalue' 'r_V_6' <Predicate = true> <Delay = 0.00>

State 13 <SV = 12> <Delay = 2.09>
ST_13 : Operation 115 [2/2] (2.09ns)   --->   "%call_ret7 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_6, i4 %r_V_6)" [test.cpp:1076]   --->   Operation 115 'call' 'call_ret7' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 1.33>
ST_14 : Operation 116 [1/2] (1.33ns)   --->   "%call_ret7 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_6, i4 %r_V_6)" [test.cpp:1076]   --->   Operation 116 'call' 'call_ret7' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 117 [1/1] (0.00ns)   --->   "%q_chunk_V_5 = extractvalue { i2, i4 } %call_ret7, 0" [test.cpp:1076]   --->   Operation 117 'extractvalue' 'q_chunk_V_5' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 118 [1/1] (0.00ns)   --->   "%r_V_7 = extractvalue { i2, i4 } %call_ret7, 1" [test.cpp:1076]   --->   Operation 118 'extractvalue' 'r_V_7' <Predicate = true> <Delay = 0.00>

State 15 <SV = 14> <Delay = 2.09>
ST_15 : Operation 119 [2/2] (2.09ns)   --->   "%call_ret8 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_7, i4 %r_V_7)" [test.cpp:1079]   --->   Operation 119 'call' 'call_ret8' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 1.33>
ST_16 : Operation 120 [1/2] (1.33ns)   --->   "%call_ret8 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_7, i4 %r_V_7)" [test.cpp:1079]   --->   Operation 120 'call' 'call_ret8' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 121 [1/1] (0.00ns)   --->   "%q_chunk_V_6 = extractvalue { i2, i4 } %call_ret8, 0" [test.cpp:1079]   --->   Operation 121 'extractvalue' 'q_chunk_V_6' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 122 [1/1] (0.00ns)   --->   "%r_V_8 = extractvalue { i2, i4 } %call_ret8, 1" [test.cpp:1079]   --->   Operation 122 'extractvalue' 'r_V_8' <Predicate = true> <Delay = 0.00>

State 17 <SV = 16> <Delay = 2.09>
ST_17 : Operation 123 [2/2] (2.09ns)   --->   "%call_ret9 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_8, i4 %r_V_8)" [test.cpp:1082]   --->   Operation 123 'call' 'call_ret9' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 1.33>
ST_18 : Operation 124 [1/2] (1.33ns)   --->   "%call_ret9 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_8, i4 %r_V_8)" [test.cpp:1082]   --->   Operation 124 'call' 'call_ret9' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 125 [1/1] (0.00ns)   --->   "%q_chunk_V_7 = extractvalue { i2, i4 } %call_ret9, 0" [test.cpp:1082]   --->   Operation 125 'extractvalue' 'q_chunk_V_7' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 126 [1/1] (0.00ns)   --->   "%r_V_9 = extractvalue { i2, i4 } %call_ret9, 1" [test.cpp:1082]   --->   Operation 126 'extractvalue' 'r_V_9' <Predicate = true> <Delay = 0.00>

State 19 <SV = 18> <Delay = 2.09>
ST_19 : Operation 127 [2/2] (2.09ns)   --->   "%call_ret10 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_9, i4 %r_V_9)" [test.cpp:1085]   --->   Operation 127 'call' 'call_ret10' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 19> <Delay = 1.33>
ST_20 : Operation 128 [1/2] (1.33ns)   --->   "%call_ret10 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_9, i4 %r_V_9)" [test.cpp:1085]   --->   Operation 128 'call' 'call_ret10' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 129 [1/1] (0.00ns)   --->   "%q_chunk_V_8 = extractvalue { i2, i4 } %call_ret10, 0" [test.cpp:1085]   --->   Operation 129 'extractvalue' 'q_chunk_V_8' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 130 [1/1] (0.00ns)   --->   "%r_V_10 = extractvalue { i2, i4 } %call_ret10, 1" [test.cpp:1085]   --->   Operation 130 'extractvalue' 'r_V_10' <Predicate = true> <Delay = 0.00>

State 21 <SV = 20> <Delay = 2.09>
ST_21 : Operation 131 [2/2] (2.09ns)   --->   "%call_ret11 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_10, i4 %r_V_10)" [test.cpp:1088]   --->   Operation 131 'call' 'call_ret11' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 1.33>
ST_22 : Operation 132 [1/2] (1.33ns)   --->   "%call_ret11 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_10, i4 %r_V_10)" [test.cpp:1088]   --->   Operation 132 'call' 'call_ret11' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 133 [1/1] (0.00ns)   --->   "%q_chunk_V_9 = extractvalue { i2, i4 } %call_ret11, 0" [test.cpp:1088]   --->   Operation 133 'extractvalue' 'q_chunk_V_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 134 [1/1] (0.00ns)   --->   "%r_V_11 = extractvalue { i2, i4 } %call_ret11, 1" [test.cpp:1088]   --->   Operation 134 'extractvalue' 'r_V_11' <Predicate = true> <Delay = 0.00>

State 23 <SV = 22> <Delay = 2.09>
ST_23 : Operation 135 [2/2] (2.09ns)   --->   "%call_ret12 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_11, i4 %r_V_11)" [test.cpp:1091]   --->   Operation 135 'call' 'call_ret12' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 23> <Delay = 1.33>
ST_24 : Operation 136 [1/2] (1.33ns)   --->   "%call_ret12 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_11, i4 %r_V_11)" [test.cpp:1091]   --->   Operation 136 'call' 'call_ret12' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 137 [1/1] (0.00ns)   --->   "%q_chunk_V_11 = extractvalue { i2, i4 } %call_ret12, 0" [test.cpp:1091]   --->   Operation 137 'extractvalue' 'q_chunk_V_11' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 138 [1/1] (0.00ns)   --->   "%r_V_12 = extractvalue { i2, i4 } %call_ret12, 1" [test.cpp:1091]   --->   Operation 138 'extractvalue' 'r_V_12' <Predicate = true> <Delay = 0.00>

State 25 <SV = 24> <Delay = 2.09>
ST_25 : Operation 139 [2/2] (2.09ns)   --->   "%call_ret13 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_12, i4 %r_V_12)" [test.cpp:1094]   --->   Operation 139 'call' 'call_ret13' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 26 <SV = 25> <Delay = 1.33>
ST_26 : Operation 140 [1/2] (1.33ns)   --->   "%call_ret13 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_12, i4 %r_V_12)" [test.cpp:1094]   --->   Operation 140 'call' 'call_ret13' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_26 : Operation 141 [1/1] (0.00ns)   --->   "%q_chunk_V_12 = extractvalue { i2, i4 } %call_ret13, 0" [test.cpp:1094]   --->   Operation 141 'extractvalue' 'q_chunk_V_12' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 142 [1/1] (0.00ns)   --->   "%r_V_13 = extractvalue { i2, i4 } %call_ret13, 1" [test.cpp:1094]   --->   Operation 142 'extractvalue' 'r_V_13' <Predicate = true> <Delay = 0.00>

State 27 <SV = 26> <Delay = 2.09>
ST_27 : Operation 143 [2/2] (2.09ns)   --->   "%call_ret14 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_13, i4 %r_V_13)" [test.cpp:1097]   --->   Operation 143 'call' 'call_ret14' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 27> <Delay = 1.33>
ST_28 : Operation 144 [1/2] (1.33ns)   --->   "%call_ret14 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_13, i4 %r_V_13)" [test.cpp:1097]   --->   Operation 144 'call' 'call_ret14' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_28 : Operation 145 [1/1] (0.00ns)   --->   "%q_chunk_V_13 = extractvalue { i2, i4 } %call_ret14, 0" [test.cpp:1097]   --->   Operation 145 'extractvalue' 'q_chunk_V_13' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 146 [1/1] (0.00ns)   --->   "%r_V_14 = extractvalue { i2, i4 } %call_ret14, 1" [test.cpp:1097]   --->   Operation 146 'extractvalue' 'r_V_14' <Predicate = true> <Delay = 0.00>

State 29 <SV = 28> <Delay = 2.09>
ST_29 : Operation 147 [2/2] (2.09ns)   --->   "%call_ret15 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_14, i4 %r_V_14)" [test.cpp:1100]   --->   Operation 147 'call' 'call_ret15' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 30 <SV = 29> <Delay = 1.33>
ST_30 : Operation 148 [1/2] (1.33ns)   --->   "%call_ret15 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_14, i4 %r_V_14)" [test.cpp:1100]   --->   Operation 148 'call' 'call_ret15' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_30 : Operation 149 [1/1] (0.00ns)   --->   "%q_chunk_V_14 = extractvalue { i2, i4 } %call_ret15, 0" [test.cpp:1100]   --->   Operation 149 'extractvalue' 'q_chunk_V_14' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 150 [1/1] (0.00ns)   --->   "%r_V_15 = extractvalue { i2, i4 } %call_ret15, 1" [test.cpp:1100]   --->   Operation 150 'extractvalue' 'r_V_15' <Predicate = true> <Delay = 0.00>

State 31 <SV = 30> <Delay = 2.09>
ST_31 : Operation 151 [2/2] (2.09ns)   --->   "%call_ret16 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_15, i4 %r_V_15)" [test.cpp:1103]   --->   Operation 151 'call' 'call_ret16' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 32 <SV = 31> <Delay = 1.33>
ST_32 : Operation 152 [1/2] (1.33ns)   --->   "%call_ret16 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_15, i4 %r_V_15)" [test.cpp:1103]   --->   Operation 152 'call' 'call_ret16' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_32 : Operation 153 [1/1] (0.00ns)   --->   "%q_chunk_V_15 = extractvalue { i2, i4 } %call_ret16, 0" [test.cpp:1103]   --->   Operation 153 'extractvalue' 'q_chunk_V_15' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 154 [1/1] (0.00ns)   --->   "%r_V_16 = extractvalue { i2, i4 } %call_ret16, 1" [test.cpp:1103]   --->   Operation 154 'extractvalue' 'r_V_16' <Predicate = true> <Delay = 0.00>

State 33 <SV = 32> <Delay = 2.09>
ST_33 : Operation 155 [2/2] (2.09ns)   --->   "%call_ret17 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_16, i4 %r_V_16)" [test.cpp:1106]   --->   Operation 155 'call' 'call_ret17' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 34 <SV = 33> <Delay = 1.33>
ST_34 : Operation 156 [1/2] (1.33ns)   --->   "%call_ret17 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_16, i4 %r_V_16)" [test.cpp:1106]   --->   Operation 156 'call' 'call_ret17' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_34 : Operation 157 [1/1] (0.00ns)   --->   "%q_chunk_V_16 = extractvalue { i2, i4 } %call_ret17, 0" [test.cpp:1106]   --->   Operation 157 'extractvalue' 'q_chunk_V_16' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 158 [1/1] (0.00ns)   --->   "%r_V_17 = extractvalue { i2, i4 } %call_ret17, 1" [test.cpp:1106]   --->   Operation 158 'extractvalue' 'r_V_17' <Predicate = true> <Delay = 0.00>

State 35 <SV = 34> <Delay = 2.09>
ST_35 : Operation 159 [2/2] (2.09ns)   --->   "%call_ret18 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_17, i4 %r_V_17)" [test.cpp:1109]   --->   Operation 159 'call' 'call_ret18' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 36 <SV = 35> <Delay = 1.33>
ST_36 : Operation 160 [1/2] (1.33ns)   --->   "%call_ret18 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_17, i4 %r_V_17)" [test.cpp:1109]   --->   Operation 160 'call' 'call_ret18' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_36 : Operation 161 [1/1] (0.00ns)   --->   "%q_chunk_V_17 = extractvalue { i2, i4 } %call_ret18, 0" [test.cpp:1109]   --->   Operation 161 'extractvalue' 'q_chunk_V_17' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 162 [1/1] (0.00ns)   --->   "%r_V_18 = extractvalue { i2, i4 } %call_ret18, 1" [test.cpp:1109]   --->   Operation 162 'extractvalue' 'r_V_18' <Predicate = true> <Delay = 0.00>

State 37 <SV = 36> <Delay = 2.09>
ST_37 : Operation 163 [2/2] (2.09ns)   --->   "%call_ret19 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_18, i4 %r_V_18)" [test.cpp:1112]   --->   Operation 163 'call' 'call_ret19' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 38 <SV = 37> <Delay = 1.33>
ST_38 : Operation 164 [1/2] (1.33ns)   --->   "%call_ret19 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_18, i4 %r_V_18)" [test.cpp:1112]   --->   Operation 164 'call' 'call_ret19' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_38 : Operation 165 [1/1] (0.00ns)   --->   "%q_chunk_V_18 = extractvalue { i2, i4 } %call_ret19, 0" [test.cpp:1112]   --->   Operation 165 'extractvalue' 'q_chunk_V_18' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 166 [1/1] (0.00ns)   --->   "%r_V_19 = extractvalue { i2, i4 } %call_ret19, 1" [test.cpp:1112]   --->   Operation 166 'extractvalue' 'r_V_19' <Predicate = true> <Delay = 0.00>

State 39 <SV = 38> <Delay = 2.09>
ST_39 : Operation 167 [2/2] (2.09ns)   --->   "%call_ret20 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_19, i4 %r_V_19)" [test.cpp:1115]   --->   Operation 167 'call' 'call_ret20' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 40 <SV = 39> <Delay = 1.33>
ST_40 : Operation 168 [1/2] (1.33ns)   --->   "%call_ret20 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_19, i4 %r_V_19)" [test.cpp:1115]   --->   Operation 168 'call' 'call_ret20' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_40 : Operation 169 [1/1] (0.00ns)   --->   "%q_chunk_V_19 = extractvalue { i2, i4 } %call_ret20, 0" [test.cpp:1115]   --->   Operation 169 'extractvalue' 'q_chunk_V_19' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 170 [1/1] (0.00ns)   --->   "%r_V_20 = extractvalue { i2, i4 } %call_ret20, 1" [test.cpp:1115]   --->   Operation 170 'extractvalue' 'r_V_20' <Predicate = true> <Delay = 0.00>

State 41 <SV = 40> <Delay = 2.09>
ST_41 : Operation 171 [2/2] (2.09ns)   --->   "%call_ret21 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_20, i4 %r_V_20)" [test.cpp:1118]   --->   Operation 171 'call' 'call_ret21' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 42 <SV = 41> <Delay = 1.33>
ST_42 : Operation 172 [1/2] (1.33ns)   --->   "%call_ret21 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_20, i4 %r_V_20)" [test.cpp:1118]   --->   Operation 172 'call' 'call_ret21' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_42 : Operation 173 [1/1] (0.00ns)   --->   "%q_chunk_V_20 = extractvalue { i2, i4 } %call_ret21, 0" [test.cpp:1118]   --->   Operation 173 'extractvalue' 'q_chunk_V_20' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 174 [1/1] (0.00ns)   --->   "%r_V_21 = extractvalue { i2, i4 } %call_ret21, 1" [test.cpp:1118]   --->   Operation 174 'extractvalue' 'r_V_21' <Predicate = true> <Delay = 0.00>

State 43 <SV = 42> <Delay = 2.09>
ST_43 : Operation 175 [2/2] (2.09ns)   --->   "%call_ret22 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_21, i4 %r_V_21)" [test.cpp:1121]   --->   Operation 175 'call' 'call_ret22' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 44 <SV = 43> <Delay = 1.33>
ST_44 : Operation 176 [1/2] (1.33ns)   --->   "%call_ret22 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_21, i4 %r_V_21)" [test.cpp:1121]   --->   Operation 176 'call' 'call_ret22' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_44 : Operation 177 [1/1] (0.00ns)   --->   "%q_chunk_V_21 = extractvalue { i2, i4 } %call_ret22, 0" [test.cpp:1121]   --->   Operation 177 'extractvalue' 'q_chunk_V_21' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 178 [1/1] (0.00ns)   --->   "%r_V_22 = extractvalue { i2, i4 } %call_ret22, 1" [test.cpp:1121]   --->   Operation 178 'extractvalue' 'r_V_22' <Predicate = true> <Delay = 0.00>

State 45 <SV = 44> <Delay = 2.09>
ST_45 : Operation 179 [2/2] (2.09ns)   --->   "%call_ret23 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_22, i4 %r_V_22)" [test.cpp:1124]   --->   Operation 179 'call' 'call_ret23' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 46 <SV = 45> <Delay = 1.33>
ST_46 : Operation 180 [1/2] (1.33ns)   --->   "%call_ret23 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_22, i4 %r_V_22)" [test.cpp:1124]   --->   Operation 180 'call' 'call_ret23' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_46 : Operation 181 [1/1] (0.00ns)   --->   "%q_chunk_V_22 = extractvalue { i2, i4 } %call_ret23, 0" [test.cpp:1124]   --->   Operation 181 'extractvalue' 'q_chunk_V_22' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 182 [1/1] (0.00ns)   --->   "%r_V_23 = extractvalue { i2, i4 } %call_ret23, 1" [test.cpp:1124]   --->   Operation 182 'extractvalue' 'r_V_23' <Predicate = true> <Delay = 0.00>

State 47 <SV = 46> <Delay = 2.09>
ST_47 : Operation 183 [2/2] (2.09ns)   --->   "%call_ret24 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_23, i4 %r_V_23)" [test.cpp:1127]   --->   Operation 183 'call' 'call_ret24' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 48 <SV = 47> <Delay = 1.33>
ST_48 : Operation 184 [1/2] (1.33ns)   --->   "%call_ret24 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_23, i4 %r_V_23)" [test.cpp:1127]   --->   Operation 184 'call' 'call_ret24' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_48 : Operation 185 [1/1] (0.00ns)   --->   "%q_chunk_V_23 = extractvalue { i2, i4 } %call_ret24, 0" [test.cpp:1127]   --->   Operation 185 'extractvalue' 'q_chunk_V_23' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 186 [1/1] (0.00ns)   --->   "%r_V_24 = extractvalue { i2, i4 } %call_ret24, 1" [test.cpp:1127]   --->   Operation 186 'extractvalue' 'r_V_24' <Predicate = true> <Delay = 0.00>

State 49 <SV = 48> <Delay = 2.09>
ST_49 : Operation 187 [2/2] (2.09ns)   --->   "%call_ret25 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_24, i4 %r_V_24)" [test.cpp:1130]   --->   Operation 187 'call' 'call_ret25' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 50 <SV = 49> <Delay = 1.33>
ST_50 : Operation 188 [1/2] (1.33ns)   --->   "%call_ret25 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_24, i4 %r_V_24)" [test.cpp:1130]   --->   Operation 188 'call' 'call_ret25' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_50 : Operation 189 [1/1] (0.00ns)   --->   "%q_chunk_V_24 = extractvalue { i2, i4 } %call_ret25, 0" [test.cpp:1130]   --->   Operation 189 'extractvalue' 'q_chunk_V_24' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 190 [1/1] (0.00ns)   --->   "%r_V_25 = extractvalue { i2, i4 } %call_ret25, 1" [test.cpp:1130]   --->   Operation 190 'extractvalue' 'r_V_25' <Predicate = true> <Delay = 0.00>

State 51 <SV = 50> <Delay = 2.09>
ST_51 : Operation 191 [2/2] (2.09ns)   --->   "%call_ret26 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_25, i4 %r_V_25)" [test.cpp:1133]   --->   Operation 191 'call' 'call_ret26' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 52 <SV = 51> <Delay = 1.33>
ST_52 : Operation 192 [1/2] (1.33ns)   --->   "%call_ret26 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_25, i4 %r_V_25)" [test.cpp:1133]   --->   Operation 192 'call' 'call_ret26' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_52 : Operation 193 [1/1] (0.00ns)   --->   "%q_chunk_V_25 = extractvalue { i2, i4 } %call_ret26, 0" [test.cpp:1133]   --->   Operation 193 'extractvalue' 'q_chunk_V_25' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 194 [1/1] (0.00ns)   --->   "%r_V_26 = extractvalue { i2, i4 } %call_ret26, 1" [test.cpp:1133]   --->   Operation 194 'extractvalue' 'r_V_26' <Predicate = true> <Delay = 0.00>

State 53 <SV = 52> <Delay = 2.09>
ST_53 : Operation 195 [2/2] (2.09ns)   --->   "%call_ret27 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_26, i4 %r_V_26)" [test.cpp:1136]   --->   Operation 195 'call' 'call_ret27' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 54 <SV = 53> <Delay = 1.33>
ST_54 : Operation 196 [1/2] (1.33ns)   --->   "%call_ret27 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_26, i4 %r_V_26)" [test.cpp:1136]   --->   Operation 196 'call' 'call_ret27' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_54 : Operation 197 [1/1] (0.00ns)   --->   "%q_chunk_V_26 = extractvalue { i2, i4 } %call_ret27, 0" [test.cpp:1136]   --->   Operation 197 'extractvalue' 'q_chunk_V_26' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 198 [1/1] (0.00ns)   --->   "%r_V_27 = extractvalue { i2, i4 } %call_ret27, 1" [test.cpp:1136]   --->   Operation 198 'extractvalue' 'r_V_27' <Predicate = true> <Delay = 0.00>

State 55 <SV = 54> <Delay = 2.09>
ST_55 : Operation 199 [2/2] (2.09ns)   --->   "%call_ret28 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_27, i4 %r_V_27)" [test.cpp:1139]   --->   Operation 199 'call' 'call_ret28' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 56 <SV = 55> <Delay = 1.33>
ST_56 : Operation 200 [1/2] (1.33ns)   --->   "%call_ret28 = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_27, i4 %r_V_27)" [test.cpp:1139]   --->   Operation 200 'call' 'call_ret28' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_56 : Operation 201 [1/1] (0.00ns)   --->   "%q_chunk_V_27 = extractvalue { i2, i4 } %call_ret28, 0" [test.cpp:1139]   --->   Operation 201 'extractvalue' 'q_chunk_V_27' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 202 [1/1] (0.00ns)   --->   "%r_V_28 = extractvalue { i2, i4 } %call_ret28, 1" [test.cpp:1139]   --->   Operation 202 'extractvalue' 'r_V_28' <Predicate = true> <Delay = 0.00>

State 57 <SV = 56> <Delay = 2.09>
ST_57 : Operation 203 [2/2] (2.09ns)   --->   "%call_ret = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_28, i4 %r_V_28)" [test.cpp:1142]   --->   Operation 203 'call' 'call_ret' <Predicate = true> <Delay = 2.09> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 58 <SV = 57> <Delay = 1.33>
ST_58 : Operation 204 [1/2] (1.33ns)   --->   "%call_ret = call fastcc { i2, i4 } @lut_div11_chunk(i2 %d_chunk_V_28, i4 %r_V_28)" [test.cpp:1142]   --->   Operation 204 'call' 'call_ret' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_58 : Operation 205 [1/1] (0.00ns)   --->   "%q_chunk_V_28 = extractvalue { i2, i4 } %call_ret, 0" [test.cpp:1142]   --->   Operation 205 'extractvalue' 'q_chunk_V_28' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 206 [1/1] (0.00ns)   --->   "%p_Result_s = call i57 @_ssdm_op_BitConcatenate.i57.i1.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i1 %tmp_12, i2 %q_chunk_V, i2 %q_chunk_V_1, i2 %q_chunk_V_2, i2 %q_chunk_V_3, i2 %q_chunk_V_4, i2 %q_chunk_V_5, i2 %q_chunk_V_6, i2 %q_chunk_V_7, i2 %q_chunk_V_8, i2 %q_chunk_V_9, i2 %q_chunk_V_11, i2 %q_chunk_V_12, i2 %q_chunk_V_13, i2 %q_chunk_V_14, i2 %q_chunk_V_15, i2 %q_chunk_V_16, i2 %q_chunk_V_17, i2 %q_chunk_V_18, i2 %q_chunk_V_19, i2 %q_chunk_V_20, i2 %q_chunk_V_21, i2 %q_chunk_V_22, i2 %q_chunk_V_23, i2 %q_chunk_V_24, i2 %q_chunk_V_25, i2 %q_chunk_V_26, i2 %q_chunk_V_27, i2 %q_chunk_V_28)" [test.cpp:1143]   --->   Operation 206 'bitconcatenate' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 207 [1/1] (0.00ns)   --->   "ret i57 %p_Result_s" [test.cpp:1144]   --->   Operation 207 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 2.5ns, clock uncertainty: 0.312ns.

 <State 1>: 2.09ns
The critical path consists of the following:
	wire read on port 'in_V' [8]  (0 ns)
	'call' operation ('call_ret1', test.cpp:1058) to 'lut_div11_chunk' [11]  (2.09 ns)

 <State 2>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret1', test.cpp:1058) to 'lut_div11_chunk' [11]  (1.33 ns)

 <State 3>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret2', test.cpp:1061) to 'lut_div11_chunk' [16]  (2.09 ns)

 <State 4>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret2', test.cpp:1061) to 'lut_div11_chunk' [16]  (1.33 ns)

 <State 5>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret3', test.cpp:1064) to 'lut_div11_chunk' [20]  (2.09 ns)

 <State 6>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret3', test.cpp:1064) to 'lut_div11_chunk' [20]  (1.33 ns)

 <State 7>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret4', test.cpp:1067) to 'lut_div11_chunk' [24]  (2.09 ns)

 <State 8>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret4', test.cpp:1067) to 'lut_div11_chunk' [24]  (1.33 ns)

 <State 9>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret5', test.cpp:1070) to 'lut_div11_chunk' [28]  (2.09 ns)

 <State 10>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret5', test.cpp:1070) to 'lut_div11_chunk' [28]  (1.33 ns)

 <State 11>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret6', test.cpp:1073) to 'lut_div11_chunk' [32]  (2.09 ns)

 <State 12>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret6', test.cpp:1073) to 'lut_div11_chunk' [32]  (1.33 ns)

 <State 13>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret7', test.cpp:1076) to 'lut_div11_chunk' [36]  (2.09 ns)

 <State 14>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret7', test.cpp:1076) to 'lut_div11_chunk' [36]  (1.33 ns)

 <State 15>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret8', test.cpp:1079) to 'lut_div11_chunk' [40]  (2.09 ns)

 <State 16>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret8', test.cpp:1079) to 'lut_div11_chunk' [40]  (1.33 ns)

 <State 17>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret9', test.cpp:1082) to 'lut_div11_chunk' [44]  (2.09 ns)

 <State 18>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret9', test.cpp:1082) to 'lut_div11_chunk' [44]  (1.33 ns)

 <State 19>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret10', test.cpp:1085) to 'lut_div11_chunk' [48]  (2.09 ns)

 <State 20>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret10', test.cpp:1085) to 'lut_div11_chunk' [48]  (1.33 ns)

 <State 21>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret11', test.cpp:1088) to 'lut_div11_chunk' [52]  (2.09 ns)

 <State 22>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret11', test.cpp:1088) to 'lut_div11_chunk' [52]  (1.33 ns)

 <State 23>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret12', test.cpp:1091) to 'lut_div11_chunk' [56]  (2.09 ns)

 <State 24>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret12', test.cpp:1091) to 'lut_div11_chunk' [56]  (1.33 ns)

 <State 25>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret13', test.cpp:1094) to 'lut_div11_chunk' [60]  (2.09 ns)

 <State 26>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret13', test.cpp:1094) to 'lut_div11_chunk' [60]  (1.33 ns)

 <State 27>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret14', test.cpp:1097) to 'lut_div11_chunk' [64]  (2.09 ns)

 <State 28>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret14', test.cpp:1097) to 'lut_div11_chunk' [64]  (1.33 ns)

 <State 29>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret15', test.cpp:1100) to 'lut_div11_chunk' [68]  (2.09 ns)

 <State 30>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret15', test.cpp:1100) to 'lut_div11_chunk' [68]  (1.33 ns)

 <State 31>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret16', test.cpp:1103) to 'lut_div11_chunk' [72]  (2.09 ns)

 <State 32>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret16', test.cpp:1103) to 'lut_div11_chunk' [72]  (1.33 ns)

 <State 33>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret17', test.cpp:1106) to 'lut_div11_chunk' [76]  (2.09 ns)

 <State 34>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret17', test.cpp:1106) to 'lut_div11_chunk' [76]  (1.33 ns)

 <State 35>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret18', test.cpp:1109) to 'lut_div11_chunk' [80]  (2.09 ns)

 <State 36>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret18', test.cpp:1109) to 'lut_div11_chunk' [80]  (1.33 ns)

 <State 37>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret19', test.cpp:1112) to 'lut_div11_chunk' [84]  (2.09 ns)

 <State 38>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret19', test.cpp:1112) to 'lut_div11_chunk' [84]  (1.33 ns)

 <State 39>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret20', test.cpp:1115) to 'lut_div11_chunk' [88]  (2.09 ns)

 <State 40>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret20', test.cpp:1115) to 'lut_div11_chunk' [88]  (1.33 ns)

 <State 41>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret21', test.cpp:1118) to 'lut_div11_chunk' [92]  (2.09 ns)

 <State 42>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret21', test.cpp:1118) to 'lut_div11_chunk' [92]  (1.33 ns)

 <State 43>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret22', test.cpp:1121) to 'lut_div11_chunk' [96]  (2.09 ns)

 <State 44>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret22', test.cpp:1121) to 'lut_div11_chunk' [96]  (1.33 ns)

 <State 45>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret23', test.cpp:1124) to 'lut_div11_chunk' [100]  (2.09 ns)

 <State 46>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret23', test.cpp:1124) to 'lut_div11_chunk' [100]  (1.33 ns)

 <State 47>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret24', test.cpp:1127) to 'lut_div11_chunk' [104]  (2.09 ns)

 <State 48>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret24', test.cpp:1127) to 'lut_div11_chunk' [104]  (1.33 ns)

 <State 49>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret25', test.cpp:1130) to 'lut_div11_chunk' [108]  (2.09 ns)

 <State 50>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret25', test.cpp:1130) to 'lut_div11_chunk' [108]  (1.33 ns)

 <State 51>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret26', test.cpp:1133) to 'lut_div11_chunk' [112]  (2.09 ns)

 <State 52>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret26', test.cpp:1133) to 'lut_div11_chunk' [112]  (1.33 ns)

 <State 53>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret27', test.cpp:1136) to 'lut_div11_chunk' [116]  (2.09 ns)

 <State 54>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret27', test.cpp:1136) to 'lut_div11_chunk' [116]  (1.33 ns)

 <State 55>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret28', test.cpp:1139) to 'lut_div11_chunk' [120]  (2.09 ns)

 <State 56>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret28', test.cpp:1139) to 'lut_div11_chunk' [120]  (1.33 ns)

 <State 57>: 2.09ns
The critical path consists of the following:
	'call' operation ('call_ret', test.cpp:1142) to 'lut_div11_chunk' [124]  (2.09 ns)

 <State 58>: 1.33ns
The critical path consists of the following:
	'call' operation ('call_ret', test.cpp:1142) to 'lut_div11_chunk' [124]  (1.33 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
