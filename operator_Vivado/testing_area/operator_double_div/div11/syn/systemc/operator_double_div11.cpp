// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "operator_double_div11.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic operator_double_div11::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic operator_double_div11::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> operator_double_div11::ap_ST_fsm_state1 = "1";
const sc_lv<2> operator_double_div11::ap_ST_fsm_state2 = "10";
const sc_lv<32> operator_double_div11::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> operator_double_div11::ap_const_lv1_0 = "0";
const sc_lv<32> operator_double_div11::ap_const_lv32_1 = "1";
const bool operator_double_div11::ap_const_boolean_0 = false;
const sc_lv<1> operator_double_div11::ap_const_lv1_1 = "1";
const sc_lv<32> operator_double_div11::ap_const_lv32_3F = "111111";
const sc_lv<32> operator_double_div11::ap_const_lv32_34 = "110100";
const sc_lv<32> operator_double_div11::ap_const_lv32_3E = "111110";
const sc_lv<52> operator_double_div11::ap_const_lv52_6000000000000 = "110000000000000000000000000000000000000000000000000";
const sc_lv<11> operator_double_div11::ap_const_lv11_4 = "100";
const sc_lv<11> operator_double_div11::ap_const_lv11_3 = "11";
const sc_lv<11> operator_double_div11::ap_const_lv11_7FF = "11111111111";
const sc_lv<11> operator_double_div11::ap_const_lv11_0 = "00000000000";
const sc_lv<32> operator_double_div11::ap_const_lv32_35 = "110101";
const sc_lv<10> operator_double_div11::ap_const_lv10_0 = "0000000000";
const sc_lv<11> operator_double_div11::ap_const_lv11_1 = "1";
const sc_lv<57> operator_double_div11::ap_const_lv57_5 = "101";
const bool operator_double_div11::ap_const_boolean_1 = true;

operator_double_div11::operator_double_div11(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_int_57_div11_fu_73 = new int_57_div11("grp_int_57_div11_fu_73");
    grp_int_57_div11_fu_73->ap_clk(ap_clk);
    grp_int_57_div11_fu_73->ap_rst(ap_rst);
    grp_int_57_div11_fu_73->ap_start(grp_int_57_div11_fu_73_ap_start);
    grp_int_57_div11_fu_73->ap_done(grp_int_57_div11_fu_73_ap_done);
    grp_int_57_div11_fu_73->ap_idle(grp_int_57_div11_fu_73_ap_idle);
    grp_int_57_div11_fu_73->ap_ready(grp_int_57_div11_fu_73_ap_ready);
    grp_int_57_div11_fu_73->in_V(xf_V_4_reg_351);
    grp_int_57_div11_fu_73->ap_return(grp_int_57_div11_fu_73_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2_on_subcall_done);
    sensitive << ( tmp_1_reg_342 );
    sensitive << ( grp_int_57_div11_fu_73_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_p_Repl2_s_phi_fu_67_p4);
    sensitive << ( tmp_1_reg_342 );
    sensitive << ( new_mant_V_1_fu_315_p1 );
    sensitive << ( p_Repl2_s_reg_64 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );
    sensitive << ( p_Result_s_fu_320_p4 );

    SC_METHOD(thread_grp_int_57_div11_fu_73_ap_start);
    sensitive << ( grp_int_57_div11_fu_73_ap_start_reg );

    SC_METHOD(thread_icmp_fu_184_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_fu_122_p2 );
    sensitive << ( tmp_9_fu_174_p4 );

    SC_METHOD(thread_new_exp_V_1_fu_134_p2);
    sensitive << ( new_exp_V_fu_90_p4 );
    sensitive << ( shift_V_cast_cast_fu_114_p3 );

    SC_METHOD(thread_new_exp_V_fu_90_p4);
    sensitive << ( p_Val2_s_fu_78_p1 );

    SC_METHOD(thread_new_mant_V_1_fu_315_p1);
    sensitive << ( grp_int_57_div11_fu_73_ap_return );

    SC_METHOD(thread_new_mant_V_fu_100_p1);
    sensitive << ( p_Val2_s_fu_78_p1 );

    SC_METHOD(thread_p_Repl2_1_fu_154_p3);
    sensitive << ( tmp_7_fu_148_p2 );
    sensitive << ( p_new_exp_V_1_fu_140_p3 );
    sensitive << ( new_exp_V_1_fu_134_p2 );

    SC_METHOD(thread_p_Result_s_fu_320_p4);
    sensitive << ( p_Repl2_2_reg_332 );
    sensitive << ( p_Repl2_1_reg_346 );
    sensitive << ( ap_phi_mux_p_Repl2_s_phi_fu_67_p4 );

    SC_METHOD(thread_p_Val2_s_fu_78_p1);
    sensitive << ( in_r );

    SC_METHOD(thread_p_cast_fu_272_p1);
    sensitive << ( xf_V_fu_264_p3 );

    SC_METHOD(thread_p_new_exp_V_1_fu_140_p3);
    sensitive << ( tmp_1_fu_122_p2 );

    SC_METHOD(thread_r_V_1_fu_294_p2);
    sensitive << ( p_cast_fu_272_p1 );
    sensitive << ( tmp_s_fu_276_p1 );

    SC_METHOD(thread_r_V_cast_fu_290_p1);
    sensitive << ( r_V_fu_284_p2 );

    SC_METHOD(thread_r_V_fu_284_p2);
    sensitive << ( xf_V_fu_264_p3 );
    sensitive << ( tmp_cast_fu_280_p1 );

    SC_METHOD(thread_sel_tmp3_demorgan_fu_202_p2);
    sensitive << ( tmp_4_fu_162_p2 );
    sensitive << ( tmp_5_fu_168_p2 );

    SC_METHOD(thread_sel_tmp3_fu_208_p2);
    sensitive << ( sel_tmp3_demorgan_fu_202_p2 );

    SC_METHOD(thread_sel_tmp4_fu_214_p2);
    sensitive << ( icmp_fu_184_p2 );
    sensitive << ( sel_tmp3_fu_208_p2 );

    SC_METHOD(thread_sel_tmp7_fu_236_p2);
    sensitive << ( tmp_4_fu_162_p2 );

    SC_METHOD(thread_sel_tmp8_fu_242_p2);
    sensitive << ( tmp_5_fu_168_p2 );
    sensitive << ( sel_tmp7_fu_236_p2 );

    SC_METHOD(thread_shift_V_1_fu_196_p2);
    sensitive << ( new_exp_V_fu_90_p4 );

    SC_METHOD(thread_shift_V_2_fu_220_p3);
    sensitive << ( sel_tmp4_fu_214_p2 );
    sensitive << ( shift_V_fu_190_p2 );
    sensitive << ( shift_V_1_fu_196_p2 );

    SC_METHOD(thread_shift_V_3_fu_228_p3);
    sensitive << ( tmp_4_fu_162_p2 );
    sensitive << ( shift_V_2_fu_220_p3 );

    SC_METHOD(thread_shift_V_4_fu_248_p3);
    sensitive << ( shift_V_cast_cast_fu_114_p3 );
    sensitive << ( sel_tmp8_fu_242_p2 );
    sensitive << ( shift_V_3_fu_228_p3 );

    SC_METHOD(thread_shift_V_cast_cast_fu_114_p3);
    sensitive << ( tmp_fu_108_p2 );

    SC_METHOD(thread_shift_V_fu_190_p2);
    sensitive << ( new_exp_V_fu_90_p4 );

    SC_METHOD(thread_tmp_1_fu_122_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( new_exp_V_fu_90_p4 );

    SC_METHOD(thread_tmp_2_fu_128_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( new_exp_V_fu_90_p4 );
    sensitive << ( shift_V_cast_cast_fu_114_p3 );

    SC_METHOD(thread_tmp_3_fu_256_p3);
    sensitive << ( new_mant_V_fu_100_p1 );

    SC_METHOD(thread_tmp_4_fu_162_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_fu_122_p2 );
    sensitive << ( new_exp_V_fu_90_p4 );

    SC_METHOD(thread_tmp_5_fu_168_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_fu_122_p2 );
    sensitive << ( new_exp_V_fu_90_p4 );
    sensitive << ( shift_V_cast_cast_fu_114_p3 );

    SC_METHOD(thread_tmp_7_fu_148_p2);
    sensitive << ( tmp_1_fu_122_p2 );
    sensitive << ( tmp_2_fu_128_p2 );

    SC_METHOD(thread_tmp_9_fu_174_p4);
    sensitive << ( p_Val2_s_fu_78_p1 );

    SC_METHOD(thread_tmp_cast_fu_280_p1);
    sensitive << ( shift_V_4_fu_248_p3 );

    SC_METHOD(thread_tmp_fu_108_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( new_mant_V_fu_100_p1 );

    SC_METHOD(thread_tmp_s_fu_276_p1);
    sensitive << ( shift_V_4_fu_248_p3 );

    SC_METHOD(thread_xf_V_3_fu_300_p3);
    sensitive << ( icmp_fu_184_p2 );
    sensitive << ( r_V_cast_fu_290_p1 );
    sensitive << ( r_V_1_fu_294_p2 );

    SC_METHOD(thread_xf_V_4_fu_308_p2);
    sensitive << ( xf_V_3_fu_300_p3 );

    SC_METHOD(thread_xf_V_5_cast_fu_104_p1);
    sensitive << ( new_mant_V_fu_100_p1 );

    SC_METHOD(thread_xf_V_fu_264_p3);
    sensitive << ( tmp_4_fu_162_p2 );
    sensitive << ( xf_V_5_cast_fu_104_p1 );
    sensitive << ( tmp_3_fu_256_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "01";
    grp_int_57_div11_fu_73_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "operator_double_div11_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r, "(port)in_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_Repl2_2_reg_332, "p_Repl2_2_reg_332");
    sc_trace(mVcdFile, new_mant_V_fu_100_p1, "new_mant_V_fu_100_p1");
    sc_trace(mVcdFile, tmp_1_fu_122_p2, "tmp_1_fu_122_p2");
    sc_trace(mVcdFile, tmp_1_reg_342, "tmp_1_reg_342");
    sc_trace(mVcdFile, p_Repl2_1_fu_154_p3, "p_Repl2_1_fu_154_p3");
    sc_trace(mVcdFile, p_Repl2_1_reg_346, "p_Repl2_1_reg_346");
    sc_trace(mVcdFile, xf_V_4_fu_308_p2, "xf_V_4_fu_308_p2");
    sc_trace(mVcdFile, xf_V_4_reg_351, "xf_V_4_reg_351");
    sc_trace(mVcdFile, grp_int_57_div11_fu_73_ap_start, "grp_int_57_div11_fu_73_ap_start");
    sc_trace(mVcdFile, grp_int_57_div11_fu_73_ap_done, "grp_int_57_div11_fu_73_ap_done");
    sc_trace(mVcdFile, grp_int_57_div11_fu_73_ap_idle, "grp_int_57_div11_fu_73_ap_idle");
    sc_trace(mVcdFile, grp_int_57_div11_fu_73_ap_ready, "grp_int_57_div11_fu_73_ap_ready");
    sc_trace(mVcdFile, grp_int_57_div11_fu_73_ap_return, "grp_int_57_div11_fu_73_ap_return");
    sc_trace(mVcdFile, new_mant_V_1_fu_315_p1, "new_mant_V_1_fu_315_p1");
    sc_trace(mVcdFile, ap_phi_mux_p_Repl2_s_phi_fu_67_p4, "ap_phi_mux_p_Repl2_s_phi_fu_67_p4");
    sc_trace(mVcdFile, p_Repl2_s_reg_64, "p_Repl2_s_reg_64");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_block_state2_on_subcall_done, "ap_block_state2_on_subcall_done");
    sc_trace(mVcdFile, grp_int_57_div11_fu_73_ap_start_reg, "grp_int_57_div11_fu_73_ap_start_reg");
    sc_trace(mVcdFile, p_Val2_s_fu_78_p1, "p_Val2_s_fu_78_p1");
    sc_trace(mVcdFile, tmp_fu_108_p2, "tmp_fu_108_p2");
    sc_trace(mVcdFile, new_exp_V_fu_90_p4, "new_exp_V_fu_90_p4");
    sc_trace(mVcdFile, shift_V_cast_cast_fu_114_p3, "shift_V_cast_cast_fu_114_p3");
    sc_trace(mVcdFile, tmp_2_fu_128_p2, "tmp_2_fu_128_p2");
    sc_trace(mVcdFile, tmp_7_fu_148_p2, "tmp_7_fu_148_p2");
    sc_trace(mVcdFile, p_new_exp_V_1_fu_140_p3, "p_new_exp_V_1_fu_140_p3");
    sc_trace(mVcdFile, new_exp_V_1_fu_134_p2, "new_exp_V_1_fu_134_p2");
    sc_trace(mVcdFile, tmp_9_fu_174_p4, "tmp_9_fu_174_p4");
    sc_trace(mVcdFile, tmp_4_fu_162_p2, "tmp_4_fu_162_p2");
    sc_trace(mVcdFile, tmp_5_fu_168_p2, "tmp_5_fu_168_p2");
    sc_trace(mVcdFile, sel_tmp3_demorgan_fu_202_p2, "sel_tmp3_demorgan_fu_202_p2");
    sc_trace(mVcdFile, icmp_fu_184_p2, "icmp_fu_184_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_208_p2, "sel_tmp3_fu_208_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_214_p2, "sel_tmp4_fu_214_p2");
    sc_trace(mVcdFile, shift_V_fu_190_p2, "shift_V_fu_190_p2");
    sc_trace(mVcdFile, shift_V_1_fu_196_p2, "shift_V_1_fu_196_p2");
    sc_trace(mVcdFile, shift_V_2_fu_220_p3, "shift_V_2_fu_220_p3");
    sc_trace(mVcdFile, sel_tmp7_fu_236_p2, "sel_tmp7_fu_236_p2");
    sc_trace(mVcdFile, sel_tmp8_fu_242_p2, "sel_tmp8_fu_242_p2");
    sc_trace(mVcdFile, shift_V_3_fu_228_p3, "shift_V_3_fu_228_p3");
    sc_trace(mVcdFile, xf_V_5_cast_fu_104_p1, "xf_V_5_cast_fu_104_p1");
    sc_trace(mVcdFile, tmp_3_fu_256_p3, "tmp_3_fu_256_p3");
    sc_trace(mVcdFile, xf_V_fu_264_p3, "xf_V_fu_264_p3");
    sc_trace(mVcdFile, shift_V_4_fu_248_p3, "shift_V_4_fu_248_p3");
    sc_trace(mVcdFile, tmp_cast_fu_280_p1, "tmp_cast_fu_280_p1");
    sc_trace(mVcdFile, r_V_fu_284_p2, "r_V_fu_284_p2");
    sc_trace(mVcdFile, p_cast_fu_272_p1, "p_cast_fu_272_p1");
    sc_trace(mVcdFile, tmp_s_fu_276_p1, "tmp_s_fu_276_p1");
    sc_trace(mVcdFile, r_V_cast_fu_290_p1, "r_V_cast_fu_290_p1");
    sc_trace(mVcdFile, r_V_1_fu_294_p2, "r_V_1_fu_294_p2");
    sc_trace(mVcdFile, xf_V_3_fu_300_p3, "xf_V_3_fu_300_p3");
    sc_trace(mVcdFile, p_Result_s_fu_320_p4, "p_Result_s_fu_320_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("operator_double_div11.hdltvin.dat");
    mHdltvoutHandle.open("operator_double_div11.hdltvout.dat");
}

operator_double_div11::~operator_double_div11() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_int_57_div11_fu_73;
}

void operator_double_div11::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_int_57_div11_fu_73_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(tmp_1_fu_122_p2.read(), ap_const_lv1_0))) {
            grp_int_57_div11_fu_73_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_int_57_div11_fu_73_ap_ready.read())) {
            grp_int_57_div11_fu_73_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_1_fu_122_p2.read(), ap_const_lv1_1))) {
        p_Repl2_s_reg_64 = new_mant_V_fu_100_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_1_reg_342.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()))) {
        p_Repl2_s_reg_64 = new_mant_V_1_fu_315_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        p_Repl2_1_reg_346 = p_Repl2_1_fu_154_p3.read();
        p_Repl2_2_reg_332 = p_Val2_s_fu_78_p1.read().range(63, 63);
        tmp_1_reg_342 = tmp_1_fu_122_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_1_fu_122_p2.read(), ap_const_lv1_0))) {
        xf_V_4_reg_351 = xf_V_4_fu_308_p2.read();
    }
}

void operator_double_div11::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void operator_double_div11::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void operator_double_div11::thread_ap_block_state2_on_subcall_done() {
    ap_block_state2_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_int_57_div11_fu_73_ap_done.read()) && esl_seteq<1,1,1>(tmp_1_reg_342.read(), ap_const_lv1_0));
}

void operator_double_div11::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void operator_double_div11::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void operator_double_div11::thread_ap_phi_mux_p_Repl2_s_phi_fu_67_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_1_reg_342.read(), ap_const_lv1_0))) {
        ap_phi_mux_p_Repl2_s_phi_fu_67_p4 = new_mant_V_1_fu_315_p1.read();
    } else {
        ap_phi_mux_p_Repl2_s_phi_fu_67_p4 = p_Repl2_s_reg_64.read();
    }
}

void operator_double_div11::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void operator_double_div11::thread_ap_return() {
    ap_return = p_Result_s_fu_320_p4.read();
}

void operator_double_div11::thread_grp_int_57_div11_fu_73_ap_start() {
    grp_int_57_div11_fu_73_ap_start = grp_int_57_div11_fu_73_ap_start_reg.read();
}

void operator_double_div11::thread_icmp_fu_184_p2() {
    icmp_fu_184_p2 = (!tmp_9_fu_174_p4.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_174_p4.read() == ap_const_lv10_0);
}

void operator_double_div11::thread_new_exp_V_1_fu_134_p2() {
    new_exp_V_1_fu_134_p2 = (!new_exp_V_fu_90_p4.read().is_01() || !shift_V_cast_cast_fu_114_p3.read().is_01())? sc_lv<11>(): (sc_biguint<11>(new_exp_V_fu_90_p4.read()) - sc_biguint<11>(shift_V_cast_cast_fu_114_p3.read()));
}

void operator_double_div11::thread_new_exp_V_fu_90_p4() {
    new_exp_V_fu_90_p4 = p_Val2_s_fu_78_p1.read().range(62, 52);
}

void operator_double_div11::thread_new_mant_V_1_fu_315_p1() {
    new_mant_V_1_fu_315_p1 = grp_int_57_div11_fu_73_ap_return.read().range(52-1, 0);
}

void operator_double_div11::thread_new_mant_V_fu_100_p1() {
    new_mant_V_fu_100_p1 = p_Val2_s_fu_78_p1.read().range(52-1, 0);
}

void operator_double_div11::thread_p_Repl2_1_fu_154_p3() {
    p_Repl2_1_fu_154_p3 = (!tmp_7_fu_148_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_7_fu_148_p2.read()[0].to_bool())? p_new_exp_V_1_fu_140_p3.read(): new_exp_V_1_fu_134_p2.read());
}

void operator_double_div11::thread_p_Result_s_fu_320_p4() {
    p_Result_s_fu_320_p4 = esl_concat<12,52>(esl_concat<1,11>(p_Repl2_2_reg_332.read(), p_Repl2_1_reg_346.read()), ap_phi_mux_p_Repl2_s_phi_fu_67_p4.read());
}

void operator_double_div11::thread_p_Val2_s_fu_78_p1() {
    p_Val2_s_fu_78_p1 = in_r.read();
}

void operator_double_div11::thread_p_cast_fu_272_p1() {
    p_cast_fu_272_p1 = esl_zext<57,53>(xf_V_fu_264_p3.read());
}

void operator_double_div11::thread_p_new_exp_V_1_fu_140_p3() {
    p_new_exp_V_1_fu_140_p3 = (!tmp_1_fu_122_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_1_fu_122_p2.read()[0].to_bool())? ap_const_lv11_7FF: ap_const_lv11_0);
}

void operator_double_div11::thread_r_V_1_fu_294_p2() {
    r_V_1_fu_294_p2 = (!tmp_s_fu_276_p1.read().is_01())? sc_lv<57>(): p_cast_fu_272_p1.read() << (unsigned short)tmp_s_fu_276_p1.read().to_uint();
}

void operator_double_div11::thread_r_V_cast_fu_290_p1() {
    r_V_cast_fu_290_p1 = esl_zext<57,53>(r_V_fu_284_p2.read());
}

void operator_double_div11::thread_r_V_fu_284_p2() {
    r_V_fu_284_p2 = (!tmp_cast_fu_280_p1.read().is_01())? sc_lv<53>(): xf_V_fu_264_p3.read() >> (unsigned short)tmp_cast_fu_280_p1.read().to_uint();
}

void operator_double_div11::thread_sel_tmp3_demorgan_fu_202_p2() {
    sel_tmp3_demorgan_fu_202_p2 = (tmp_4_fu_162_p2.read() | tmp_5_fu_168_p2.read());
}

void operator_double_div11::thread_sel_tmp3_fu_208_p2() {
    sel_tmp3_fu_208_p2 = (sel_tmp3_demorgan_fu_202_p2.read() ^ ap_const_lv1_1);
}

void operator_double_div11::thread_sel_tmp4_fu_214_p2() {
    sel_tmp4_fu_214_p2 = (icmp_fu_184_p2.read() & sel_tmp3_fu_208_p2.read());
}

void operator_double_div11::thread_sel_tmp7_fu_236_p2() {
    sel_tmp7_fu_236_p2 = (tmp_4_fu_162_p2.read() ^ ap_const_lv1_1);
}

void operator_double_div11::thread_sel_tmp8_fu_242_p2() {
    sel_tmp8_fu_242_p2 = (tmp_5_fu_168_p2.read() & sel_tmp7_fu_236_p2.read());
}

void operator_double_div11::thread_shift_V_1_fu_196_p2() {
    shift_V_1_fu_196_p2 = (!ap_const_lv11_7FF.is_01() || !new_exp_V_fu_90_p4.read().is_01())? sc_lv<11>(): (sc_bigint<11>(ap_const_lv11_7FF) + sc_biguint<11>(new_exp_V_fu_90_p4.read()));
}

void operator_double_div11::thread_shift_V_2_fu_220_p3() {
    shift_V_2_fu_220_p3 = (!sel_tmp4_fu_214_p2.read()[0].is_01())? sc_lv<11>(): ((sel_tmp4_fu_214_p2.read()[0].to_bool())? shift_V_fu_190_p2.read(): shift_V_1_fu_196_p2.read());
}

void operator_double_div11::thread_shift_V_3_fu_228_p3() {
    shift_V_3_fu_228_p3 = (!tmp_4_fu_162_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_4_fu_162_p2.read()[0].to_bool())? ap_const_lv11_0: shift_V_2_fu_220_p3.read());
}

void operator_double_div11::thread_shift_V_4_fu_248_p3() {
    shift_V_4_fu_248_p3 = (!sel_tmp8_fu_242_p2.read()[0].is_01())? sc_lv<11>(): ((sel_tmp8_fu_242_p2.read()[0].to_bool())? shift_V_cast_cast_fu_114_p3.read(): shift_V_3_fu_228_p3.read());
}

void operator_double_div11::thread_shift_V_cast_cast_fu_114_p3() {
    shift_V_cast_cast_fu_114_p3 = (!tmp_fu_108_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_fu_108_p2.read()[0].to_bool())? ap_const_lv11_4: ap_const_lv11_3);
}

void operator_double_div11::thread_shift_V_fu_190_p2() {
    shift_V_fu_190_p2 = (!ap_const_lv11_1.is_01() || !new_exp_V_fu_90_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) - sc_biguint<11>(new_exp_V_fu_90_p4.read()));
}

void operator_double_div11::thread_tmp_1_fu_122_p2() {
    tmp_1_fu_122_p2 = (!new_exp_V_fu_90_p4.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<1>(): sc_lv<1>(new_exp_V_fu_90_p4.read() == ap_const_lv11_7FF);
}

void operator_double_div11::thread_tmp_2_fu_128_p2() {
    tmp_2_fu_128_p2 = (!shift_V_cast_cast_fu_114_p3.read().is_01() || !new_exp_V_fu_90_p4.read().is_01())? sc_lv<1>(): (sc_biguint<11>(shift_V_cast_cast_fu_114_p3.read()) > sc_biguint<11>(new_exp_V_fu_90_p4.read()));
}

void operator_double_div11::thread_tmp_3_fu_256_p3() {
    tmp_3_fu_256_p3 = esl_concat<1,52>(ap_const_lv1_1, new_mant_V_fu_100_p1.read());
}

void operator_double_div11::thread_tmp_4_fu_162_p2() {
    tmp_4_fu_162_p2 = (!new_exp_V_fu_90_p4.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(new_exp_V_fu_90_p4.read() == ap_const_lv11_0);
}

void operator_double_div11::thread_tmp_5_fu_168_p2() {
    tmp_5_fu_168_p2 = (!shift_V_cast_cast_fu_114_p3.read().is_01() || !new_exp_V_fu_90_p4.read().is_01())? sc_lv<1>(): (sc_biguint<11>(shift_V_cast_cast_fu_114_p3.read()) < sc_biguint<11>(new_exp_V_fu_90_p4.read()));
}

void operator_double_div11::thread_tmp_7_fu_148_p2() {
    tmp_7_fu_148_p2 = (tmp_1_fu_122_p2.read() | tmp_2_fu_128_p2.read());
}

void operator_double_div11::thread_tmp_9_fu_174_p4() {
    tmp_9_fu_174_p4 = p_Val2_s_fu_78_p1.read().range(62, 53);
}

void operator_double_div11::thread_tmp_cast_fu_280_p1() {
    tmp_cast_fu_280_p1 = esl_zext<53,11>(shift_V_4_fu_248_p3.read());
}

void operator_double_div11::thread_tmp_fu_108_p2() {
    tmp_fu_108_p2 = (!new_mant_V_fu_100_p1.read().is_01() || !ap_const_lv52_6000000000000.is_01())? sc_lv<1>(): (sc_biguint<52>(new_mant_V_fu_100_p1.read()) < sc_biguint<52>(ap_const_lv52_6000000000000));
}

void operator_double_div11::thread_tmp_s_fu_276_p1() {
    tmp_s_fu_276_p1 = esl_zext<57,11>(shift_V_4_fu_248_p3.read());
}

void operator_double_div11::thread_xf_V_3_fu_300_p3() {
    xf_V_3_fu_300_p3 = (!icmp_fu_184_p2.read()[0].is_01())? sc_lv<57>(): ((icmp_fu_184_p2.read()[0].to_bool())? r_V_cast_fu_290_p1.read(): r_V_1_fu_294_p2.read());
}

void operator_double_div11::thread_xf_V_4_fu_308_p2() {
    xf_V_4_fu_308_p2 = (!ap_const_lv57_5.is_01() || !xf_V_3_fu_300_p3.read().is_01())? sc_lv<57>(): (sc_biguint<57>(ap_const_lv57_5) + sc_biguint<57>(xf_V_3_fu_300_p3.read()));
}

void operator_double_div11::thread_xf_V_5_cast_fu_104_p1() {
    xf_V_5_cast_fu_104_p1 = esl_zext<53,52>(new_mant_V_fu_100_p1.read());
}

void operator_double_div11::thread_xf_V_fu_264_p3() {
    xf_V_fu_264_p3 = (!tmp_4_fu_162_p2.read()[0].is_01())? sc_lv<53>(): ((tmp_4_fu_162_p2.read()[0].to_bool())? xf_V_5_cast_fu_104_p1.read(): tmp_3_fu_256_p3.read());
}

void operator_double_div11::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

void operator_double_div11::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r\" :  \"" << in_r.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

