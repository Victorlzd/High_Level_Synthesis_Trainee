// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "operator_double_div11.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic operator_double_div11::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic operator_double_div11::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> operator_double_div11::ap_ST_fsm_state1 = "1";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state2 = "10";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state3 = "100";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state4 = "1000";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state5 = "10000";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state6 = "100000";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> operator_double_div11::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> operator_double_div11::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> operator_double_div11::ap_const_lv32_1 = "1";
const sc_lv<32> operator_double_div11::ap_const_lv32_2 = "10";
const sc_lv<32> operator_double_div11::ap_const_lv32_3 = "11";
const sc_lv<1> operator_double_div11::ap_const_lv1_0 = "0";
const sc_lv<1> operator_double_div11::ap_const_lv1_1 = "1";
const sc_lv<32> operator_double_div11::ap_const_lv32_9 = "1001";
const sc_lv<32> operator_double_div11::ap_const_lv32_A = "1010";
const sc_lv<32> operator_double_div11::ap_const_lv32_B = "1011";
const sc_lv<32> operator_double_div11::ap_const_lv32_C = "1100";
const sc_lv<32> operator_double_div11::ap_const_lv32_3F = "111111";
const sc_lv<32> operator_double_div11::ap_const_lv32_34 = "110100";
const sc_lv<32> operator_double_div11::ap_const_lv32_3E = "111110";
const sc_lv<52> operator_double_div11::ap_const_lv52_6000000000000 = "110000000000000000000000000000000000000000000000000";
const sc_lv<32> operator_double_div11::ap_const_lv32_35 = "110101";
const sc_lv<10> operator_double_div11::ap_const_lv10_0 = "0000000000";
const sc_lv<11> operator_double_div11::ap_const_lv11_4 = "100";
const sc_lv<11> operator_double_div11::ap_const_lv11_3 = "11";
const sc_lv<11> operator_double_div11::ap_const_lv11_0 = "00000000000";
const sc_lv<11> operator_double_div11::ap_const_lv11_1 = "1";
const sc_lv<11> operator_double_div11::ap_const_lv11_7FF = "11111111111";
const sc_lv<57> operator_double_div11::ap_const_lv57_5 = "101";
const bool operator_double_div11::ap_const_boolean_1 = true;

operator_double_div11::operator_double_div11(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_int_57_div11_fu_68 = new int_57_div11("grp_int_57_div11_fu_68");
    grp_int_57_div11_fu_68->ap_clk(ap_clk);
    grp_int_57_div11_fu_68->ap_rst(ap_rst);
    grp_int_57_div11_fu_68->ap_start(grp_int_57_div11_fu_68_ap_start);
    grp_int_57_div11_fu_68->ap_done(grp_int_57_div11_fu_68_ap_done);
    grp_int_57_div11_fu_68->ap_idle(grp_int_57_div11_fu_68_ap_idle);
    grp_int_57_div11_fu_68->ap_ready(grp_int_57_div11_fu_68_ap_ready);
    grp_int_57_div11_fu_68->in_V(xf_V_5_reg_425);
    grp_int_57_div11_fu_68->ap_return(grp_int_57_div11_fu_68_ap_return);
    operator_double_dbkb_U10 = new operator_double_dbkb<1,7,1,52,11,52>("operator_double_dbkb_U10");
    operator_double_dbkb_U10->clk(ap_clk);
    operator_double_dbkb_U10->reset(ap_rst);
    operator_double_dbkb_U10->din0(new_mant_V_1_reg_329);
    operator_double_dbkb_U10->din1(grp_fu_249_p1);
    operator_double_dbkb_U10->ce(ap_var_for_const0);
    operator_double_dbkb_U10->dout(grp_fu_249_p2);
    operator_double_dcud_U11 = new operator_double_dcud<1,7,0,57,11,57>("operator_double_dcud_U11");
    operator_double_dcud_U11->clk(ap_clk);
    operator_double_dcud_U11->reset(ap_rst);
    operator_double_dcud_U11->din0(grp_fu_254_p0);
    operator_double_dcud_U11->din1(grp_fu_254_p1);
    operator_double_dcud_U11->ce(ap_var_for_const0);
    operator_double_dcud_U11->dout(grp_fu_254_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_int_57_div11_fu_68_ap_done );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_int_57_div11_fu_68_ap_done );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return);
    sensitive << ( grp_int_57_div11_fu_68_ap_done );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( p_Result_1_fu_301_p4 );

    SC_METHOD(thread_grp_fu_249_p1);
    sensitive << ( shift_V_4_reg_378 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_254_p0);
    sensitive << ( new_mant_V_1_reg_329 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_254_p1);
    sensitive << ( shift_V_4_reg_378 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_int_57_div11_fu_68_ap_start);
    sensitive << ( grp_int_57_div11_fu_68_ap_start_reg );

    SC_METHOD(thread_icmp_fu_127_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_8_fu_117_p4 );

    SC_METHOD(thread_new_exp_V_fu_164_p2);
    sensitive << ( new_exp_V_1_reg_318 );
    sensitive << ( shift_V_cast_cast_reg_347 );

    SC_METHOD(thread_new_mant_V_1_fu_107_p1);
    sensitive << ( p_Val2_s_fu_85_p1 );

    SC_METHOD(thread_new_mant_V_fu_291_p1);
    sensitive << ( grp_int_57_div11_fu_68_ap_return );

    SC_METHOD(thread_p_Repl2_1_fu_232_p3);
    sensitive << ( tmp_6_fu_226_p2 );
    sensitive << ( p_s_fu_218_p3 );
    sensitive << ( new_exp_V_fu_164_p2 );

    SC_METHOD(thread_p_Repl2_s_fu_295_p3);
    sensitive << ( new_mant_V_1_reg_329 );
    sensitive << ( tmp_2_reg_384 );
    sensitive << ( new_mant_V_fu_291_p1 );

    SC_METHOD(thread_p_Result_1_fu_301_p4);
    sensitive << ( p_Repl2_2_reg_313 );
    sensitive << ( p_Repl2_1_reg_389 );
    sensitive << ( p_Repl2_s_fu_295_p3 );

    SC_METHOD(thread_p_Result_s_fu_269_p4);
    sensitive << ( xf_V_7_reg_419 );

    SC_METHOD(thread_p_Val2_s_fu_85_p1);
    sensitive << ( in_r );

    SC_METHOD(thread_p_s_fu_218_p3);
    sensitive << ( tmp_2_fu_213_p2 );

    SC_METHOD(thread_r_V_cast_fu_260_p1);
    sensitive << ( r_V_reg_409 );

    SC_METHOD(thread_sel_tmp2_demorgan_fu_168_p2);
    sensitive << ( tmp_3_reg_354 );
    sensitive << ( tmp_4_reg_362 );

    SC_METHOD(thread_sel_tmp2_fu_172_p2);
    sensitive << ( sel_tmp2_demorgan_fu_168_p2 );

    SC_METHOD(thread_sel_tmp3_fu_178_p2);
    sensitive << ( icmp_reg_341 );
    sensitive << ( sel_tmp2_fu_172_p2 );

    SC_METHOD(thread_sel_tmp6_fu_196_p2);
    sensitive << ( tmp_3_reg_354 );

    SC_METHOD(thread_sel_tmp7_fu_201_p2);
    sensitive << ( tmp_4_reg_362 );
    sensitive << ( sel_tmp6_fu_196_p2 );

    SC_METHOD(thread_shift_V_1_fu_155_p2);
    sensitive << ( new_exp_V_1_reg_318 );

    SC_METHOD(thread_shift_V_2_fu_183_p3);
    sensitive << ( shift_V_reg_368 );
    sensitive << ( shift_V_1_reg_373 );
    sensitive << ( sel_tmp3_fu_178_p2 );

    SC_METHOD(thread_shift_V_3_fu_189_p3);
    sensitive << ( tmp_3_reg_354 );
    sensitive << ( shift_V_2_fu_183_p3 );

    SC_METHOD(thread_shift_V_4_fu_206_p3);
    sensitive << ( shift_V_cast_cast_reg_347 );
    sensitive << ( sel_tmp7_fu_201_p2 );
    sensitive << ( shift_V_3_fu_189_p3 );

    SC_METHOD(thread_shift_V_cast_cast_fu_133_p3);
    sensitive << ( tmp_reg_336 );

    SC_METHOD(thread_shift_V_fu_150_p2);
    sensitive << ( new_exp_V_1_reg_318 );

    SC_METHOD(thread_tmp_1_fu_160_p2);
    sensitive << ( new_exp_V_1_reg_318 );
    sensitive << ( shift_V_cast_cast_reg_347 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_2_fu_213_p2);
    sensitive << ( new_exp_V_1_reg_318 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_3_fu_140_p2);
    sensitive << ( new_exp_V_1_reg_318 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_4_fu_145_p2);
    sensitive << ( new_exp_V_1_reg_318 );
    sensitive << ( shift_V_cast_cast_fu_133_p3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_6_fu_226_p2);
    sensitive << ( tmp_2_fu_213_p2 );
    sensitive << ( tmp_1_fu_160_p2 );

    SC_METHOD(thread_tmp_8_fu_117_p4);
    sensitive << ( p_Val2_s_fu_85_p1 );

    SC_METHOD(thread_tmp_fu_111_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( new_mant_V_1_fu_107_p1 );

    SC_METHOD(thread_xf_V_5_fu_284_p2);
    sensitive << ( xf_V_6_fu_278_p3 );

    SC_METHOD(thread_xf_V_6_fu_278_p3);
    sensitive << ( tmp_3_reg_354 );
    sensitive << ( xf_V_7_reg_419 );
    sensitive << ( p_Result_s_fu_269_p4 );

    SC_METHOD(thread_xf_V_7_fu_263_p3);
    sensitive << ( icmp_reg_341 );
    sensitive << ( r_V_1_reg_414 );
    sensitive << ( r_V_cast_fu_260_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_int_57_div11_fu_68_ap_done );
    sensitive << ( ap_CS_fsm_state13 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000001";
    grp_int_57_div11_fu_68_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "operator_double_div11_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r, "(port)in_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_Repl2_2_reg_313, "p_Repl2_2_reg_313");
    sc_trace(mVcdFile, new_exp_V_1_reg_318, "new_exp_V_1_reg_318");
    sc_trace(mVcdFile, new_mant_V_1_fu_107_p1, "new_mant_V_1_fu_107_p1");
    sc_trace(mVcdFile, new_mant_V_1_reg_329, "new_mant_V_1_reg_329");
    sc_trace(mVcdFile, tmp_fu_111_p2, "tmp_fu_111_p2");
    sc_trace(mVcdFile, tmp_reg_336, "tmp_reg_336");
    sc_trace(mVcdFile, icmp_fu_127_p2, "icmp_fu_127_p2");
    sc_trace(mVcdFile, icmp_reg_341, "icmp_reg_341");
    sc_trace(mVcdFile, shift_V_cast_cast_fu_133_p3, "shift_V_cast_cast_fu_133_p3");
    sc_trace(mVcdFile, shift_V_cast_cast_reg_347, "shift_V_cast_cast_reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_3_fu_140_p2, "tmp_3_fu_140_p2");
    sc_trace(mVcdFile, tmp_3_reg_354, "tmp_3_reg_354");
    sc_trace(mVcdFile, tmp_4_fu_145_p2, "tmp_4_fu_145_p2");
    sc_trace(mVcdFile, tmp_4_reg_362, "tmp_4_reg_362");
    sc_trace(mVcdFile, shift_V_fu_150_p2, "shift_V_fu_150_p2");
    sc_trace(mVcdFile, shift_V_reg_368, "shift_V_reg_368");
    sc_trace(mVcdFile, shift_V_1_fu_155_p2, "shift_V_1_fu_155_p2");
    sc_trace(mVcdFile, shift_V_1_reg_373, "shift_V_1_reg_373");
    sc_trace(mVcdFile, shift_V_4_fu_206_p3, "shift_V_4_fu_206_p3");
    sc_trace(mVcdFile, shift_V_4_reg_378, "shift_V_4_reg_378");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_2_fu_213_p2, "tmp_2_fu_213_p2");
    sc_trace(mVcdFile, tmp_2_reg_384, "tmp_2_reg_384");
    sc_trace(mVcdFile, p_Repl2_1_fu_232_p3, "p_Repl2_1_fu_232_p3");
    sc_trace(mVcdFile, p_Repl2_1_reg_389, "p_Repl2_1_reg_389");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_249_p2, "grp_fu_249_p2");
    sc_trace(mVcdFile, r_V_reg_409, "r_V_reg_409");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_254_p2, "grp_fu_254_p2");
    sc_trace(mVcdFile, r_V_1_reg_414, "r_V_1_reg_414");
    sc_trace(mVcdFile, xf_V_7_fu_263_p3, "xf_V_7_fu_263_p3");
    sc_trace(mVcdFile, xf_V_7_reg_419, "xf_V_7_reg_419");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, xf_V_5_fu_284_p2, "xf_V_5_fu_284_p2");
    sc_trace(mVcdFile, xf_V_5_reg_425, "xf_V_5_reg_425");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_int_57_div11_fu_68_ap_start, "grp_int_57_div11_fu_68_ap_start");
    sc_trace(mVcdFile, grp_int_57_div11_fu_68_ap_done, "grp_int_57_div11_fu_68_ap_done");
    sc_trace(mVcdFile, grp_int_57_div11_fu_68_ap_idle, "grp_int_57_div11_fu_68_ap_idle");
    sc_trace(mVcdFile, grp_int_57_div11_fu_68_ap_ready, "grp_int_57_div11_fu_68_ap_ready");
    sc_trace(mVcdFile, grp_int_57_div11_fu_68_ap_return, "grp_int_57_div11_fu_68_ap_return");
    sc_trace(mVcdFile, grp_int_57_div11_fu_68_ap_start_reg, "grp_int_57_div11_fu_68_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, p_Val2_s_fu_85_p1, "p_Val2_s_fu_85_p1");
    sc_trace(mVcdFile, tmp_8_fu_117_p4, "tmp_8_fu_117_p4");
    sc_trace(mVcdFile, sel_tmp2_demorgan_fu_168_p2, "sel_tmp2_demorgan_fu_168_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_172_p2, "sel_tmp2_fu_172_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_178_p2, "sel_tmp3_fu_178_p2");
    sc_trace(mVcdFile, shift_V_2_fu_183_p3, "shift_V_2_fu_183_p3");
    sc_trace(mVcdFile, sel_tmp6_fu_196_p2, "sel_tmp6_fu_196_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_201_p2, "sel_tmp7_fu_201_p2");
    sc_trace(mVcdFile, shift_V_3_fu_189_p3, "shift_V_3_fu_189_p3");
    sc_trace(mVcdFile, tmp_1_fu_160_p2, "tmp_1_fu_160_p2");
    sc_trace(mVcdFile, tmp_6_fu_226_p2, "tmp_6_fu_226_p2");
    sc_trace(mVcdFile, p_s_fu_218_p3, "p_s_fu_218_p3");
    sc_trace(mVcdFile, new_exp_V_fu_164_p2, "new_exp_V_fu_164_p2");
    sc_trace(mVcdFile, grp_fu_249_p1, "grp_fu_249_p1");
    sc_trace(mVcdFile, grp_fu_254_p0, "grp_fu_254_p0");
    sc_trace(mVcdFile, grp_fu_254_p1, "grp_fu_254_p1");
    sc_trace(mVcdFile, r_V_cast_fu_260_p1, "r_V_cast_fu_260_p1");
    sc_trace(mVcdFile, p_Result_s_fu_269_p4, "p_Result_s_fu_269_p4");
    sc_trace(mVcdFile, xf_V_6_fu_278_p3, "xf_V_6_fu_278_p3");
    sc_trace(mVcdFile, new_mant_V_fu_291_p1, "new_mant_V_fu_291_p1");
    sc_trace(mVcdFile, p_Repl2_s_fu_295_p3, "p_Repl2_s_fu_295_p3");
    sc_trace(mVcdFile, p_Result_1_fu_301_p4, "p_Result_1_fu_301_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("operator_double_div11.hdltvin.dat");
    mHdltvoutHandle.open("operator_double_div11.hdltvout.dat");
}

operator_double_div11::~operator_double_div11() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_int_57_div11_fu_68;
    delete operator_double_dbkb_U10;
    delete operator_double_dcud_U11;
}

void operator_double_div11::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void operator_double_div11::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_int_57_div11_fu_68_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            grp_int_57_div11_fu_68_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_int_57_div11_fu_68_ap_ready.read())) {
            grp_int_57_div11_fu_68_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        icmp_reg_341 = icmp_fu_127_p2.read();
        new_exp_V_1_reg_318 = p_Val2_s_fu_85_p1.read().range(62, 52);
        new_mant_V_1_reg_329 = new_mant_V_1_fu_107_p1.read();
        p_Repl2_2_reg_313 = p_Val2_s_fu_85_p1.read().range(63, 63);
        tmp_reg_336 = tmp_fu_111_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Repl2_1_reg_389 = p_Repl2_1_fu_232_p3.read();
        shift_V_4_reg_378 = shift_V_4_fu_206_p3.read();
        tmp_2_reg_384 = tmp_2_fu_213_p2.read();
    }
    if ((esl_seteq<1,1,1>(icmp_reg_341.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        r_V_1_reg_414 = grp_fu_254_p2.read();
    }
    if ((esl_seteq<1,1,1>(icmp_reg_341.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        r_V_reg_409 = grp_fu_249_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        shift_V_1_reg_373 = shift_V_1_fu_155_p2.read();
        shift_V_cast_cast_reg_347 = shift_V_cast_cast_fu_133_p3.read();
        shift_V_reg_368 = shift_V_fu_150_p2.read();
        tmp_3_reg_354 = tmp_3_fu_140_p2.read();
        tmp_4_reg_362 = tmp_4_fu_145_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        xf_V_5_reg_425 = xf_V_5_fu_284_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        xf_V_7_reg_419 = xf_V_7_fu_263_p3.read();
    }
}

void operator_double_div11::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void operator_double_div11::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void operator_double_div11::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void operator_double_div11::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void operator_double_div11::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void operator_double_div11::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void operator_double_div11::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void operator_double_div11::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void operator_double_div11::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(grp_int_57_div11_fu_68_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void operator_double_div11::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void operator_double_div11::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(grp_int_57_div11_fu_68_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void operator_double_div11::thread_ap_return() {
    ap_return = p_Result_1_fu_301_p4.read();
}

void operator_double_div11::thread_grp_fu_249_p1() {
    grp_fu_249_p1 = esl_zext<52,11>(shift_V_4_reg_378.read());
}

void operator_double_div11::thread_grp_fu_254_p0() {
    grp_fu_254_p0 = esl_zext<57,52>(new_mant_V_1_reg_329.read());
}

void operator_double_div11::thread_grp_fu_254_p1() {
    grp_fu_254_p1 = esl_zext<57,11>(shift_V_4_reg_378.read());
}

void operator_double_div11::thread_grp_int_57_div11_fu_68_ap_start() {
    grp_int_57_div11_fu_68_ap_start = grp_int_57_div11_fu_68_ap_start_reg.read();
}

void operator_double_div11::thread_icmp_fu_127_p2() {
    icmp_fu_127_p2 = (!tmp_8_fu_117_p4.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_8_fu_117_p4.read() == ap_const_lv10_0);
}

void operator_double_div11::thread_new_exp_V_fu_164_p2() {
    new_exp_V_fu_164_p2 = (!new_exp_V_1_reg_318.read().is_01() || !shift_V_cast_cast_reg_347.read().is_01())? sc_lv<11>(): (sc_biguint<11>(new_exp_V_1_reg_318.read()) - sc_biguint<11>(shift_V_cast_cast_reg_347.read()));
}

void operator_double_div11::thread_new_mant_V_1_fu_107_p1() {
    new_mant_V_1_fu_107_p1 = p_Val2_s_fu_85_p1.read().range(52-1, 0);
}

void operator_double_div11::thread_new_mant_V_fu_291_p1() {
    new_mant_V_fu_291_p1 = grp_int_57_div11_fu_68_ap_return.read().range(52-1, 0);
}

void operator_double_div11::thread_p_Repl2_1_fu_232_p3() {
    p_Repl2_1_fu_232_p3 = (!tmp_6_fu_226_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_6_fu_226_p2.read()[0].to_bool())? p_s_fu_218_p3.read(): new_exp_V_fu_164_p2.read());
}

void operator_double_div11::thread_p_Repl2_s_fu_295_p3() {
    p_Repl2_s_fu_295_p3 = (!tmp_2_reg_384.read()[0].is_01())? sc_lv<52>(): ((tmp_2_reg_384.read()[0].to_bool())? new_mant_V_1_reg_329.read(): new_mant_V_fu_291_p1.read());
}

void operator_double_div11::thread_p_Result_1_fu_301_p4() {
    p_Result_1_fu_301_p4 = esl_concat<12,52>(esl_concat<1,11>(p_Repl2_2_reg_313.read(), p_Repl2_1_reg_389.read()), p_Repl2_s_fu_295_p3.read());
}

void operator_double_div11::thread_p_Result_s_fu_269_p4() {
    p_Result_s_fu_269_p4 = esl_bitset<57,57,32,1>(xf_V_7_reg_419.read(), ap_const_lv32_34, ap_const_lv1_1);
}

void operator_double_div11::thread_p_Val2_s_fu_85_p1() {
    p_Val2_s_fu_85_p1 = in_r.read();
}

void operator_double_div11::thread_p_s_fu_218_p3() {
    p_s_fu_218_p3 = (!tmp_2_fu_213_p2.read()[0].is_01())? sc_lv<11>(): ((tmp_2_fu_213_p2.read()[0].to_bool())? ap_const_lv11_7FF: ap_const_lv11_0);
}

void operator_double_div11::thread_r_V_cast_fu_260_p1() {
    r_V_cast_fu_260_p1 = esl_zext<57,52>(r_V_reg_409.read());
}

void operator_double_div11::thread_sel_tmp2_demorgan_fu_168_p2() {
    sel_tmp2_demorgan_fu_168_p2 = (tmp_3_reg_354.read() | tmp_4_reg_362.read());
}

void operator_double_div11::thread_sel_tmp2_fu_172_p2() {
    sel_tmp2_fu_172_p2 = (sel_tmp2_demorgan_fu_168_p2.read() ^ ap_const_lv1_1);
}

void operator_double_div11::thread_sel_tmp3_fu_178_p2() {
    sel_tmp3_fu_178_p2 = (icmp_reg_341.read() & sel_tmp2_fu_172_p2.read());
}

void operator_double_div11::thread_sel_tmp6_fu_196_p2() {
    sel_tmp6_fu_196_p2 = (tmp_3_reg_354.read() ^ ap_const_lv1_1);
}

void operator_double_div11::thread_sel_tmp7_fu_201_p2() {
    sel_tmp7_fu_201_p2 = (tmp_4_reg_362.read() & sel_tmp6_fu_196_p2.read());
}

void operator_double_div11::thread_shift_V_1_fu_155_p2() {
    shift_V_1_fu_155_p2 = (!ap_const_lv11_7FF.is_01() || !new_exp_V_1_reg_318.read().is_01())? sc_lv<11>(): (sc_bigint<11>(ap_const_lv11_7FF) + sc_biguint<11>(new_exp_V_1_reg_318.read()));
}

void operator_double_div11::thread_shift_V_2_fu_183_p3() {
    shift_V_2_fu_183_p3 = (!sel_tmp3_fu_178_p2.read()[0].is_01())? sc_lv<11>(): ((sel_tmp3_fu_178_p2.read()[0].to_bool())? shift_V_reg_368.read(): shift_V_1_reg_373.read());
}

void operator_double_div11::thread_shift_V_3_fu_189_p3() {
    shift_V_3_fu_189_p3 = (!tmp_3_reg_354.read()[0].is_01())? sc_lv<11>(): ((tmp_3_reg_354.read()[0].to_bool())? ap_const_lv11_0: shift_V_2_fu_183_p3.read());
}

void operator_double_div11::thread_shift_V_4_fu_206_p3() {
    shift_V_4_fu_206_p3 = (!sel_tmp7_fu_201_p2.read()[0].is_01())? sc_lv<11>(): ((sel_tmp7_fu_201_p2.read()[0].to_bool())? shift_V_cast_cast_reg_347.read(): shift_V_3_fu_189_p3.read());
}

void operator_double_div11::thread_shift_V_cast_cast_fu_133_p3() {
    shift_V_cast_cast_fu_133_p3 = (!tmp_reg_336.read()[0].is_01())? sc_lv<11>(): ((tmp_reg_336.read()[0].to_bool())? ap_const_lv11_4: ap_const_lv11_3);
}

void operator_double_div11::thread_shift_V_fu_150_p2() {
    shift_V_fu_150_p2 = (!ap_const_lv11_1.is_01() || !new_exp_V_1_reg_318.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) - sc_biguint<11>(new_exp_V_1_reg_318.read()));
}

void operator_double_div11::thread_tmp_1_fu_160_p2() {
    tmp_1_fu_160_p2 = (!shift_V_cast_cast_reg_347.read().is_01() || !new_exp_V_1_reg_318.read().is_01())? sc_lv<1>(): (sc_biguint<11>(shift_V_cast_cast_reg_347.read()) > sc_biguint<11>(new_exp_V_1_reg_318.read()));
}

void operator_double_div11::thread_tmp_2_fu_213_p2() {
    tmp_2_fu_213_p2 = (!new_exp_V_1_reg_318.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<1>(): sc_lv<1>(new_exp_V_1_reg_318.read() == ap_const_lv11_7FF);
}

void operator_double_div11::thread_tmp_3_fu_140_p2() {
    tmp_3_fu_140_p2 = (!new_exp_V_1_reg_318.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(new_exp_V_1_reg_318.read() == ap_const_lv11_0);
}

void operator_double_div11::thread_tmp_4_fu_145_p2() {
    tmp_4_fu_145_p2 = (!shift_V_cast_cast_fu_133_p3.read().is_01() || !new_exp_V_1_reg_318.read().is_01())? sc_lv<1>(): (sc_biguint<11>(shift_V_cast_cast_fu_133_p3.read()) < sc_biguint<11>(new_exp_V_1_reg_318.read()));
}

void operator_double_div11::thread_tmp_6_fu_226_p2() {
    tmp_6_fu_226_p2 = (tmp_2_fu_213_p2.read() | tmp_1_fu_160_p2.read());
}

void operator_double_div11::thread_tmp_8_fu_117_p4() {
    tmp_8_fu_117_p4 = p_Val2_s_fu_85_p1.read().range(62, 53);
}

void operator_double_div11::thread_tmp_fu_111_p2() {
    tmp_fu_111_p2 = (!new_mant_V_1_fu_107_p1.read().is_01() || !ap_const_lv52_6000000000000.is_01())? sc_lv<1>(): (sc_biguint<52>(new_mant_V_1_fu_107_p1.read()) < sc_biguint<52>(ap_const_lv52_6000000000000));
}

void operator_double_div11::thread_xf_V_5_fu_284_p2() {
    xf_V_5_fu_284_p2 = (!ap_const_lv57_5.is_01() || !xf_V_6_fu_278_p3.read().is_01())? sc_lv<57>(): (sc_biguint<57>(ap_const_lv57_5) + sc_biguint<57>(xf_V_6_fu_278_p3.read()));
}

void operator_double_div11::thread_xf_V_6_fu_278_p3() {
    xf_V_6_fu_278_p3 = (!tmp_3_reg_354.read()[0].is_01())? sc_lv<57>(): ((tmp_3_reg_354.read()[0].to_bool())? xf_V_7_reg_419.read(): p_Result_s_fu_269_p4.read());
}

void operator_double_div11::thread_xf_V_7_fu_263_p3() {
    xf_V_7_fu_263_p3 = (!icmp_reg_341.read()[0].is_01())? sc_lv<57>(): ((icmp_reg_341.read()[0].to_bool())? r_V_cast_fu_260_p1.read(): r_V_1_reg_414.read());
}

void operator_double_div11::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(grp_int_57_div11_fu_68_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXX";
            break;
    }
}

void operator_double_div11::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r\" :  \"" << in_r.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

