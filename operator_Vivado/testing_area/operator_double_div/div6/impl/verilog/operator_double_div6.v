// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="operator_double_div6,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.344000,HLS_SYN_LAT=52,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1471,HLS_SYN_LUT=1599,HLS_VERSION=2018_2}" *)

module operator_double_div6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_state3 = 39'd4;
parameter    ap_ST_fsm_state4 = 39'd8;
parameter    ap_ST_fsm_state5 = 39'd16;
parameter    ap_ST_fsm_state6 = 39'd32;
parameter    ap_ST_fsm_state7 = 39'd64;
parameter    ap_ST_fsm_state8 = 39'd128;
parameter    ap_ST_fsm_state9 = 39'd256;
parameter    ap_ST_fsm_state10 = 39'd512;
parameter    ap_ST_fsm_state11 = 39'd1024;
parameter    ap_ST_fsm_state12 = 39'd2048;
parameter    ap_ST_fsm_state13 = 39'd4096;
parameter    ap_ST_fsm_state14 = 39'd8192;
parameter    ap_ST_fsm_state15 = 39'd16384;
parameter    ap_ST_fsm_state16 = 39'd32768;
parameter    ap_ST_fsm_state17 = 39'd65536;
parameter    ap_ST_fsm_state18 = 39'd131072;
parameter    ap_ST_fsm_state19 = 39'd262144;
parameter    ap_ST_fsm_state20 = 39'd524288;
parameter    ap_ST_fsm_state21 = 39'd1048576;
parameter    ap_ST_fsm_state22 = 39'd2097152;
parameter    ap_ST_fsm_state23 = 39'd4194304;
parameter    ap_ST_fsm_state24 = 39'd8388608;
parameter    ap_ST_fsm_state25 = 39'd16777216;
parameter    ap_ST_fsm_state26 = 39'd33554432;
parameter    ap_ST_fsm_state27 = 39'd67108864;
parameter    ap_ST_fsm_state28 = 39'd134217728;
parameter    ap_ST_fsm_state29 = 39'd268435456;
parameter    ap_ST_fsm_state30 = 39'd536870912;
parameter    ap_ST_fsm_state31 = 39'd1073741824;
parameter    ap_ST_fsm_state32 = 39'd2147483648;
parameter    ap_ST_fsm_state33 = 39'd4294967296;
parameter    ap_ST_fsm_state34 = 39'd8589934592;
parameter    ap_ST_fsm_state35 = 39'd17179869184;
parameter    ap_ST_fsm_state36 = 39'd34359738368;
parameter    ap_ST_fsm_state37 = 39'd68719476736;
parameter    ap_ST_fsm_state38 = 39'd137438953472;
parameter    ap_ST_fsm_state39 = 39'd274877906944;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] in_r;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] reg_141;
wire    ap_CS_fsm_state13;
wire    grp_lut_div3_chunk_fu_118_ap_idle;
wire    grp_lut_div3_chunk_fu_118_ap_ready;
wire    grp_lut_div3_chunk_fu_118_ap_done;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
reg   [0:0] p_Repl2_2_reg_578;
wire   [10:0] new_exp_V_1_fu_158_p4;
reg   [10:0] new_exp_V_1_reg_583;
wire   [51:0] new_mant_V_1_fu_168_p1;
reg   [51:0] new_mant_V_1_reg_592;
wire   [0:0] tmp_fu_172_p3;
reg   [0:0] tmp_reg_599;
wire   [10:0] p_cast_cast_fu_180_p3;
reg   [10:0] p_cast_cast_reg_604;
wire   [0:0] tmp_3_fu_188_p2;
reg   [0:0] tmp_3_reg_610;
wire   [0:0] tmp_4_fu_194_p2;
reg   [0:0] tmp_4_reg_618;
wire   [10:0] shift_V_1_fu_200_p2;
reg   [10:0] shift_V_1_reg_624;
wire   [0:0] tmp_6_fu_221_p2;
reg   [0:0] tmp_6_reg_629;
wire    ap_CS_fsm_state2;
wire   [10:0] shift_V_4_fu_272_p3;
reg   [10:0] shift_V_4_reg_634;
wire   [0:0] tmp_5_fu_279_p2;
reg   [0:0] tmp_5_reg_640;
wire   [10:0] p_Repl2_1_fu_298_p3;
reg   [10:0] p_Repl2_1_reg_645;
wire    ap_CS_fsm_state3;
wire   [51:0] grp_fu_315_p2;
reg   [51:0] r_V_15_reg_665;
wire    ap_CS_fsm_state9;
wire   [55:0] grp_fu_320_p2;
reg   [55:0] r_V_16_reg_670;
wire   [55:0] xf_V_7_fu_329_p3;
reg   [55:0] xf_V_7_reg_675;
wire    ap_CS_fsm_state10;
reg   [3:0] d_chunk_V_reg_681;
wire    ap_CS_fsm_state11;
reg   [3:0] d_chunk_V_1_reg_686;
reg   [3:0] d_chunk_V_2_reg_691;
reg   [3:0] d_chunk_V_3_reg_696;
reg   [3:0] d_chunk_V_4_reg_701;
reg   [3:0] d_chunk_V_5_reg_706;
reg   [3:0] d_chunk_V_6_reg_711;
reg   [3:0] d_chunk_V_7_reg_716;
reg   [3:0] d_chunk_V_8_reg_721;
reg   [3:0] d_chunk_V_9_reg_726;
reg   [3:0] d_chunk_V_10_reg_731;
reg   [3:0] d_chunk_V_11_reg_736;
reg   [3:0] d_chunk_V_12_reg_741;
wire   [3:0] d_chunk_V_13_fu_486_p1;
reg   [3:0] d_chunk_V_13_reg_746;
wire   [3:0] grp_lut_div3_chunk_fu_118_ap_return_0;
wire   [1:0] grp_lut_div3_chunk_fu_118_ap_return_1;
reg   [3:0] call_ret2_i_i_reg_751_0;
reg   [3:0] call_ret3_i_i_reg_756_0;
reg   [3:0] call_ret4_i_i_reg_761_0;
reg   [3:0] call_ret5_i_i_reg_766_0;
reg   [3:0] call_ret6_i_i_reg_771_0;
reg   [3:0] call_ret7_i_i_reg_776_0;
reg   [3:0] call_ret8_i_i_reg_781_0;
reg   [3:0] call_ret9_i_i_reg_786_0;
reg   [3:0] call_ret10_i_i_reg_791_0;
reg   [3:0] call_ret11_i_i_reg_796_0;
reg   [3:0] call_ret12_i_i_reg_801_0;
reg   [3:0] call_ret13_i_i_reg_806_0;
wire    grp_lut_div3_chunk_fu_118_ap_start;
reg   [3:0] grp_lut_div3_chunk_fu_118_d_V;
reg   [1:0] grp_lut_div3_chunk_fu_118_r_in_V;
reg    grp_lut_div3_chunk_fu_118_ap_start_reg;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire   [63:0] p_Val2_s_fu_146_p1;
wire   [0:0] sel_tmp_fu_231_p2;
wire   [0:0] sel_tmp1_fu_236_p2;
wire   [10:0] shift_V_cast_cast_fu_214_p3;
wire   [0:0] sel_tmp5_demorgan_fu_248_p2;
wire   [0:0] sel_tmp5_fu_252_p2;
wire   [0:0] sel_tmp6_fu_258_p2;
wire   [10:0] shift_V_fu_226_p2;
wire   [10:0] shift_V_2_fu_241_p3;
wire   [10:0] shift_V_3_fu_264_p3;
wire   [0:0] tmp_1_fu_206_p2;
wire   [0:0] tmp_2_fu_292_p2;
wire   [10:0] p_1_fu_284_p3;
wire   [10:0] new_exp_V_fu_210_p2;
wire   [51:0] grp_fu_315_p1;
wire   [55:0] grp_fu_320_p0;
wire   [55:0] grp_fu_320_p1;
wire   [55:0] r_V_13_cast_fu_326_p1;
reg   [55:0] p_Result_s_fu_335_p4;
wire   [55:0] xf_V_5_fu_344_p3;
wire   [55:0] xf_V_8_fu_350_p2;
wire   [51:0] new_mant_V_fu_530_p14;
wire   [51:0] p_Repl2_s_fu_560_p3;
wire   [63:0] p_Result_1_fu_566_p4;
reg   [38:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 39'd1;
#0 grp_lut_div3_chunk_fu_118_ap_start_reg = 1'b0;
end

lut_div3_chunk grp_lut_div3_chunk_fu_118(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lut_div3_chunk_fu_118_ap_start),
    .ap_done(grp_lut_div3_chunk_fu_118_ap_done),
    .ap_idle(grp_lut_div3_chunk_fu_118_ap_idle),
    .ap_ready(grp_lut_div3_chunk_fu_118_ap_ready),
    .d_V(grp_lut_div3_chunk_fu_118_d_V),
    .r_in_V(grp_lut_div3_chunk_fu_118_r_in_V),
    .ap_return_0(grp_lut_div3_chunk_fu_118_ap_return_0),
    .ap_return_1(grp_lut_div3_chunk_fu_118_ap_return_1)
);

operator_double_dbkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 52 ))
operator_double_dbkb_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(new_mant_V_1_reg_592),
    .din1(grp_fu_315_p1),
    .ce(1'b1),
    .dout(grp_fu_315_p2)
);

operator_double_dcud #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 56 ))
operator_double_dcud_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_320_p0),
    .din1(grp_fu_320_p1),
    .ce(1'b1),
    .dout(grp_fu_320_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lut_div3_chunk_fu_118_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
            grp_lut_div3_chunk_fu_118_ap_start_reg <= 1'b1;
        end else if ((grp_lut_div3_chunk_fu_118_ap_ready == 1'b1)) begin
            grp_lut_div3_chunk_fu_118_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
        call_ret10_i_i_reg_791_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        call_ret11_i_i_reg_796_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
        call_ret12_i_i_reg_801_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        call_ret13_i_i_reg_806_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        call_ret2_i_i_reg_751_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        call_ret3_i_i_reg_756_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        call_ret4_i_i_reg_761_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        call_ret5_i_i_reg_766_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        call_ret6_i_i_reg_771_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        call_ret7_i_i_reg_776_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        call_ret8_i_i_reg_781_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        call_ret9_i_i_reg_786_0 <= grp_lut_div3_chunk_fu_118_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        d_chunk_V_10_reg_731 <= {{xf_V_8_fu_350_p2[15:12]}};
        d_chunk_V_11_reg_736 <= {{xf_V_8_fu_350_p2[11:8]}};
        d_chunk_V_12_reg_741 <= {{xf_V_8_fu_350_p2[7:4]}};
        d_chunk_V_13_reg_746 <= d_chunk_V_13_fu_486_p1;
        d_chunk_V_1_reg_686 <= {{xf_V_8_fu_350_p2[51:48]}};
        d_chunk_V_2_reg_691 <= {{xf_V_8_fu_350_p2[47:44]}};
        d_chunk_V_3_reg_696 <= {{xf_V_8_fu_350_p2[43:40]}};
        d_chunk_V_4_reg_701 <= {{xf_V_8_fu_350_p2[39:36]}};
        d_chunk_V_5_reg_706 <= {{xf_V_8_fu_350_p2[35:32]}};
        d_chunk_V_6_reg_711 <= {{xf_V_8_fu_350_p2[31:28]}};
        d_chunk_V_7_reg_716 <= {{xf_V_8_fu_350_p2[27:24]}};
        d_chunk_V_8_reg_721 <= {{xf_V_8_fu_350_p2[23:20]}};
        d_chunk_V_9_reg_726 <= {{xf_V_8_fu_350_p2[19:16]}};
        d_chunk_V_reg_681 <= {{xf_V_8_fu_350_p2[55:52]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        new_exp_V_1_reg_583 <= {{p_Val2_s_fu_146_p1[62:52]}};
        new_mant_V_1_reg_592 <= new_mant_V_1_fu_168_p1;
        p_Repl2_2_reg_578 <= p_Val2_s_fu_146_p1[32'd63];
        p_cast_cast_reg_604[0] <= p_cast_cast_fu_180_p3[0];
        shift_V_1_reg_624 <= shift_V_1_fu_200_p2;
        tmp_3_reg_610 <= tmp_3_fu_188_p2;
        tmp_4_reg_618 <= tmp_4_fu_194_p2;
        tmp_reg_599 <= p_Val2_s_fu_146_p1[32'd51];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Repl2_1_reg_645 <= p_Repl2_1_fu_298_p3;
        shift_V_4_reg_634 <= shift_V_4_fu_272_p3;
        tmp_5_reg_640 <= tmp_5_fu_279_p2;
        tmp_6_reg_629 <= tmp_6_fu_221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_6_reg_629 == 1'd1))) begin
        r_V_15_reg_665 <= grp_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_6_reg_629 == 1'd0))) begin
        r_V_16_reg_670 <= grp_fu_320_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state35)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)))) begin
        reg_141 <= grp_lut_div3_chunk_fu_118_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        xf_V_7_reg_675 <= xf_V_7_fu_329_p3;
    end
end

always @ (*) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_13_reg_746;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_12_reg_741;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_11_reg_736;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_10_reg_731;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_9_reg_726;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_8_reg_721;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_7_reg_716;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_6_reg_711;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_5_reg_706;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_4_reg_701;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_3_reg_696;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_2_reg_691;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_1_reg_686;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_lut_div3_chunk_fu_118_d_V = d_chunk_V_reg_681;
    end else begin
        grp_lut_div3_chunk_fu_118_d_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_lut_div3_chunk_fu_118_r_in_V = reg_141;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_lut_div3_chunk_fu_118_r_in_V = 2'd0;
    end else begin
        grp_lut_div3_chunk_fu_118_r_in_V = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((grp_lut_div3_chunk_fu_118_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = p_Result_1_fu_566_p4;

assign d_chunk_V_13_fu_486_p1 = xf_V_8_fu_350_p2[3:0];

assign grp_fu_315_p1 = shift_V_4_reg_634;

assign grp_fu_320_p0 = new_mant_V_1_reg_592;

assign grp_fu_320_p1 = shift_V_4_reg_634;

assign grp_lut_div3_chunk_fu_118_ap_start = grp_lut_div3_chunk_fu_118_ap_start_reg;

assign new_exp_V_1_fu_158_p4 = {{p_Val2_s_fu_146_p1[62:52]}};

assign new_exp_V_fu_210_p2 = (new_exp_V_1_reg_583 - p_cast_cast_reg_604);

assign new_mant_V_1_fu_168_p1 = p_Val2_s_fu_146_p1[51:0];

assign new_mant_V_fu_530_p14 = {{{{{{{{{{{{{call_ret2_i_i_reg_751_0}, {call_ret3_i_i_reg_756_0}}, {call_ret4_i_i_reg_761_0}}, {call_ret5_i_i_reg_766_0}}, {call_ret6_i_i_reg_771_0}}, {call_ret7_i_i_reg_776_0}}, {call_ret8_i_i_reg_781_0}}, {call_ret9_i_i_reg_786_0}}, {call_ret10_i_i_reg_791_0}}, {call_ret11_i_i_reg_796_0}}, {call_ret12_i_i_reg_801_0}}, {call_ret13_i_i_reg_806_0}}, {grp_lut_div3_chunk_fu_118_ap_return_0}};

assign p_1_fu_284_p3 = ((tmp_5_fu_279_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign p_Repl2_1_fu_298_p3 = ((tmp_2_fu_292_p2[0:0] === 1'b1) ? p_1_fu_284_p3 : new_exp_V_fu_210_p2);

assign p_Repl2_s_fu_560_p3 = ((tmp_5_reg_640[0:0] === 1'b1) ? new_mant_V_1_reg_592 : new_mant_V_fu_530_p14);

assign p_Result_1_fu_566_p4 = {{{p_Repl2_2_reg_578}, {p_Repl2_1_reg_645}}, {p_Repl2_s_fu_560_p3}};

always @ (*) begin
    p_Result_s_fu_335_p4 = xf_V_7_reg_675;
    p_Result_s_fu_335_p4[32'd52] = |(1'd1);
end

assign p_Val2_s_fu_146_p1 = in_r;

assign p_cast_cast_fu_180_p3 = ((tmp_fu_172_p3[0:0] === 1'b1) ? 11'd2 : 11'd3);

assign r_V_13_cast_fu_326_p1 = r_V_15_reg_665;

assign sel_tmp1_fu_236_p2 = (tmp_4_reg_618 & sel_tmp_fu_231_p2);

assign sel_tmp5_demorgan_fu_248_p2 = (tmp_4_reg_618 | tmp_3_reg_610);

assign sel_tmp5_fu_252_p2 = (sel_tmp5_demorgan_fu_248_p2 ^ 1'd1);

assign sel_tmp6_fu_258_p2 = (tmp_6_fu_221_p2 & sel_tmp5_fu_252_p2);

assign sel_tmp_fu_231_p2 = (tmp_3_reg_610 ^ 1'd1);

assign shift_V_1_fu_200_p2 = ($signed(11'd2046) + $signed(new_exp_V_1_fu_158_p4));

assign shift_V_2_fu_241_p3 = ((sel_tmp1_fu_236_p2[0:0] === 1'b1) ? shift_V_cast_cast_fu_214_p3 : shift_V_1_reg_624);

assign shift_V_3_fu_264_p3 = ((sel_tmp6_fu_258_p2[0:0] === 1'b1) ? shift_V_fu_226_p2 : shift_V_2_fu_241_p3);

assign shift_V_4_fu_272_p3 = ((tmp_3_reg_610[0:0] === 1'b1) ? 11'd1 : shift_V_3_fu_264_p3);

assign shift_V_cast_cast_fu_214_p3 = ((tmp_reg_599[0:0] === 1'b1) ? 11'd1 : 11'd2);

assign shift_V_fu_226_p2 = (11'd2 - new_exp_V_1_reg_583);

assign tmp_1_fu_206_p2 = ((p_cast_cast_reg_604 > new_exp_V_1_reg_583) ? 1'b1 : 1'b0);

assign tmp_2_fu_292_p2 = (tmp_5_fu_279_p2 | tmp_1_fu_206_p2);

assign tmp_3_fu_188_p2 = ((new_exp_V_1_fu_158_p4 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_4_fu_194_p2 = ((p_cast_cast_fu_180_p3 < new_exp_V_1_fu_158_p4) ? 1'b1 : 1'b0);

assign tmp_5_fu_279_p2 = ((new_exp_V_1_reg_583 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_6_fu_221_p2 = ((new_exp_V_1_reg_583 < 11'd3) ? 1'b1 : 1'b0);

assign tmp_fu_172_p3 = p_Val2_s_fu_146_p1[32'd51];

assign xf_V_5_fu_344_p3 = ((tmp_3_reg_610[0:0] === 1'b1) ? xf_V_7_reg_675 : p_Result_s_fu_335_p4);

assign xf_V_7_fu_329_p3 = ((tmp_6_reg_629[0:0] === 1'b1) ? r_V_13_cast_fu_326_p1 : r_V_16_reg_670);

assign xf_V_8_fu_350_p2 = (56'd1 + xf_V_5_fu_344_p3);

always @ (posedge ap_clk) begin
    p_cast_cast_reg_604[10:1] <= 10'b0000000001;
end

endmodule //operator_double_div6
