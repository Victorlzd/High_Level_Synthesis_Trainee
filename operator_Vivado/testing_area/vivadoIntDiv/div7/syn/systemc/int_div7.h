// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _int_div7_HH_
#define _int_div7_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "int_div7_mul_32s_bkb.h"

namespace ap_rtl {

struct int_div7 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > a;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    int_div7(sc_module_name name);
    SC_HAS_PROCESS(int_div7);

    ~int_div7();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    int_div7_mul_32s_bkb<1,7,32,34,65>* int_div7_mul_32s_bkb_U1;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_4_reg_104;
    sc_signal< sc_lv<65> > grp_fu_36_p2;
    sc_signal< sc_lv<65> > mul_reg_110;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<30> > tmp_6_reg_115;
    sc_signal< sc_lv<65> > neg_mul_fu_60_p2;
    sc_signal< sc_lv<65> > neg_mul_reg_120;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > tmp_2_fu_78_p1;
    sc_signal< sc_lv<32> > tmp_2_reg_125;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > neg_ti_fu_88_p2;
    sc_signal< sc_lv<32> > neg_ti_reg_130;
    sc_signal< sc_lv<34> > grp_fu_36_p1;
    sc_signal< sc_lv<32> > tmp_4_fu_42_p1;
    sc_signal< sc_lv<30> > tmp_5_fu_65_p4;
    sc_signal< sc_lv<32> > tmp_1_fu_74_p1;
    sc_signal< sc_lv<32> > tmp_3_fu_81_p3;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<65> ap_const_lv65_124924925;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<65> ap_const_lv65_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_36_p1();
    void thread_neg_mul_fu_60_p2();
    void thread_neg_ti_fu_88_p2();
    void thread_tmp_1_fu_74_p1();
    void thread_tmp_2_fu_78_p1();
    void thread_tmp_3_fu_81_p3();
    void thread_tmp_4_fu_42_p1();
    void thread_tmp_5_fu_65_p4();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
