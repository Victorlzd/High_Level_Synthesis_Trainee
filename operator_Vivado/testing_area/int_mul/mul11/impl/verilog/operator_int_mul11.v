// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="operator_int_mul11,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.785000,HLS_SYN_LAT=8,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=273,HLS_SYN_LUT=361,HLS_VERSION=2018_2}" *)

module operator_int_mul11 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_r;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] grp_lut_mul11_chunk_fu_84_ap_return;
reg   [9:0] reg_184;
wire    ap_CS_fsm_state2;
wire    grp_lut_mul11_chunk_fu_84_ap_idle;
wire    grp_lut_mul11_chunk_fu_84_ap_ready;
wire    grp_lut_mul11_chunk_fu_84_ap_done;
wire    grp_lut_mul11_chunk_fu_109_ap_idle;
wire    grp_lut_mul11_chunk_fu_109_ap_ready;
wire    grp_lut_mul11_chunk_fu_109_ap_done;
reg    ap_block_state2_on_subcall_done;
wire    ap_CS_fsm_state3;
wire    grp_lut_mul11_chunk_fu_134_ap_idle;
wire    grp_lut_mul11_chunk_fu_134_ap_ready;
wire    grp_lut_mul11_chunk_fu_134_ap_done;
wire    grp_lut_mul11_chunk_fu_159_ap_idle;
wire    grp_lut_mul11_chunk_fu_159_ap_ready;
wire    grp_lut_mul11_chunk_fu_159_ap_done;
reg    ap_block_state3_on_subcall_done;
wire   [9:0] grp_lut_mul11_chunk_fu_109_ap_return;
reg   [9:0] reg_188;
wire   [5:0] tmp_1_fu_192_p1;
reg   [5:0] tmp_1_reg_337;
reg   [5:0] p_Result_i_reg_342;
reg   [5:0] p_Result_1_i_reg_347;
reg   [5:0] p_Result_2_i_reg_352;
reg   [5:0] p_Result_3_i_reg_357;
reg   [1:0] p_Result_4_i_fu_238_p4;
reg   [1:0] p_Result_4_i_reg_362;
wire   [5:0] this_assign_5_i_fu_248_p1;
reg   [5:0] this_assign_5_i_reg_367;
wire   [7:0] tmp_2_fu_276_p1;
reg   [7:0] tmp_2_reg_372;
wire   [28:0] tmp1_fu_280_p2;
reg   [28:0] tmp1_reg_377;
wire   [1:0] tmp_3_fu_286_p1;
reg   [1:0] tmp_3_reg_382;
wire   [28:0] tmp_fu_309_p2;
reg   [28:0] tmp_reg_387;
wire    ap_CS_fsm_state4;
wire   [31:0] tmp2_fu_323_p2;
reg   [31:0] tmp2_reg_392;
wire    grp_lut_mul11_chunk_fu_84_ap_start;
reg   [5:0] grp_lut_mul11_chunk_fu_84_d_V;
wire    grp_lut_mul11_chunk_fu_109_ap_start;
reg   [5:0] grp_lut_mul11_chunk_fu_109_d_V;
wire    grp_lut_mul11_chunk_fu_134_ap_start;
wire   [9:0] grp_lut_mul11_chunk_fu_134_ap_return;
wire    grp_lut_mul11_chunk_fu_159_ap_start;
wire   [9:0] grp_lut_mul11_chunk_fu_159_ap_return;
reg    grp_lut_mul11_chunk_fu_84_ap_start_reg;
reg    grp_lut_mul11_chunk_fu_109_ap_start_reg;
reg    grp_lut_mul11_chunk_fu_134_ap_start_reg;
reg    grp_lut_mul11_chunk_fu_159_ap_start_reg;
wire   [21:0] r_V_1_fu_252_p3;
wire   [27:0] r_V_2_fu_264_p3;
wire   [28:0] r_V_2_cast_fu_272_p1;
wire   [28:0] r_V_1_cast_fu_260_p1;
wire   [15:0] r_V_fu_290_p3;
wire   [28:0] r_V_cast_fu_298_p1;
wire   [31:0] r_V_3_fu_302_p3;
wire   [31:0] tmp3_fu_314_p4;
wire    ap_CS_fsm_state5;
wire   [31:0] tmp_cast_fu_329_p1;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_lut_mul11_chunk_fu_84_ap_start_reg = 1'b0;
#0 grp_lut_mul11_chunk_fu_109_ap_start_reg = 1'b0;
#0 grp_lut_mul11_chunk_fu_134_ap_start_reg = 1'b0;
#0 grp_lut_mul11_chunk_fu_159_ap_start_reg = 1'b0;
end

lut_mul11_chunk grp_lut_mul11_chunk_fu_84(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lut_mul11_chunk_fu_84_ap_start),
    .ap_done(grp_lut_mul11_chunk_fu_84_ap_done),
    .ap_idle(grp_lut_mul11_chunk_fu_84_ap_idle),
    .ap_ready(grp_lut_mul11_chunk_fu_84_ap_ready),
    .d_V(grp_lut_mul11_chunk_fu_84_d_V),
    .ap_return(grp_lut_mul11_chunk_fu_84_ap_return)
);

lut_mul11_chunk grp_lut_mul11_chunk_fu_109(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lut_mul11_chunk_fu_109_ap_start),
    .ap_done(grp_lut_mul11_chunk_fu_109_ap_done),
    .ap_idle(grp_lut_mul11_chunk_fu_109_ap_idle),
    .ap_ready(grp_lut_mul11_chunk_fu_109_ap_ready),
    .d_V(grp_lut_mul11_chunk_fu_109_d_V),
    .ap_return(grp_lut_mul11_chunk_fu_109_ap_return)
);

lut_mul11_chunk grp_lut_mul11_chunk_fu_134(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lut_mul11_chunk_fu_134_ap_start),
    .ap_done(grp_lut_mul11_chunk_fu_134_ap_done),
    .ap_idle(grp_lut_mul11_chunk_fu_134_ap_idle),
    .ap_ready(grp_lut_mul11_chunk_fu_134_ap_ready),
    .d_V(p_Result_3_i_reg_357),
    .ap_return(grp_lut_mul11_chunk_fu_134_ap_return)
);

lut_mul11_chunk grp_lut_mul11_chunk_fu_159(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lut_mul11_chunk_fu_159_ap_start),
    .ap_done(grp_lut_mul11_chunk_fu_159_ap_done),
    .ap_idle(grp_lut_mul11_chunk_fu_159_ap_idle),
    .ap_ready(grp_lut_mul11_chunk_fu_159_ap_ready),
    .d_V(this_assign_5_i_reg_367),
    .ap_return(grp_lut_mul11_chunk_fu_159_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lut_mul11_chunk_fu_109_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            grp_lut_mul11_chunk_fu_109_ap_start_reg <= 1'b1;
        end else if ((grp_lut_mul11_chunk_fu_109_ap_ready == 1'b1)) begin
            grp_lut_mul11_chunk_fu_109_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lut_mul11_chunk_fu_134_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_lut_mul11_chunk_fu_134_ap_start_reg <= 1'b1;
        end else if ((grp_lut_mul11_chunk_fu_134_ap_ready == 1'b1)) begin
            grp_lut_mul11_chunk_fu_134_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lut_mul11_chunk_fu_159_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_lut_mul11_chunk_fu_159_ap_start_reg <= 1'b1;
        end else if ((grp_lut_mul11_chunk_fu_159_ap_ready == 1'b1)) begin
            grp_lut_mul11_chunk_fu_159_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lut_mul11_chunk_fu_84_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            grp_lut_mul11_chunk_fu_84_ap_start_reg <= 1'b1;
        end else if ((grp_lut_mul11_chunk_fu_84_ap_ready == 1'b1)) begin
            grp_lut_mul11_chunk_fu_84_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Result_1_i_reg_347 <= {{in_r[17:12]}};
        p_Result_2_i_reg_352 <= {{in_r[23:18]}};
        p_Result_3_i_reg_357 <= {{in_r[29:24]}};
        p_Result_4_i_reg_362 <= p_Result_4_i_fu_238_p4;
        p_Result_i_reg_342 <= {{in_r[11:6]}};
        tmp_1_reg_337 <= tmp_1_fu_192_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_184 <= grp_lut_mul11_chunk_fu_84_ap_return;
        reg_188 <= grp_lut_mul11_chunk_fu_109_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        this_assign_5_i_reg_367[1 : 0] <= this_assign_5_i_fu_248_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp1_reg_377[28 : 12] <= tmp1_fu_280_p2[28 : 12];
        tmp_2_reg_372 <= tmp_2_fu_276_p1;
        tmp_3_reg_382 <= tmp_3_fu_286_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp2_reg_392 <= tmp2_fu_323_p2;
        tmp_reg_387[28 : 6] <= tmp_fu_309_p2[28 : 6];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_lut_mul11_chunk_fu_109_d_V = p_Result_i_reg_342;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_lut_mul11_chunk_fu_109_d_V = p_Result_2_i_reg_352;
    end else begin
        grp_lut_mul11_chunk_fu_109_d_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_lut_mul11_chunk_fu_84_d_V = tmp_1_reg_337;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_lut_mul11_chunk_fu_84_d_V = p_Result_1_i_reg_347;
    end else begin
        grp_lut_mul11_chunk_fu_84_d_V = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_lut_mul11_chunk_fu_109_ap_done == 1'b0) | (grp_lut_mul11_chunk_fu_84_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state3_on_subcall_done = ((grp_lut_mul11_chunk_fu_159_ap_done == 1'b0) | (grp_lut_mul11_chunk_fu_134_ap_done == 1'b0) | (grp_lut_mul11_chunk_fu_109_ap_done == 1'b0) | (grp_lut_mul11_chunk_fu_84_ap_done == 1'b0));
end

assign ap_return = (tmp_cast_fu_329_p1 + tmp2_reg_392);

assign grp_lut_mul11_chunk_fu_109_ap_start = grp_lut_mul11_chunk_fu_109_ap_start_reg;

assign grp_lut_mul11_chunk_fu_134_ap_start = grp_lut_mul11_chunk_fu_134_ap_start_reg;

assign grp_lut_mul11_chunk_fu_159_ap_start = grp_lut_mul11_chunk_fu_159_ap_start_reg;

assign grp_lut_mul11_chunk_fu_84_ap_start = grp_lut_mul11_chunk_fu_84_ap_start_reg;

integer ap_tvar_int_0;

always @ (in_r) begin
    for (ap_tvar_int_0 = 2 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 30) begin
            p_Result_4_i_fu_238_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_4_i_fu_238_p4[ap_tvar_int_0] = in_r[31 - ap_tvar_int_0];
        end
    end
end

assign r_V_1_cast_fu_260_p1 = r_V_1_fu_252_p3;

assign r_V_1_fu_252_p3 = {{reg_184}, {12'd0}};

assign r_V_2_cast_fu_272_p1 = r_V_2_fu_264_p3;

assign r_V_2_fu_264_p3 = {{reg_188}, {18'd0}};

assign r_V_3_fu_302_p3 = {{tmp_2_reg_372}, {24'd0}};

assign r_V_cast_fu_298_p1 = r_V_fu_290_p3;

assign r_V_fu_290_p3 = {{reg_188}, {6'd0}};

assign this_assign_5_i_fu_248_p1 = p_Result_4_i_reg_362;

assign tmp1_fu_280_p2 = (r_V_2_cast_fu_272_p1 + r_V_1_cast_fu_260_p1);

assign tmp2_fu_323_p2 = (r_V_3_fu_302_p3 + tmp3_fu_314_p4);

assign tmp3_fu_314_p4 = {{{tmp_3_reg_382}, {20'd0}}, {reg_184}};

assign tmp_1_fu_192_p1 = in_r[5:0];

assign tmp_2_fu_276_p1 = grp_lut_mul11_chunk_fu_134_ap_return[7:0];

assign tmp_3_fu_286_p1 = grp_lut_mul11_chunk_fu_159_ap_return[1:0];

assign tmp_cast_fu_329_p1 = tmp_reg_387;

assign tmp_fu_309_p2 = (r_V_cast_fu_298_p1 + tmp1_reg_377);

always @ (posedge ap_clk) begin
    this_assign_5_i_reg_367[5:2] <= 4'b0000;
    tmp1_reg_377[11:0] <= 12'b000000000000;
    tmp_reg_387[5:0] <= 6'b000000;
end

endmodule //operator_int_mul11
