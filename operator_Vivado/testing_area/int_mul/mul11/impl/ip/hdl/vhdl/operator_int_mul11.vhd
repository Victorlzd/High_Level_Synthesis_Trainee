-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity operator_int_mul11 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of operator_int_mul11 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "operator_int_mul11,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.785000,HLS_SYN_LAT=8,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=273,HLS_SYN_LUT=361,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_lut_mul11_chunk_fu_84_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_184 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_lut_mul11_chunk_fu_84_ap_idle : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_84_ap_ready : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_84_ap_done : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_109_ap_idle : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_109_ap_ready : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_109_ap_done : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_lut_mul11_chunk_fu_134_ap_idle : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_134_ap_ready : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_134_ap_done : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_159_ap_idle : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_159_ap_ready : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_159_ap_done : STD_LOGIC;
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal grp_lut_mul11_chunk_fu_109_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_188 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_fu_192_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_337 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_i_reg_342 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_1_i_reg_347 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_2_i_reg_352 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_3_i_reg_357 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_4_i_fu_238_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_4_i_reg_362 : STD_LOGIC_VECTOR (1 downto 0);
    signal this_assign_5_i_fu_248_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal this_assign_5_i_reg_367 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_276_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_reg_372 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_280_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp1_reg_377 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_3_fu_286_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_reg_382 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_309_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_reg_387 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp2_fu_323_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_392 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lut_mul11_chunk_fu_84_ap_start : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_84_d_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_lut_mul11_chunk_fu_109_ap_start : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_109_d_V : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_lut_mul11_chunk_fu_134_ap_start : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_134_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_lut_mul11_chunk_fu_159_ap_start : STD_LOGIC;
    signal grp_lut_mul11_chunk_fu_159_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_lut_mul11_chunk_fu_84_ap_start_reg : STD_LOGIC := '0';
    signal grp_lut_mul11_chunk_fu_109_ap_start_reg : STD_LOGIC := '0';
    signal grp_lut_mul11_chunk_fu_134_ap_start_reg : STD_LOGIC := '0';
    signal grp_lut_mul11_chunk_fu_159_ap_start_reg : STD_LOGIC := '0';
    signal r_V_1_fu_252_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_2_fu_264_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_2_cast_fu_272_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_1_cast_fu_260_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_fu_290_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_cast_fu_298_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_3_fu_302_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_314_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_cast_fu_329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);

    component lut_mul11_chunk IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        d_V : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    grp_lut_mul11_chunk_fu_84 : component lut_mul11_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul11_chunk_fu_84_ap_start,
        ap_done => grp_lut_mul11_chunk_fu_84_ap_done,
        ap_idle => grp_lut_mul11_chunk_fu_84_ap_idle,
        ap_ready => grp_lut_mul11_chunk_fu_84_ap_ready,
        d_V => grp_lut_mul11_chunk_fu_84_d_V,
        ap_return => grp_lut_mul11_chunk_fu_84_ap_return);

    grp_lut_mul11_chunk_fu_109 : component lut_mul11_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul11_chunk_fu_109_ap_start,
        ap_done => grp_lut_mul11_chunk_fu_109_ap_done,
        ap_idle => grp_lut_mul11_chunk_fu_109_ap_idle,
        ap_ready => grp_lut_mul11_chunk_fu_109_ap_ready,
        d_V => grp_lut_mul11_chunk_fu_109_d_V,
        ap_return => grp_lut_mul11_chunk_fu_109_ap_return);

    grp_lut_mul11_chunk_fu_134 : component lut_mul11_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul11_chunk_fu_134_ap_start,
        ap_done => grp_lut_mul11_chunk_fu_134_ap_done,
        ap_idle => grp_lut_mul11_chunk_fu_134_ap_idle,
        ap_ready => grp_lut_mul11_chunk_fu_134_ap_ready,
        d_V => p_Result_3_i_reg_357,
        ap_return => grp_lut_mul11_chunk_fu_134_ap_return);

    grp_lut_mul11_chunk_fu_159 : component lut_mul11_chunk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lut_mul11_chunk_fu_159_ap_start,
        ap_done => grp_lut_mul11_chunk_fu_159_ap_done,
        ap_idle => grp_lut_mul11_chunk_fu_159_ap_idle,
        ap_ready => grp_lut_mul11_chunk_fu_159_ap_ready,
        d_V => this_assign_5_i_reg_367,
        ap_return => grp_lut_mul11_chunk_fu_159_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_lut_mul11_chunk_fu_109_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul11_chunk_fu_109_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_lut_mul11_chunk_fu_109_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul11_chunk_fu_109_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul11_chunk_fu_109_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul11_chunk_fu_134_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul11_chunk_fu_134_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_lut_mul11_chunk_fu_134_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul11_chunk_fu_134_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul11_chunk_fu_134_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul11_chunk_fu_159_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul11_chunk_fu_159_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_lut_mul11_chunk_fu_159_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul11_chunk_fu_159_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul11_chunk_fu_159_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lut_mul11_chunk_fu_84_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lut_mul11_chunk_fu_84_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_lut_mul11_chunk_fu_84_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lut_mul11_chunk_fu_84_ap_ready = ap_const_logic_1)) then 
                    grp_lut_mul11_chunk_fu_84_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                p_Result_1_i_reg_347 <= in_r(17 downto 12);
                p_Result_2_i_reg_352 <= in_r(23 downto 18);
                p_Result_3_i_reg_357 <= in_r(29 downto 24);
                p_Result_4_i_reg_362 <= p_Result_4_i_fu_238_p4;
                p_Result_i_reg_342 <= in_r(11 downto 6);
                tmp_1_reg_337 <= tmp_1_fu_192_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then
                reg_184 <= grp_lut_mul11_chunk_fu_84_ap_return;
                reg_188 <= grp_lut_mul11_chunk_fu_109_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    this_assign_5_i_reg_367(1 downto 0) <= this_assign_5_i_fu_248_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    tmp1_reg_377(28 downto 12) <= tmp1_fu_280_p2(28 downto 12);
                tmp_2_reg_372 <= tmp_2_fu_276_p1;
                tmp_3_reg_382 <= tmp_3_fu_286_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp2_reg_392 <= tmp2_fu_323_p2;
                    tmp_reg_387(28 downto 6) <= tmp_fu_309_p2(28 downto 6);
            end if;
        end if;
    end process;
    this_assign_5_i_reg_367(5 downto 2) <= "0000";
    tmp1_reg_377(11 downto 0) <= "000000000000";
    tmp_reg_387(5 downto 0) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_block_state2_on_subcall_done_assign_proc : process(grp_lut_mul11_chunk_fu_84_ap_done, grp_lut_mul11_chunk_fu_109_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_lut_mul11_chunk_fu_109_ap_done = ap_const_logic_0) or (grp_lut_mul11_chunk_fu_84_ap_done = ap_const_logic_0));
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(grp_lut_mul11_chunk_fu_84_ap_done, grp_lut_mul11_chunk_fu_109_ap_done, grp_lut_mul11_chunk_fu_134_ap_done, grp_lut_mul11_chunk_fu_159_ap_done)
    begin
                ap_block_state3_on_subcall_done <= ((grp_lut_mul11_chunk_fu_159_ap_done = ap_const_logic_0) or (grp_lut_mul11_chunk_fu_134_ap_done = ap_const_logic_0) or (grp_lut_mul11_chunk_fu_109_ap_done = ap_const_logic_0) or (grp_lut_mul11_chunk_fu_84_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= std_logic_vector(unsigned(tmp_cast_fu_329_p1) + unsigned(tmp2_reg_392));
    grp_lut_mul11_chunk_fu_109_ap_start <= grp_lut_mul11_chunk_fu_109_ap_start_reg;

    grp_lut_mul11_chunk_fu_109_d_V_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, p_Result_i_reg_342, p_Result_2_i_reg_352)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_lut_mul11_chunk_fu_109_d_V <= p_Result_i_reg_342;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_mul11_chunk_fu_109_d_V <= p_Result_2_i_reg_352;
        else 
            grp_lut_mul11_chunk_fu_109_d_V <= "XXXXXX";
        end if; 
    end process;

    grp_lut_mul11_chunk_fu_134_ap_start <= grp_lut_mul11_chunk_fu_134_ap_start_reg;
    grp_lut_mul11_chunk_fu_159_ap_start <= grp_lut_mul11_chunk_fu_159_ap_start_reg;
    grp_lut_mul11_chunk_fu_84_ap_start <= grp_lut_mul11_chunk_fu_84_ap_start_reg;

    grp_lut_mul11_chunk_fu_84_d_V_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, tmp_1_reg_337, p_Result_1_i_reg_347)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_lut_mul11_chunk_fu_84_d_V <= tmp_1_reg_337;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_lut_mul11_chunk_fu_84_d_V <= p_Result_1_i_reg_347;
        else 
            grp_lut_mul11_chunk_fu_84_d_V <= "XXXXXX";
        end if; 
    end process;

    
    p_Result_4_i_fu_238_p4_proc : process(in_r)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_4_i_fu_238_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_1E(5 - 1 downto 0);
        v0_cpy := in_r;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1E(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_4_i_fu_238_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_4_i_fu_238_p4_i) := in_r(32-1-p_Result_4_i_fu_238_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_4_i_fu_238_p4 <= resvalue(2-1 downto 0);
    end process;

    r_V_1_cast_fu_260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_1_fu_252_p3),29));
    r_V_1_fu_252_p3 <= (reg_184 & ap_const_lv12_0);
    r_V_2_cast_fu_272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_2_fu_264_p3),29));
    r_V_2_fu_264_p3 <= (reg_188 & ap_const_lv18_0);
    r_V_3_fu_302_p3 <= (tmp_2_reg_372 & ap_const_lv24_0);
    r_V_cast_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_290_p3),29));
    r_V_fu_290_p3 <= (reg_188 & ap_const_lv6_0);
    this_assign_5_i_fu_248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_i_reg_362),6));
    tmp1_fu_280_p2 <= std_logic_vector(unsigned(r_V_2_cast_fu_272_p1) + unsigned(r_V_1_cast_fu_260_p1));
    tmp2_fu_323_p2 <= std_logic_vector(unsigned(r_V_3_fu_302_p3) + unsigned(tmp3_fu_314_p4));
    tmp3_fu_314_p4 <= ((tmp_3_reg_382 & ap_const_lv20_0) & reg_184);
    tmp_1_fu_192_p1 <= in_r(6 - 1 downto 0);
    tmp_2_fu_276_p1 <= grp_lut_mul11_chunk_fu_134_ap_return(8 - 1 downto 0);
    tmp_3_fu_286_p1 <= grp_lut_mul11_chunk_fu_159_ap_return(2 - 1 downto 0);
    tmp_cast_fu_329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_387),32));
    tmp_fu_309_p2 <= std_logic_vector(unsigned(r_V_cast_fu_298_p1) + unsigned(tmp1_reg_377));
end behav;
