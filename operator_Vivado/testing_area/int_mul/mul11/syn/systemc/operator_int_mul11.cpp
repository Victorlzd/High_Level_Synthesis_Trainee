// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "operator_int_mul11.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic operator_int_mul11::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic operator_int_mul11::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> operator_int_mul11::ap_ST_fsm_state1 = "1";
const sc_lv<5> operator_int_mul11::ap_ST_fsm_state2 = "10";
const sc_lv<5> operator_int_mul11::ap_ST_fsm_state3 = "100";
const sc_lv<5> operator_int_mul11::ap_ST_fsm_state4 = "1000";
const sc_lv<5> operator_int_mul11::ap_ST_fsm_state5 = "10000";
const sc_lv<32> operator_int_mul11::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> operator_int_mul11::ap_const_lv32_1 = "1";
const bool operator_int_mul11::ap_const_boolean_0 = false;
const sc_lv<32> operator_int_mul11::ap_const_lv32_2 = "10";
const sc_lv<32> operator_int_mul11::ap_const_lv32_3 = "11";
const sc_lv<32> operator_int_mul11::ap_const_lv32_6 = "110";
const sc_lv<32> operator_int_mul11::ap_const_lv32_B = "1011";
const sc_lv<32> operator_int_mul11::ap_const_lv32_C = "1100";
const sc_lv<32> operator_int_mul11::ap_const_lv32_11 = "10001";
const sc_lv<32> operator_int_mul11::ap_const_lv32_12 = "10010";
const sc_lv<32> operator_int_mul11::ap_const_lv32_17 = "10111";
const sc_lv<32> operator_int_mul11::ap_const_lv32_18 = "11000";
const sc_lv<32> operator_int_mul11::ap_const_lv32_1D = "11101";
const sc_lv<32> operator_int_mul11::ap_const_lv32_1F = "11111";
const sc_lv<32> operator_int_mul11::ap_const_lv32_1E = "11110";
const sc_lv<12> operator_int_mul11::ap_const_lv12_0 = "000000000000";
const sc_lv<18> operator_int_mul11::ap_const_lv18_0 = "000000000000000000";
const sc_lv<6> operator_int_mul11::ap_const_lv6_0 = "000000";
const sc_lv<24> operator_int_mul11::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<20> operator_int_mul11::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<32> operator_int_mul11::ap_const_lv32_4 = "100";
const bool operator_int_mul11::ap_const_boolean_1 = true;

operator_int_mul11::operator_int_mul11(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_lut_mul11_chunk_fu_84 = new lut_mul11_chunk("grp_lut_mul11_chunk_fu_84");
    grp_lut_mul11_chunk_fu_84->ap_clk(ap_clk);
    grp_lut_mul11_chunk_fu_84->ap_rst(ap_rst);
    grp_lut_mul11_chunk_fu_84->ap_start(grp_lut_mul11_chunk_fu_84_ap_start);
    grp_lut_mul11_chunk_fu_84->ap_done(grp_lut_mul11_chunk_fu_84_ap_done);
    grp_lut_mul11_chunk_fu_84->ap_idle(grp_lut_mul11_chunk_fu_84_ap_idle);
    grp_lut_mul11_chunk_fu_84->ap_ready(grp_lut_mul11_chunk_fu_84_ap_ready);
    grp_lut_mul11_chunk_fu_84->d_V(grp_lut_mul11_chunk_fu_84_d_V);
    grp_lut_mul11_chunk_fu_84->ap_return(grp_lut_mul11_chunk_fu_84_ap_return);
    grp_lut_mul11_chunk_fu_109 = new lut_mul11_chunk("grp_lut_mul11_chunk_fu_109");
    grp_lut_mul11_chunk_fu_109->ap_clk(ap_clk);
    grp_lut_mul11_chunk_fu_109->ap_rst(ap_rst);
    grp_lut_mul11_chunk_fu_109->ap_start(grp_lut_mul11_chunk_fu_109_ap_start);
    grp_lut_mul11_chunk_fu_109->ap_done(grp_lut_mul11_chunk_fu_109_ap_done);
    grp_lut_mul11_chunk_fu_109->ap_idle(grp_lut_mul11_chunk_fu_109_ap_idle);
    grp_lut_mul11_chunk_fu_109->ap_ready(grp_lut_mul11_chunk_fu_109_ap_ready);
    grp_lut_mul11_chunk_fu_109->d_V(grp_lut_mul11_chunk_fu_109_d_V);
    grp_lut_mul11_chunk_fu_109->ap_return(grp_lut_mul11_chunk_fu_109_ap_return);
    grp_lut_mul11_chunk_fu_134 = new lut_mul11_chunk("grp_lut_mul11_chunk_fu_134");
    grp_lut_mul11_chunk_fu_134->ap_clk(ap_clk);
    grp_lut_mul11_chunk_fu_134->ap_rst(ap_rst);
    grp_lut_mul11_chunk_fu_134->ap_start(grp_lut_mul11_chunk_fu_134_ap_start);
    grp_lut_mul11_chunk_fu_134->ap_done(grp_lut_mul11_chunk_fu_134_ap_done);
    grp_lut_mul11_chunk_fu_134->ap_idle(grp_lut_mul11_chunk_fu_134_ap_idle);
    grp_lut_mul11_chunk_fu_134->ap_ready(grp_lut_mul11_chunk_fu_134_ap_ready);
    grp_lut_mul11_chunk_fu_134->d_V(p_Result_3_i_reg_357);
    grp_lut_mul11_chunk_fu_134->ap_return(grp_lut_mul11_chunk_fu_134_ap_return);
    grp_lut_mul11_chunk_fu_159 = new lut_mul11_chunk("grp_lut_mul11_chunk_fu_159");
    grp_lut_mul11_chunk_fu_159->ap_clk(ap_clk);
    grp_lut_mul11_chunk_fu_159->ap_rst(ap_rst);
    grp_lut_mul11_chunk_fu_159->ap_start(grp_lut_mul11_chunk_fu_159_ap_start);
    grp_lut_mul11_chunk_fu_159->ap_done(grp_lut_mul11_chunk_fu_159_ap_done);
    grp_lut_mul11_chunk_fu_159->ap_idle(grp_lut_mul11_chunk_fu_159_ap_idle);
    grp_lut_mul11_chunk_fu_159->ap_ready(grp_lut_mul11_chunk_fu_159_ap_ready);
    grp_lut_mul11_chunk_fu_159->d_V(this_assign_5_i_reg_367);
    grp_lut_mul11_chunk_fu_159->ap_return(grp_lut_mul11_chunk_fu_159_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2_on_subcall_done);
    sensitive << ( grp_lut_mul11_chunk_fu_84_ap_done );
    sensitive << ( grp_lut_mul11_chunk_fu_109_ap_done );

    SC_METHOD(thread_ap_block_state3_on_subcall_done);
    sensitive << ( grp_lut_mul11_chunk_fu_84_ap_done );
    sensitive << ( grp_lut_mul11_chunk_fu_109_ap_done );
    sensitive << ( grp_lut_mul11_chunk_fu_134_ap_done );
    sensitive << ( grp_lut_mul11_chunk_fu_159_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_return);
    sensitive << ( tmp2_reg_392 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_cast_fu_329_p1 );

    SC_METHOD(thread_grp_lut_mul11_chunk_fu_109_ap_start);
    sensitive << ( grp_lut_mul11_chunk_fu_109_ap_start_reg );

    SC_METHOD(thread_grp_lut_mul11_chunk_fu_109_d_V);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_Result_i_reg_342 );
    sensitive << ( p_Result_2_i_reg_352 );

    SC_METHOD(thread_grp_lut_mul11_chunk_fu_134_ap_start);
    sensitive << ( grp_lut_mul11_chunk_fu_134_ap_start_reg );

    SC_METHOD(thread_grp_lut_mul11_chunk_fu_159_ap_start);
    sensitive << ( grp_lut_mul11_chunk_fu_159_ap_start_reg );

    SC_METHOD(thread_grp_lut_mul11_chunk_fu_84_ap_start);
    sensitive << ( grp_lut_mul11_chunk_fu_84_ap_start_reg );

    SC_METHOD(thread_grp_lut_mul11_chunk_fu_84_d_V);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_reg_337 );
    sensitive << ( p_Result_1_i_reg_347 );

    SC_METHOD(thread_p_Result_4_i_fu_238_p4);
    sensitive << ( in_r );

    SC_METHOD(thread_r_V_1_cast_fu_260_p1);
    sensitive << ( r_V_1_fu_252_p3 );

    SC_METHOD(thread_r_V_1_fu_252_p3);
    sensitive << ( reg_184 );

    SC_METHOD(thread_r_V_2_cast_fu_272_p1);
    sensitive << ( r_V_2_fu_264_p3 );

    SC_METHOD(thread_r_V_2_fu_264_p3);
    sensitive << ( reg_188 );

    SC_METHOD(thread_r_V_3_fu_302_p3);
    sensitive << ( tmp_2_reg_372 );

    SC_METHOD(thread_r_V_cast_fu_298_p1);
    sensitive << ( r_V_fu_290_p3 );

    SC_METHOD(thread_r_V_fu_290_p3);
    sensitive << ( reg_188 );

    SC_METHOD(thread_this_assign_5_i_fu_248_p1);
    sensitive << ( p_Result_4_i_reg_362 );

    SC_METHOD(thread_tmp1_fu_280_p2);
    sensitive << ( r_V_2_cast_fu_272_p1 );
    sensitive << ( r_V_1_cast_fu_260_p1 );

    SC_METHOD(thread_tmp2_fu_323_p2);
    sensitive << ( r_V_3_fu_302_p3 );
    sensitive << ( tmp3_fu_314_p4 );

    SC_METHOD(thread_tmp3_fu_314_p4);
    sensitive << ( reg_184 );
    sensitive << ( tmp_3_reg_382 );

    SC_METHOD(thread_tmp_1_fu_192_p1);
    sensitive << ( in_r );

    SC_METHOD(thread_tmp_2_fu_276_p1);
    sensitive << ( grp_lut_mul11_chunk_fu_134_ap_return );

    SC_METHOD(thread_tmp_3_fu_286_p1);
    sensitive << ( grp_lut_mul11_chunk_fu_159_ap_return );

    SC_METHOD(thread_tmp_cast_fu_329_p1);
    sensitive << ( tmp_reg_387 );

    SC_METHOD(thread_tmp_fu_309_p2);
    sensitive << ( tmp1_reg_377 );
    sensitive << ( r_V_cast_fu_298_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    grp_lut_mul11_chunk_fu_84_ap_start_reg = SC_LOGIC_0;
    grp_lut_mul11_chunk_fu_109_ap_start_reg = SC_LOGIC_0;
    grp_lut_mul11_chunk_fu_134_ap_start_reg = SC_LOGIC_0;
    grp_lut_mul11_chunk_fu_159_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "operator_int_mul11_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r, "(port)in_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_84_ap_return, "grp_lut_mul11_chunk_fu_84_ap_return");
    sc_trace(mVcdFile, reg_184, "reg_184");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_84_ap_idle, "grp_lut_mul11_chunk_fu_84_ap_idle");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_84_ap_ready, "grp_lut_mul11_chunk_fu_84_ap_ready");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_84_ap_done, "grp_lut_mul11_chunk_fu_84_ap_done");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_109_ap_idle, "grp_lut_mul11_chunk_fu_109_ap_idle");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_109_ap_ready, "grp_lut_mul11_chunk_fu_109_ap_ready");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_109_ap_done, "grp_lut_mul11_chunk_fu_109_ap_done");
    sc_trace(mVcdFile, ap_block_state2_on_subcall_done, "ap_block_state2_on_subcall_done");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_134_ap_idle, "grp_lut_mul11_chunk_fu_134_ap_idle");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_134_ap_ready, "grp_lut_mul11_chunk_fu_134_ap_ready");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_134_ap_done, "grp_lut_mul11_chunk_fu_134_ap_done");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_159_ap_idle, "grp_lut_mul11_chunk_fu_159_ap_idle");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_159_ap_ready, "grp_lut_mul11_chunk_fu_159_ap_ready");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_159_ap_done, "grp_lut_mul11_chunk_fu_159_ap_done");
    sc_trace(mVcdFile, ap_block_state3_on_subcall_done, "ap_block_state3_on_subcall_done");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_109_ap_return, "grp_lut_mul11_chunk_fu_109_ap_return");
    sc_trace(mVcdFile, reg_188, "reg_188");
    sc_trace(mVcdFile, tmp_1_fu_192_p1, "tmp_1_fu_192_p1");
    sc_trace(mVcdFile, tmp_1_reg_337, "tmp_1_reg_337");
    sc_trace(mVcdFile, p_Result_i_reg_342, "p_Result_i_reg_342");
    sc_trace(mVcdFile, p_Result_1_i_reg_347, "p_Result_1_i_reg_347");
    sc_trace(mVcdFile, p_Result_2_i_reg_352, "p_Result_2_i_reg_352");
    sc_trace(mVcdFile, p_Result_3_i_reg_357, "p_Result_3_i_reg_357");
    sc_trace(mVcdFile, p_Result_4_i_fu_238_p4, "p_Result_4_i_fu_238_p4");
    sc_trace(mVcdFile, p_Result_4_i_reg_362, "p_Result_4_i_reg_362");
    sc_trace(mVcdFile, this_assign_5_i_fu_248_p1, "this_assign_5_i_fu_248_p1");
    sc_trace(mVcdFile, this_assign_5_i_reg_367, "this_assign_5_i_reg_367");
    sc_trace(mVcdFile, tmp_2_fu_276_p1, "tmp_2_fu_276_p1");
    sc_trace(mVcdFile, tmp_2_reg_372, "tmp_2_reg_372");
    sc_trace(mVcdFile, tmp1_fu_280_p2, "tmp1_fu_280_p2");
    sc_trace(mVcdFile, tmp1_reg_377, "tmp1_reg_377");
    sc_trace(mVcdFile, tmp_3_fu_286_p1, "tmp_3_fu_286_p1");
    sc_trace(mVcdFile, tmp_3_reg_382, "tmp_3_reg_382");
    sc_trace(mVcdFile, tmp_fu_309_p2, "tmp_fu_309_p2");
    sc_trace(mVcdFile, tmp_reg_387, "tmp_reg_387");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp2_fu_323_p2, "tmp2_fu_323_p2");
    sc_trace(mVcdFile, tmp2_reg_392, "tmp2_reg_392");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_84_ap_start, "grp_lut_mul11_chunk_fu_84_ap_start");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_84_d_V, "grp_lut_mul11_chunk_fu_84_d_V");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_109_ap_start, "grp_lut_mul11_chunk_fu_109_ap_start");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_109_d_V, "grp_lut_mul11_chunk_fu_109_d_V");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_134_ap_start, "grp_lut_mul11_chunk_fu_134_ap_start");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_134_ap_return, "grp_lut_mul11_chunk_fu_134_ap_return");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_159_ap_start, "grp_lut_mul11_chunk_fu_159_ap_start");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_159_ap_return, "grp_lut_mul11_chunk_fu_159_ap_return");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_84_ap_start_reg, "grp_lut_mul11_chunk_fu_84_ap_start_reg");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_109_ap_start_reg, "grp_lut_mul11_chunk_fu_109_ap_start_reg");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_134_ap_start_reg, "grp_lut_mul11_chunk_fu_134_ap_start_reg");
    sc_trace(mVcdFile, grp_lut_mul11_chunk_fu_159_ap_start_reg, "grp_lut_mul11_chunk_fu_159_ap_start_reg");
    sc_trace(mVcdFile, r_V_1_fu_252_p3, "r_V_1_fu_252_p3");
    sc_trace(mVcdFile, r_V_2_fu_264_p3, "r_V_2_fu_264_p3");
    sc_trace(mVcdFile, r_V_2_cast_fu_272_p1, "r_V_2_cast_fu_272_p1");
    sc_trace(mVcdFile, r_V_1_cast_fu_260_p1, "r_V_1_cast_fu_260_p1");
    sc_trace(mVcdFile, r_V_fu_290_p3, "r_V_fu_290_p3");
    sc_trace(mVcdFile, r_V_cast_fu_298_p1, "r_V_cast_fu_298_p1");
    sc_trace(mVcdFile, r_V_3_fu_302_p3, "r_V_3_fu_302_p3");
    sc_trace(mVcdFile, tmp3_fu_314_p4, "tmp3_fu_314_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_cast_fu_329_p1, "tmp_cast_fu_329_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("operator_int_mul11.hdltvin.dat");
    mHdltvoutHandle.open("operator_int_mul11.hdltvout.dat");
}

operator_int_mul11::~operator_int_mul11() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_lut_mul11_chunk_fu_84;
    delete grp_lut_mul11_chunk_fu_109;
    delete grp_lut_mul11_chunk_fu_134;
    delete grp_lut_mul11_chunk_fu_159;
}

void operator_int_mul11::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_lut_mul11_chunk_fu_109_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
            grp_lut_mul11_chunk_fu_109_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_lut_mul11_chunk_fu_109_ap_ready.read())) {
            grp_lut_mul11_chunk_fu_109_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_lut_mul11_chunk_fu_134_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            grp_lut_mul11_chunk_fu_134_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_lut_mul11_chunk_fu_134_ap_ready.read())) {
            grp_lut_mul11_chunk_fu_134_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_lut_mul11_chunk_fu_159_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            grp_lut_mul11_chunk_fu_159_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_lut_mul11_chunk_fu_159_ap_ready.read())) {
            grp_lut_mul11_chunk_fu_159_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_lut_mul11_chunk_fu_84_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
            grp_lut_mul11_chunk_fu_84_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_lut_mul11_chunk_fu_84_ap_ready.read())) {
            grp_lut_mul11_chunk_fu_84_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_Result_1_i_reg_347 = in_r.read().range(17, 12);
        p_Result_2_i_reg_352 = in_r.read().range(23, 18);
        p_Result_3_i_reg_357 = in_r.read().range(29, 24);
        p_Result_4_i_reg_362 = p_Result_4_i_fu_238_p4.read();
        p_Result_i_reg_342 = in_r.read().range(11, 6);
        tmp_1_reg_337 = tmp_1_fu_192_p1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())))) {
        reg_184 = grp_lut_mul11_chunk_fu_84_ap_return.read();
        reg_188 = grp_lut_mul11_chunk_fu_109_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        this_assign_5_i_reg_367 = this_assign_5_i_fu_248_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        tmp1_reg_377 = tmp1_fu_280_p2.read();
        tmp_2_reg_372 = tmp_2_fu_276_p1.read();
        tmp_3_reg_382 = tmp_3_fu_286_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp2_reg_392 = tmp2_fu_323_p2.read();
        tmp_reg_387 = tmp_fu_309_p2.read();
    }
}

void operator_int_mul11::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void operator_int_mul11::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void operator_int_mul11::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void operator_int_mul11::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void operator_int_mul11::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void operator_int_mul11::thread_ap_block_state2_on_subcall_done() {
    ap_block_state2_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_lut_mul11_chunk_fu_84_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_lut_mul11_chunk_fu_109_ap_done.read()));
}

void operator_int_mul11::thread_ap_block_state3_on_subcall_done() {
    ap_block_state3_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_lut_mul11_chunk_fu_84_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_lut_mul11_chunk_fu_109_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_lut_mul11_chunk_fu_134_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_lut_mul11_chunk_fu_159_ap_done.read()));
}

void operator_int_mul11::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void operator_int_mul11::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void operator_int_mul11::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void operator_int_mul11::thread_ap_return() {
    ap_return = (!tmp_cast_fu_329_p1.read().is_01() || !tmp2_reg_392.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_cast_fu_329_p1.read()) + sc_biguint<32>(tmp2_reg_392.read()));
}

void operator_int_mul11::thread_grp_lut_mul11_chunk_fu_109_ap_start() {
    grp_lut_mul11_chunk_fu_109_ap_start = grp_lut_mul11_chunk_fu_109_ap_start_reg.read();
}

void operator_int_mul11::thread_grp_lut_mul11_chunk_fu_109_d_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_lut_mul11_chunk_fu_109_d_V = p_Result_i_reg_342.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_lut_mul11_chunk_fu_109_d_V = p_Result_2_i_reg_352.read();
    } else {
        grp_lut_mul11_chunk_fu_109_d_V = "XXXXXX";
    }
}

void operator_int_mul11::thread_grp_lut_mul11_chunk_fu_134_ap_start() {
    grp_lut_mul11_chunk_fu_134_ap_start = grp_lut_mul11_chunk_fu_134_ap_start_reg.read();
}

void operator_int_mul11::thread_grp_lut_mul11_chunk_fu_159_ap_start() {
    grp_lut_mul11_chunk_fu_159_ap_start = grp_lut_mul11_chunk_fu_159_ap_start_reg.read();
}

void operator_int_mul11::thread_grp_lut_mul11_chunk_fu_84_ap_start() {
    grp_lut_mul11_chunk_fu_84_ap_start = grp_lut_mul11_chunk_fu_84_ap_start_reg.read();
}

void operator_int_mul11::thread_grp_lut_mul11_chunk_fu_84_d_V() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_lut_mul11_chunk_fu_84_d_V = tmp_1_reg_337.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_lut_mul11_chunk_fu_84_d_V = p_Result_1_i_reg_347.read();
    } else {
        grp_lut_mul11_chunk_fu_84_d_V = "XXXXXX";
    }
}

void operator_int_mul11::thread_p_Result_4_i_fu_238_p4() {
    p_Result_4_i_fu_238_p4 = in_r.read().range(30, 31);
}

void operator_int_mul11::thread_r_V_1_cast_fu_260_p1() {
    r_V_1_cast_fu_260_p1 = esl_zext<29,22>(r_V_1_fu_252_p3.read());
}

void operator_int_mul11::thread_r_V_1_fu_252_p3() {
    r_V_1_fu_252_p3 = esl_concat<10,12>(reg_184.read(), ap_const_lv12_0);
}

void operator_int_mul11::thread_r_V_2_cast_fu_272_p1() {
    r_V_2_cast_fu_272_p1 = esl_zext<29,28>(r_V_2_fu_264_p3.read());
}

void operator_int_mul11::thread_r_V_2_fu_264_p3() {
    r_V_2_fu_264_p3 = esl_concat<10,18>(reg_188.read(), ap_const_lv18_0);
}

void operator_int_mul11::thread_r_V_3_fu_302_p3() {
    r_V_3_fu_302_p3 = esl_concat<8,24>(tmp_2_reg_372.read(), ap_const_lv24_0);
}

void operator_int_mul11::thread_r_V_cast_fu_298_p1() {
    r_V_cast_fu_298_p1 = esl_zext<29,16>(r_V_fu_290_p3.read());
}

void operator_int_mul11::thread_r_V_fu_290_p3() {
    r_V_fu_290_p3 = esl_concat<10,6>(reg_188.read(), ap_const_lv6_0);
}

void operator_int_mul11::thread_this_assign_5_i_fu_248_p1() {
    this_assign_5_i_fu_248_p1 = esl_zext<6,2>(p_Result_4_i_reg_362.read());
}

void operator_int_mul11::thread_tmp1_fu_280_p2() {
    tmp1_fu_280_p2 = (!r_V_2_cast_fu_272_p1.read().is_01() || !r_V_1_cast_fu_260_p1.read().is_01())? sc_lv<29>(): (sc_biguint<29>(r_V_2_cast_fu_272_p1.read()) + sc_biguint<29>(r_V_1_cast_fu_260_p1.read()));
}

void operator_int_mul11::thread_tmp2_fu_323_p2() {
    tmp2_fu_323_p2 = (!r_V_3_fu_302_p3.read().is_01() || !tmp3_fu_314_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(r_V_3_fu_302_p3.read()) + sc_biguint<32>(tmp3_fu_314_p4.read()));
}

void operator_int_mul11::thread_tmp3_fu_314_p4() {
    tmp3_fu_314_p4 = esl_concat<22,10>(esl_concat<2,20>(tmp_3_reg_382.read(), ap_const_lv20_0), reg_184.read());
}

void operator_int_mul11::thread_tmp_1_fu_192_p1() {
    tmp_1_fu_192_p1 = in_r.read().range(6-1, 0);
}

void operator_int_mul11::thread_tmp_2_fu_276_p1() {
    tmp_2_fu_276_p1 = grp_lut_mul11_chunk_fu_134_ap_return.read().range(8-1, 0);
}

void operator_int_mul11::thread_tmp_3_fu_286_p1() {
    tmp_3_fu_286_p1 = grp_lut_mul11_chunk_fu_159_ap_return.read().range(2-1, 0);
}

void operator_int_mul11::thread_tmp_cast_fu_329_p1() {
    tmp_cast_fu_329_p1 = esl_zext<32,29>(tmp_reg_387.read());
}

void operator_int_mul11::thread_tmp_fu_309_p2() {
    tmp_fu_309_p2 = (!r_V_cast_fu_298_p1.read().is_01() || !tmp1_reg_377.read().is_01())? sc_lv<29>(): (sc_biguint<29>(r_V_cast_fu_298_p1.read()) + sc_biguint<29>(tmp1_reg_377.read()));
}

void operator_int_mul11::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state2_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

void operator_int_mul11::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r\" :  \"" << in_r.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

