// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="operator_float_div6,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.177600,HLS_SYN_LAT=28,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=594,HLS_SYN_LUT=751,HLS_VERSION=2018_2}" *)

module operator_float_div6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_r;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] reg_117;
wire    ap_CS_fsm_state10;
wire    grp_lut_div3_chunk_fu_94_ap_idle;
wire    grp_lut_div3_chunk_fu_94_ap_ready;
wire    grp_lut_div3_chunk_fu_94_ap_done;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
reg   [0:0] p_Repl2_2_reg_461;
wire   [7:0] new_exp_V_fu_134_p4;
reg   [7:0] new_exp_V_reg_466;
wire   [22:0] new_mant_V_1_fu_144_p1;
reg   [22:0] new_mant_V_1_reg_475;
wire   [0:0] tmp_fu_148_p3;
reg   [0:0] tmp_reg_482;
wire   [7:0] p_cast_cast_fu_156_p3;
reg   [7:0] p_cast_cast_reg_487;
wire   [0:0] tmp_3_fu_164_p2;
reg   [0:0] tmp_3_reg_493;
wire   [0:0] tmp_4_fu_170_p2;
reg   [0:0] tmp_4_reg_501;
wire   [7:0] shift_V_1_fu_176_p2;
reg   [7:0] shift_V_1_reg_507;
wire   [0:0] tmp_6_fu_197_p2;
reg   [0:0] tmp_6_reg_512;
wire    ap_CS_fsm_state2;
wire   [7:0] shift_V_4_fu_248_p3;
reg   [7:0] shift_V_4_reg_517;
wire   [0:0] tmp_9_fu_255_p2;
reg   [0:0] tmp_9_reg_523;
wire   [7:0] p_Repl2_1_fu_274_p3;
reg   [7:0] p_Repl2_1_reg_528;
wire    ap_CS_fsm_state3;
wire   [22:0] grp_fu_291_p2;
reg   [22:0] tmp_5_reg_548;
wire    ap_CS_fsm_state6;
wire   [26:0] tmp_12_fu_302_p1;
reg   [26:0] tmp_12_reg_553;
wire   [26:0] xf_V_fu_309_p3;
reg   [26:0] xf_V_reg_558;
wire    ap_CS_fsm_state7;
reg   [2:0] p_Result_i_i_reg_564;
wire    ap_CS_fsm_state8;
reg   [3:0] d_chunk_V_1_reg_569;
reg   [3:0] d_chunk_V_2_reg_574;
reg   [3:0] d_chunk_V_3_reg_579;
reg   [3:0] d_chunk_V_4_reg_584;
reg   [3:0] d_chunk_V_5_reg_589;
wire   [3:0] d_chunk_V_6_fu_396_p1;
reg   [3:0] d_chunk_V_6_reg_594;
wire   [3:0] d_chunk_V_fu_400_p1;
reg   [3:0] d_chunk_V_reg_599;
wire    ap_CS_fsm_state9;
wire   [3:0] grp_lut_div3_chunk_fu_94_ap_return_0;
wire   [1:0] grp_lut_div3_chunk_fu_94_ap_return_1;
reg   [3:0] call_ret2_i_i_reg_604_0;
reg   [3:0] call_ret3_i_i_reg_609_0;
reg   [3:0] call_ret4_i_i_reg_614_0;
reg   [3:0] call_ret5_i_i_reg_619_0;
reg   [3:0] call_ret6_i_i_reg_624_0;
wire    grp_lut_div3_chunk_fu_94_ap_start;
reg   [3:0] grp_lut_div3_chunk_fu_94_d_V;
reg   [1:0] grp_lut_div3_chunk_fu_94_r_in_V;
reg    grp_lut_div3_chunk_fu_94_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire   [31:0] p_Val2_s_fu_122_p1;
wire   [0:0] sel_tmp_fu_207_p2;
wire   [0:0] sel_tmp1_fu_212_p2;
wire   [7:0] shift_V_cast_cast_fu_190_p3;
wire   [0:0] sel_tmp5_demorgan_fu_224_p2;
wire   [0:0] sel_tmp5_fu_228_p2;
wire   [0:0] sel_tmp6_fu_234_p2;
wire   [7:0] shift_V_fu_202_p2;
wire   [7:0] shift_V_2_fu_217_p3;
wire   [7:0] shift_V_3_fu_240_p3;
wire   [0:0] tmp_1_fu_182_p2;
wire   [0:0] tmp_10_fu_268_p2;
wire   [7:0] p_1_fu_260_p3;
wire   [7:0] new_exp_V_1_fu_186_p2;
wire   [22:0] grp_fu_291_p1;
wire   [31:0] grp_fu_296_p0;
wire   [31:0] grp_fu_296_p1;
wire   [31:0] grp_fu_296_p2;
wire   [26:0] tmp_7_fu_306_p1;
reg   [26:0] p_Result_s_fu_315_p4;
wire   [26:0] xf_V_1_fu_324_p3;
wire   [26:0] xf_V_4_fu_330_p2;
wire   [2:0] tmp_15_fu_423_p1;
wire   [22:0] new_mant_V_fu_427_p7;
wire   [22:0] p_Repl2_s_fu_443_p3;
wire   [31:0] p_Result_1_fu_449_p4;
reg   [21:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 grp_lut_div3_chunk_fu_94_ap_start_reg = 1'b0;
end

lut_div3_chunk grp_lut_div3_chunk_fu_94(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lut_div3_chunk_fu_94_ap_start),
    .ap_done(grp_lut_div3_chunk_fu_94_ap_done),
    .ap_idle(grp_lut_div3_chunk_fu_94_ap_idle),
    .ap_ready(grp_lut_div3_chunk_fu_94_ap_ready),
    .d_V(grp_lut_div3_chunk_fu_94_d_V),
    .r_in_V(grp_lut_div3_chunk_fu_94_r_in_V),
    .ap_return_0(grp_lut_div3_chunk_fu_94_ap_return_0),
    .ap_return_1(grp_lut_div3_chunk_fu_94_ap_return_1)
);

operator_float_dibkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .OP( 1 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
operator_float_dibkb_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(new_mant_V_1_reg_475),
    .din1(grp_fu_291_p1),
    .ce(1'b1),
    .dout(grp_fu_291_p2)
);

operator_float_dicud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .OP( 0 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
operator_float_dicud_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_296_p0),
    .din1(grp_fu_296_p1),
    .ce(1'b1),
    .dout(grp_fu_296_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lut_div3_chunk_fu_94_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
            grp_lut_div3_chunk_fu_94_ap_start_reg <= 1'b1;
        end else if ((grp_lut_div3_chunk_fu_94_ap_ready == 1'b1)) begin
            grp_lut_div3_chunk_fu_94_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        call_ret2_i_i_reg_604_0 <= grp_lut_div3_chunk_fu_94_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        call_ret3_i_i_reg_609_0 <= grp_lut_div3_chunk_fu_94_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        call_ret4_i_i_reg_614_0 <= grp_lut_div3_chunk_fu_94_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        call_ret5_i_i_reg_619_0 <= grp_lut_div3_chunk_fu_94_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        call_ret6_i_i_reg_624_0 <= grp_lut_div3_chunk_fu_94_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_chunk_V_1_reg_569 <= {{xf_V_4_fu_330_p2[23:20]}};
        d_chunk_V_2_reg_574 <= {{xf_V_4_fu_330_p2[19:16]}};
        d_chunk_V_3_reg_579 <= {{xf_V_4_fu_330_p2[15:12]}};
        d_chunk_V_4_reg_584 <= {{xf_V_4_fu_330_p2[11:8]}};
        d_chunk_V_5_reg_589 <= {{xf_V_4_fu_330_p2[7:4]}};
        d_chunk_V_6_reg_594 <= d_chunk_V_6_fu_396_p1;
        p_Result_i_i_reg_564 <= {{xf_V_4_fu_330_p2[26:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        d_chunk_V_reg_599[2 : 0] <= d_chunk_V_fu_400_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        new_exp_V_reg_466 <= {{p_Val2_s_fu_122_p1[30:23]}};
        new_mant_V_1_reg_475 <= new_mant_V_1_fu_144_p1;
        p_Repl2_2_reg_461 <= p_Val2_s_fu_122_p1[32'd31];
        p_cast_cast_reg_487[0] <= p_cast_cast_fu_156_p3[0];
        shift_V_1_reg_507 <= shift_V_1_fu_176_p2;
        tmp_3_reg_493 <= tmp_3_fu_164_p2;
        tmp_4_reg_501 <= tmp_4_fu_170_p2;
        tmp_reg_482 <= p_Val2_s_fu_122_p1[32'd22];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Repl2_1_reg_528 <= p_Repl2_1_fu_274_p3;
        shift_V_4_reg_517 <= shift_V_4_fu_248_p3;
        tmp_6_reg_512 <= tmp_6_fu_197_p2;
        tmp_9_reg_523 <= tmp_9_fu_255_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        reg_117 <= grp_lut_div3_chunk_fu_94_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_6_reg_512 == 1'd0))) begin
        tmp_12_reg_553 <= tmp_12_fu_302_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_6_reg_512 == 1'd1))) begin
        tmp_5_reg_548 <= grp_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        xf_V_reg_558 <= xf_V_fu_309_p3;
    end
end

always @ (*) begin
    if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_lut_div3_chunk_fu_94_d_V = d_chunk_V_6_reg_594;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_lut_div3_chunk_fu_94_d_V = d_chunk_V_5_reg_589;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_lut_div3_chunk_fu_94_d_V = d_chunk_V_4_reg_584;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_lut_div3_chunk_fu_94_d_V = d_chunk_V_3_reg_579;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_lut_div3_chunk_fu_94_d_V = d_chunk_V_2_reg_574;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_lut_div3_chunk_fu_94_d_V = d_chunk_V_1_reg_569;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_lut_div3_chunk_fu_94_d_V = d_chunk_V_reg_599;
    end else begin
        grp_lut_div3_chunk_fu_94_d_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_lut_div3_chunk_fu_94_r_in_V = reg_117;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_lut_div3_chunk_fu_94_r_in_V = 2'd0;
    end else begin
        grp_lut_div3_chunk_fu_94_r_in_V = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_lut_div3_chunk_fu_94_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = p_Result_1_fu_449_p4;

assign d_chunk_V_6_fu_396_p1 = xf_V_4_fu_330_p2[3:0];

assign d_chunk_V_fu_400_p1 = p_Result_i_i_reg_564;

assign grp_fu_291_p1 = shift_V_4_reg_517;

assign grp_fu_296_p0 = new_mant_V_1_reg_475;

assign grp_fu_296_p1 = shift_V_4_reg_517;

assign grp_lut_div3_chunk_fu_94_ap_start = grp_lut_div3_chunk_fu_94_ap_start_reg;

assign new_exp_V_1_fu_186_p2 = (new_exp_V_reg_466 - p_cast_cast_reg_487);

assign new_exp_V_fu_134_p4 = {{p_Val2_s_fu_122_p1[30:23]}};

assign new_mant_V_1_fu_144_p1 = p_Val2_s_fu_122_p1[22:0];

assign new_mant_V_fu_427_p7 = {{{{{{tmp_15_fu_423_p1}, {call_ret3_i_i_reg_609_0}}, {call_ret4_i_i_reg_614_0}}, {call_ret5_i_i_reg_619_0}}, {call_ret6_i_i_reg_624_0}}, {grp_lut_div3_chunk_fu_94_ap_return_0}};

assign p_1_fu_260_p3 = ((tmp_9_fu_255_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_Repl2_1_fu_274_p3 = ((tmp_10_fu_268_p2[0:0] === 1'b1) ? p_1_fu_260_p3 : new_exp_V_1_fu_186_p2);

assign p_Repl2_s_fu_443_p3 = ((tmp_9_reg_523[0:0] === 1'b1) ? new_mant_V_1_reg_475 : new_mant_V_fu_427_p7);

assign p_Result_1_fu_449_p4 = {{{p_Repl2_2_reg_461}, {p_Repl2_1_reg_528}}, {p_Repl2_s_fu_443_p3}};

always @ (*) begin
    p_Result_s_fu_315_p4 = xf_V_reg_558;
    p_Result_s_fu_315_p4[32'd23] = |(1'd1);
end

assign p_Val2_s_fu_122_p1 = in_r;

assign p_cast_cast_fu_156_p3 = ((tmp_fu_148_p3[0:0] === 1'b1) ? 8'd2 : 8'd3);

assign sel_tmp1_fu_212_p2 = (tmp_4_reg_501 & sel_tmp_fu_207_p2);

assign sel_tmp5_demorgan_fu_224_p2 = (tmp_4_reg_501 | tmp_3_reg_493);

assign sel_tmp5_fu_228_p2 = (sel_tmp5_demorgan_fu_224_p2 ^ 1'd1);

assign sel_tmp6_fu_234_p2 = (tmp_6_fu_197_p2 & sel_tmp5_fu_228_p2);

assign sel_tmp_fu_207_p2 = (tmp_3_reg_493 ^ 1'd1);

assign shift_V_1_fu_176_p2 = ($signed(8'd254) + $signed(new_exp_V_fu_134_p4));

assign shift_V_2_fu_217_p3 = ((sel_tmp1_fu_212_p2[0:0] === 1'b1) ? shift_V_cast_cast_fu_190_p3 : shift_V_1_reg_507);

assign shift_V_3_fu_240_p3 = ((sel_tmp6_fu_234_p2[0:0] === 1'b1) ? shift_V_fu_202_p2 : shift_V_2_fu_217_p3);

assign shift_V_4_fu_248_p3 = ((tmp_3_reg_493[0:0] === 1'b1) ? 8'd1 : shift_V_3_fu_240_p3);

assign shift_V_cast_cast_fu_190_p3 = ((tmp_reg_482[0:0] === 1'b1) ? 8'd1 : 8'd2);

assign shift_V_fu_202_p2 = (8'd2 - new_exp_V_reg_466);

assign tmp_10_fu_268_p2 = (tmp_9_fu_255_p2 | tmp_1_fu_182_p2);

assign tmp_12_fu_302_p1 = grp_fu_296_p2[26:0];

assign tmp_15_fu_423_p1 = call_ret2_i_i_reg_604_0[2:0];

assign tmp_1_fu_182_p2 = ((p_cast_cast_reg_487 > new_exp_V_reg_466) ? 1'b1 : 1'b0);

assign tmp_3_fu_164_p2 = ((new_exp_V_fu_134_p4 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_4_fu_170_p2 = ((p_cast_cast_fu_156_p3 < new_exp_V_fu_134_p4) ? 1'b1 : 1'b0);

assign tmp_6_fu_197_p2 = ((new_exp_V_reg_466 < 8'd3) ? 1'b1 : 1'b0);

assign tmp_7_fu_306_p1 = tmp_5_reg_548;

assign tmp_9_fu_255_p2 = ((new_exp_V_reg_466 == 8'd255) ? 1'b1 : 1'b0);

assign tmp_fu_148_p3 = p_Val2_s_fu_122_p1[32'd22];

assign xf_V_1_fu_324_p3 = ((tmp_3_reg_493[0:0] === 1'b1) ? xf_V_reg_558 : p_Result_s_fu_315_p4);

assign xf_V_4_fu_330_p2 = (27'd1 + xf_V_1_fu_324_p3);

assign xf_V_fu_309_p3 = ((tmp_6_reg_512[0:0] === 1'b1) ? tmp_7_fu_306_p1 : tmp_12_reg_553);

always @ (posedge ap_clk) begin
    p_cast_cast_reg_487[7:1] <= 7'b0000001;
    d_chunk_V_reg_599[3] <= 1'b0;
end

endmodule //operator_float_div6
