

================================================================
== Vivado HLS Report for 'operator_float_div4'
================================================================
* Date:           Fri Aug  3 10:57:59 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        operator_float_div
* Solution:       div4
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|     3.845|        0.62|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    1|    1|    1|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.84>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%in_read = call float @_ssdm_op_Read.ap_auto.float(float %in_r) nounwind"   --->   Operation 3 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%p_Val2_s = bitcast float %in_read to i32" [test.cpp:7234->test.cpp:7391]   --->   Operation 4 'bitcast' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%p_Repl2_2 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_s, i32 31)" [test.cpp:7235->test.cpp:7391]   --->   Operation 5 'bitselect' 'p_Repl2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%new_exp_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %p_Val2_s, i32 23, i32 30) nounwind" [test.cpp:7236->test.cpp:7391]   --->   Operation 6 'partselect' 'new_exp_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%new_mant_V_2 = trunc i32 %p_Val2_s to i23" [test.cpp:7237->test.cpp:7391]   --->   Operation 7 'trunc' 'new_mant_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%tmp_10 = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %p_Val2_s, i32 24, i32 30)" [test.cpp:7400]   --->   Operation 8 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (1.18ns)   --->   "%icmp = icmp eq i7 %tmp_10, 0" [test.cpp:7400]   --->   Operation 9 'icmp' 'icmp' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (1.22ns)   --->   "%tmp_3 = icmp eq i8 %new_exp_V, 0" [test.cpp:7405]   --->   Operation 10 'icmp' 'tmp_3' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (1.22ns)   --->   "%tmp_4 = icmp ugt i8 %new_exp_V, 2" [test.cpp:7408]   --->   Operation 11 'icmp' 'tmp_4' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node p_0274_2)   --->   "%tmp_9 = call i2 @_ssdm_op_PartSelect.i2.i32.i32.i32(i32 %p_Val2_s, i32 23, i32 24)" [test.cpp:7410]   --->   Operation 12 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node p_0274_2)   --->   "%shift_V_cast = xor i2 %tmp_9, -1" [test.cpp:7410]   --->   Operation 13 'xor' 'shift_V_cast' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns) (grouped into LUT with out node p_0274_2)   --->   "%p_shift_V = select i1 %tmp_3, i2 -2, i2 0" [test.cpp:7405]   --->   Operation 14 'select' 'p_shift_V' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns) (grouped into LUT with out node p_0274_2)   --->   "%tmp_s = or i1 %tmp_3, %tmp_4" [test.cpp:7405]   --->   Operation 15 'or' 'tmp_s' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.62ns) (out node of the LUT)   --->   "%p_0274_2 = select i1 %tmp_s, i2 %p_shift_V, i2 %shift_V_cast" [test.cpp:7405]   --->   Operation 16 'select' 'p_0274_2' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_11 = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %p_Val2_s, i32 25, i32 30)" [test.cpp:7417]   --->   Operation 17 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.15ns)   --->   "%icmp4 = icmp eq i6 %tmp_11, 0" [test.cpp:7417]   --->   Operation 18 'icmp' 'icmp4' <Predicate = true> <Delay = 1.15> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 3.84>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %in_r) nounwind, !map !362"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float 0.000000e+00) nounwind, !map !368"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([20 x i8]* @operator_float_div4_s) nounwind"   --->   Operation 21 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLatency(i32 0, i32 1, [1 x i8]* @p_str) nounwind" [test.cpp:7379]   --->   Operation 22 'speclatency' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%xf_V_1_cast = zext i23 %new_mant_V_2 to i24" [test.cpp:7396]   --->   Operation 23 'zext' 'xf_V_1_cast' <Predicate = (tmp_3)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.22ns)   --->   "%tmp = icmp eq i8 %new_exp_V, -1" [test.cpp:7399]   --->   Operation 24 'icmp' 'tmp' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.39ns)   --->   "%new_exp_V_1 = add i8 -2, %new_exp_V" [test.cpp:7403]   --->   Operation 25 'add' 'new_exp_V_1' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.39> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%p_new_exp_V_1 = select i1 %tmp, i8 -1, i8 0" [test.cpp:6558->test.cpp:7424]   --->   Operation 26 'select' 'p_new_exp_V_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%tmp_6 = or i1 %tmp, %icmp" [test.cpp:6558->test.cpp:7424]   --->   Operation 27 'or' 'tmp_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.74ns) (out node of the LUT)   --->   "%p_Repl2_1 = select i1 %tmp_6, i8 %p_new_exp_V_1, i8 %new_exp_V_1" [test.cpp:6558->test.cpp:7424]   --->   Operation 28 'select' 'p_Repl2_1' <Predicate = true> <Delay = 0.74> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_5 = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %new_mant_V_2)" [test.cpp:7416]   --->   Operation 29 'bitconcatenate' 'tmp_5' <Predicate = (!tmp_3)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.66ns)   --->   "%xf_V = select i1 %tmp_3, i24 %xf_V_1_cast, i24 %tmp_5" [test.cpp:7405]   --->   Operation 30 'select' 'xf_V' <Predicate = true> <Delay = 0.66> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%tmp_9_cast2 = zext i24 %xf_V to i27" [test.cpp:7418]   --->   Operation 31 'zext' 'tmp_9_cast2' <Predicate = (!icmp4)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%tmp_cast1 = zext i2 %p_0274_2 to i27" [test.cpp:7418]   --->   Operation 32 'zext' 'tmp_cast1' <Predicate = (!icmp4)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%tmp_cast = zext i2 %p_0274_2 to i24" [test.cpp:7418]   --->   Operation 33 'zext' 'tmp_cast' <Predicate = (icmp4)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%tmp_2 = lshr i24 %xf_V, %tmp_cast" [test.cpp:7418]   --->   Operation 34 'lshr' 'tmp_2' <Predicate = (icmp4)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%tmp_7 = shl i27 %tmp_9_cast2, %tmp_cast1" [test.cpp:7420]   --->   Operation 35 'shl' 'tmp_7' <Predicate = (!icmp4)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%tmp_12 = trunc i24 %tmp_2 to i23" [test.cpp:7418]   --->   Operation 36 'trunc' 'tmp_12' <Predicate = (icmp4)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_1)   --->   "%tmp_13 = trunc i27 %tmp_7 to i23" [test.cpp:7420]   --->   Operation 37 'trunc' 'tmp_13' <Predicate = (!icmp4)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (2.44ns) (out node of the LUT)   --->   "%new_mant_V_1 = select i1 %icmp4, i23 %tmp_12, i23 %tmp_13" [test.cpp:7417]   --->   Operation 38 'select' 'new_mant_V_1' <Predicate = true> <Delay = 2.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.73ns) (out node of the LUT)   --->   "%new_mant_V = select i1 %tmp, i23 %new_mant_V_2, i23 %new_mant_V_1" [test.cpp:6558->test.cpp:7424]   --->   Operation 39 'select' 'new_mant_V' <Predicate = true> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%p_Result_s = call i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i23(i1 %p_Repl2_2, i8 %p_Repl2_1, i23 %new_mant_V) nounwind" [test.cpp:6559->test.cpp:7424]   --->   Operation 40 'bitconcatenate' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%out = bitcast i32 %p_Result_s to float" [test.cpp:6560->test.cpp:7424]   --->   Operation 41 'bitcast' 'out' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "ret float %out" [test.cpp:7425]   --->   Operation 42 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 1.84ns
The critical path consists of the following:
	wire read on port 'in_r' [5]  (0 ns)
	'icmp' operation ('tmp_3', test.cpp:7405) [19]  (1.22 ns)
	'select' operation ('p_shift_V', test.cpp:7405) [23]  (0 ns)
	'select' operation ('p_0274_2', test.cpp:7405) [25]  (0.62 ns)

 <State 2>: 3.85ns
The critical path consists of the following:
	'select' operation ('xf.V', test.cpp:7405) [27]  (0.667 ns)
	'lshr' operation ('tmp_2', test.cpp:7418) [33]  (0 ns)
	'select' operation ('new_mant.V', test.cpp:7417) [37]  (2.45 ns)
	'select' operation ('new_mant.V', test.cpp:6558->test.cpp:7424) [38]  (0.731 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
