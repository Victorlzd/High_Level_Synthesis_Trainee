-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity operator_float_div9 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of operator_float_div9 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "operator_float_div9,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=29.069000,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=62,HLS_SYN_LUT=13660,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv28_4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_Repl2_2_reg_676 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_mant_V_fu_246_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_686 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_1_fu_310_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_1_reg_690 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_chunk_V_0_3_i_i_reg_695 : STD_LOGIC_VECTOR (1 downto 0);
    signal q_chunk_V_0_4_i_i_reg_700 : STD_LOGIC_VECTOR (1 downto 0);
    signal q_chunk_V_0_5_i_i_reg_705 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_ret_5_i_i_reg_710 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_16_6_i_i_reg_715 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_16_7_i_i_reg_720 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_16_8_i_i_reg_725 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_16_9_i_i_reg_730 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_16_i_i_10_reg_735 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_16_10_i_i_reg_740 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_16_11_i_i_reg_745 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_610_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_reg_750 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_614_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_755 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_lut_div9_chunk_fu_129_ap_ready : STD_LOGIC;
    signal grp_lut_div9_chunk_fu_129_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_129_r_in_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div9_chunk_fu_129_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_129_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div9_chunk_fu_136_ap_ready : STD_LOGIC;
    signal grp_lut_div9_chunk_fu_136_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_136_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_136_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div9_chunk_fu_142_ap_ready : STD_LOGIC;
    signal grp_lut_div9_chunk_fu_142_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_142_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_142_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div9_chunk_fu_148_ap_ready : STD_LOGIC;
    signal grp_lut_div9_chunk_fu_148_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_148_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_148_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div9_chunk_fu_154_ap_ready : STD_LOGIC;
    signal grp_lut_div9_chunk_fu_154_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_154_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_154_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_lut_div9_chunk_fu_160_ap_ready : STD_LOGIC;
    signal grp_lut_div9_chunk_fu_160_d_V : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_160_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_lut_div9_chunk_fu_160_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_11_i_i_lut_div9_chunk_fu_166_ap_ready : STD_LOGIC;
    signal call_ret_11_i_i_lut_div9_chunk_fu_166_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal call_ret_11_i_i_lut_div9_chunk_fu_166_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal call_ret_12_i_i_lut_div9_chunk_fu_172_ap_ready : STD_LOGIC;
    signal call_ret_12_i_i_lut_div9_chunk_fu_172_ap_return_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal call_ret_12_i_i_lut_div9_chunk_fu_172_ap_return_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal new_mant_V_1_fu_639_p13 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_phi_mux_p_Repl2_s_phi_fu_123_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Repl2_s_reg_120 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_Val2_s_fu_224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_254_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_exp_V_fu_236_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal shift_V_cast_cast_fu_270_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_new_exp_V_1_fu_296_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal new_exp_V_1_fu_290_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_330_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_demorgan_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_V_fu_346_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shift_V_1_fu_352_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shift_V_2_fu_376_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp7_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_V_3_fu_384_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xf_V_3_cast_fu_250_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_9_fu_412_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal xf_V_1_fu_420_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shift_V_4_fu_404_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_cast_fu_436_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_s_fu_428_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_432_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_440_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_fu_446_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_452_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_13_fu_456_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal xf_V_2_fu_460_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal xf_V_fu_468_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Result_s_fu_664_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);

    component lut_div9_chunk IS
    port (
        ap_ready : OUT STD_LOGIC;
        d_V : IN STD_LOGIC_VECTOR (1 downto 0);
        r_in_V : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    grp_lut_div9_chunk_fu_129 : component lut_div9_chunk
    port map (
        ap_ready => grp_lut_div9_chunk_fu_129_ap_ready,
        d_V => grp_lut_div9_chunk_fu_129_d_V,
        r_in_V => grp_lut_div9_chunk_fu_129_r_in_V,
        ap_return_0 => grp_lut_div9_chunk_fu_129_ap_return_0,
        ap_return_1 => grp_lut_div9_chunk_fu_129_ap_return_1);

    grp_lut_div9_chunk_fu_136 : component lut_div9_chunk
    port map (
        ap_ready => grp_lut_div9_chunk_fu_136_ap_ready,
        d_V => grp_lut_div9_chunk_fu_136_d_V,
        r_in_V => grp_lut_div9_chunk_fu_129_ap_return_1,
        ap_return_0 => grp_lut_div9_chunk_fu_136_ap_return_0,
        ap_return_1 => grp_lut_div9_chunk_fu_136_ap_return_1);

    grp_lut_div9_chunk_fu_142 : component lut_div9_chunk
    port map (
        ap_ready => grp_lut_div9_chunk_fu_142_ap_ready,
        d_V => grp_lut_div9_chunk_fu_142_d_V,
        r_in_V => grp_lut_div9_chunk_fu_136_ap_return_1,
        ap_return_0 => grp_lut_div9_chunk_fu_142_ap_return_0,
        ap_return_1 => grp_lut_div9_chunk_fu_142_ap_return_1);

    grp_lut_div9_chunk_fu_148 : component lut_div9_chunk
    port map (
        ap_ready => grp_lut_div9_chunk_fu_148_ap_ready,
        d_V => grp_lut_div9_chunk_fu_148_d_V,
        r_in_V => grp_lut_div9_chunk_fu_142_ap_return_1,
        ap_return_0 => grp_lut_div9_chunk_fu_148_ap_return_0,
        ap_return_1 => grp_lut_div9_chunk_fu_148_ap_return_1);

    grp_lut_div9_chunk_fu_154 : component lut_div9_chunk
    port map (
        ap_ready => grp_lut_div9_chunk_fu_154_ap_ready,
        d_V => grp_lut_div9_chunk_fu_154_d_V,
        r_in_V => grp_lut_div9_chunk_fu_148_ap_return_1,
        ap_return_0 => grp_lut_div9_chunk_fu_154_ap_return_0,
        ap_return_1 => grp_lut_div9_chunk_fu_154_ap_return_1);

    grp_lut_div9_chunk_fu_160 : component lut_div9_chunk
    port map (
        ap_ready => grp_lut_div9_chunk_fu_160_ap_ready,
        d_V => grp_lut_div9_chunk_fu_160_d_V,
        r_in_V => grp_lut_div9_chunk_fu_154_ap_return_1,
        ap_return_0 => grp_lut_div9_chunk_fu_160_ap_return_0,
        ap_return_1 => grp_lut_div9_chunk_fu_160_ap_return_1);

    call_ret_11_i_i_lut_div9_chunk_fu_166 : component lut_div9_chunk
    port map (
        ap_ready => call_ret_11_i_i_lut_div9_chunk_fu_166_ap_ready,
        d_V => p_Result_16_11_i_i_reg_745,
        r_in_V => grp_lut_div9_chunk_fu_160_ap_return_1,
        ap_return_0 => call_ret_11_i_i_lut_div9_chunk_fu_166_ap_return_0,
        ap_return_1 => call_ret_11_i_i_lut_div9_chunk_fu_166_ap_return_1);

    call_ret_12_i_i_lut_div9_chunk_fu_172 : component lut_div9_chunk
    port map (
        ap_ready => call_ret_12_i_i_lut_div9_chunk_fu_172_ap_ready,
        d_V => tmp_14_reg_750,
        r_in_V => call_ret_11_i_i_lut_div9_chunk_fu_166_ap_return_1,
        ap_return_0 => call_ret_12_i_i_lut_div9_chunk_fu_172_ap_return_0,
        ap_return_1 => call_ret_12_i_i_lut_div9_chunk_fu_172_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    p_Repl2_s_reg_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (tmp_1_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_Repl2_s_reg_120 <= new_mant_V_fu_246_p1;
            elsif (((tmp_1_reg_686 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_Repl2_s_reg_120 <= new_mant_V_1_fu_639_p13;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_Repl2_1_reg_690 <= p_Repl2_1_fu_310_p3;
                p_Repl2_2_reg_676 <= p_Val2_s_fu_224_p1(31 downto 31);
                tmp_1_reg_686 <= tmp_1_fu_278_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (tmp_1_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_Result_16_10_i_i_reg_740 <= xf_V_fu_468_p2(5 downto 4);
                p_Result_16_11_i_i_reg_745 <= xf_V_fu_468_p2(3 downto 2);
                p_Result_16_6_i_i_reg_715 <= xf_V_fu_468_p2(15 downto 14);
                p_Result_16_7_i_i_reg_720 <= xf_V_fu_468_p2(13 downto 12);
                p_Result_16_8_i_i_reg_725 <= xf_V_fu_468_p2(11 downto 10);
                p_Result_16_9_i_i_reg_730 <= xf_V_fu_468_p2(9 downto 8);
                p_Result_16_i_i_10_reg_735 <= xf_V_fu_468_p2(7 downto 6);
                q_chunk_V_0_3_i_i_reg_695 <= grp_lut_div9_chunk_fu_148_ap_return_0;
                q_chunk_V_0_4_i_i_reg_700 <= grp_lut_div9_chunk_fu_154_ap_return_0;
                q_chunk_V_0_5_i_i_reg_705 <= grp_lut_div9_chunk_fu_160_ap_return_0;
                r_V_ret_5_i_i_reg_710 <= grp_lut_div9_chunk_fu_160_ap_return_1;
                tmp_14_reg_750 <= tmp_14_fu_610_p1;
                tmp_15_reg_755 <= tmp_15_fu_614_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_done_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_Repl2_s_phi_fu_123_p4_assign_proc : process(tmp_1_reg_686, new_mant_V_1_fu_639_p13, p_Repl2_s_reg_120, ap_CS_fsm_state2)
    begin
        if (((tmp_1_reg_686 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_phi_mux_p_Repl2_s_phi_fu_123_p4 <= new_mant_V_1_fu_639_p13;
        else 
            ap_phi_mux_p_Repl2_s_phi_fu_123_p4 <= p_Repl2_s_reg_120;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= p_Result_s_fu_664_p4;

    grp_lut_div9_chunk_fu_129_d_V_assign_proc : process(ap_CS_fsm_state1, tmp_1_fu_278_p2, tmp_1_reg_686, p_Result_16_6_i_i_reg_715, ap_CS_fsm_state2, xf_V_fu_468_p2)
    begin
        if (((tmp_1_reg_686 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_lut_div9_chunk_fu_129_d_V <= p_Result_16_6_i_i_reg_715;
        elsif (((tmp_1_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_lut_div9_chunk_fu_129_d_V <= xf_V_fu_468_p2(27 downto 26);
        else 
            grp_lut_div9_chunk_fu_129_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div9_chunk_fu_129_r_in_V_assign_proc : process(ap_CS_fsm_state1, tmp_1_fu_278_p2, tmp_1_reg_686, r_V_ret_5_i_i_reg_710, ap_CS_fsm_state2)
    begin
        if (((tmp_1_reg_686 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_lut_div9_chunk_fu_129_r_in_V <= r_V_ret_5_i_i_reg_710;
        elsif (((tmp_1_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_lut_div9_chunk_fu_129_r_in_V <= ap_const_lv4_0;
        else 
            grp_lut_div9_chunk_fu_129_r_in_V <= "XXXX";
        end if; 
    end process;


    grp_lut_div9_chunk_fu_136_d_V_assign_proc : process(ap_CS_fsm_state1, tmp_1_fu_278_p2, tmp_1_reg_686, p_Result_16_7_i_i_reg_720, ap_CS_fsm_state2, xf_V_fu_468_p2)
    begin
        if (((tmp_1_reg_686 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_lut_div9_chunk_fu_136_d_V <= p_Result_16_7_i_i_reg_720;
        elsif (((tmp_1_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_lut_div9_chunk_fu_136_d_V <= xf_V_fu_468_p2(25 downto 24);
        else 
            grp_lut_div9_chunk_fu_136_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div9_chunk_fu_142_d_V_assign_proc : process(ap_CS_fsm_state1, tmp_1_fu_278_p2, tmp_1_reg_686, p_Result_16_8_i_i_reg_725, ap_CS_fsm_state2, xf_V_fu_468_p2)
    begin
        if (((tmp_1_reg_686 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_lut_div9_chunk_fu_142_d_V <= p_Result_16_8_i_i_reg_725;
        elsif (((tmp_1_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_lut_div9_chunk_fu_142_d_V <= xf_V_fu_468_p2(23 downto 22);
        else 
            grp_lut_div9_chunk_fu_142_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div9_chunk_fu_148_d_V_assign_proc : process(ap_CS_fsm_state1, tmp_1_fu_278_p2, tmp_1_reg_686, p_Result_16_9_i_i_reg_730, ap_CS_fsm_state2, xf_V_fu_468_p2)
    begin
        if (((tmp_1_reg_686 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_lut_div9_chunk_fu_148_d_V <= p_Result_16_9_i_i_reg_730;
        elsif (((tmp_1_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_lut_div9_chunk_fu_148_d_V <= xf_V_fu_468_p2(21 downto 20);
        else 
            grp_lut_div9_chunk_fu_148_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div9_chunk_fu_154_d_V_assign_proc : process(ap_CS_fsm_state1, tmp_1_fu_278_p2, tmp_1_reg_686, p_Result_16_i_i_10_reg_735, ap_CS_fsm_state2, xf_V_fu_468_p2)
    begin
        if (((tmp_1_reg_686 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_lut_div9_chunk_fu_154_d_V <= p_Result_16_i_i_10_reg_735;
        elsif (((tmp_1_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_lut_div9_chunk_fu_154_d_V <= xf_V_fu_468_p2(19 downto 18);
        else 
            grp_lut_div9_chunk_fu_154_d_V <= "XX";
        end if; 
    end process;


    grp_lut_div9_chunk_fu_160_d_V_assign_proc : process(ap_CS_fsm_state1, tmp_1_fu_278_p2, tmp_1_reg_686, p_Result_16_10_i_i_reg_740, ap_CS_fsm_state2, xf_V_fu_468_p2)
    begin
        if (((tmp_1_reg_686 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_lut_div9_chunk_fu_160_d_V <= p_Result_16_10_i_i_reg_740;
        elsif (((tmp_1_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_lut_div9_chunk_fu_160_d_V <= xf_V_fu_468_p2(17 downto 16);
        else 
            grp_lut_div9_chunk_fu_160_d_V <= "XX";
        end if; 
    end process;

    icmp4_fu_340_p2 <= "1" when (tmp_12_fu_330_p4 = ap_const_lv7_0) else "0";
    icmp_fu_264_p2 <= "1" when (tmp_fu_254_p4 = ap_const_lv3_0) else "0";
    new_exp_V_1_fu_290_p2 <= std_logic_vector(unsigned(new_exp_V_fu_236_p4) - unsigned(shift_V_cast_cast_fu_270_p3));
    new_exp_V_fu_236_p4 <= p_Val2_s_fu_224_p1(30 downto 23);
    new_mant_V_1_fu_639_p13 <= (((((((((((tmp_15_reg_755 & q_chunk_V_0_3_i_i_reg_695) & q_chunk_V_0_4_i_i_reg_700) & q_chunk_V_0_5_i_i_reg_705) & grp_lut_div9_chunk_fu_129_ap_return_0) & grp_lut_div9_chunk_fu_136_ap_return_0) & grp_lut_div9_chunk_fu_142_ap_return_0) & grp_lut_div9_chunk_fu_148_ap_return_0) & grp_lut_div9_chunk_fu_154_ap_return_0) & grp_lut_div9_chunk_fu_160_ap_return_0) & call_ret_11_i_i_lut_div9_chunk_fu_166_ap_return_0) & call_ret_12_i_i_lut_div9_chunk_fu_172_ap_return_0);
    new_mant_V_fu_246_p1 <= p_Val2_s_fu_224_p1(23 - 1 downto 0);
    p_Repl2_1_fu_310_p3 <= 
        p_new_exp_V_1_fu_296_p3 when (tmp_8_fu_304_p2(0) = '1') else 
        new_exp_V_1_fu_290_p2;
    p_Result_s_fu_664_p4 <= ((p_Repl2_2_reg_676 & p_Repl2_1_reg_690) & ap_phi_mux_p_Repl2_s_phi_fu_123_p4);
    p_Val2_s_fu_224_p1 <= in_r;
    p_new_exp_V_1_fu_296_p3 <= 
        ap_const_lv8_FF when (tmp_1_fu_278_p2(0) = '1') else 
        ap_const_lv8_0;
    sel_tmp3_demorgan_fu_358_p2 <= (tmp_5_fu_324_p2 or tmp_4_fu_318_p2);
    sel_tmp3_fu_364_p2 <= (sel_tmp3_demorgan_fu_358_p2 xor ap_const_lv1_1);
    sel_tmp4_fu_370_p2 <= (sel_tmp3_fu_364_p2 and icmp4_fu_340_p2);
    sel_tmp7_fu_392_p2 <= (tmp_4_fu_318_p2 xor ap_const_lv1_1);
    sel_tmp8_fu_398_p2 <= (tmp_5_fu_324_p2 and sel_tmp7_fu_392_p2);
    shift_V_1_fu_352_p2 <= std_logic_vector(signed(ap_const_lv8_FF) + signed(new_exp_V_fu_236_p4));
    shift_V_2_fu_376_p3 <= 
        shift_V_fu_346_p2 when (sel_tmp4_fu_370_p2(0) = '1') else 
        shift_V_1_fu_352_p2;
    shift_V_3_fu_384_p3 <= 
        ap_const_lv8_0 when (tmp_4_fu_318_p2(0) = '1') else 
        shift_V_2_fu_376_p3;
    shift_V_4_fu_404_p3 <= 
        shift_V_cast_cast_fu_270_p3 when (sel_tmp8_fu_398_p2(0) = '1') else 
        shift_V_3_fu_384_p3;
    shift_V_cast_cast_fu_270_p3 <= 
        ap_const_lv8_4 when (icmp_fu_264_p2(0) = '1') else 
        ap_const_lv8_3;
    shift_V_fu_346_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) - unsigned(new_exp_V_fu_236_p4));
    tmp_10_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_440_p2),28));
    tmp_12_fu_330_p4 <= p_Val2_s_fu_224_p1(30 downto 24);
    tmp_13_fu_456_p1 <= tmp_6_fu_446_p2(28 - 1 downto 0);
    tmp_14_fu_610_p1 <= xf_V_fu_468_p2(2 - 1 downto 0);
    tmp_15_fu_614_p1 <= grp_lut_div9_chunk_fu_142_ap_return_0(1 - 1 downto 0);
    tmp_1_fu_278_p2 <= "1" when (new_exp_V_fu_236_p4 = ap_const_lv8_FF) else "0";
    tmp_2_fu_284_p2 <= "1" when (unsigned(shift_V_cast_cast_fu_270_p3) > unsigned(new_exp_V_fu_236_p4)) else "0";
    tmp_3_cast_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_4_fu_404_p3),24));
    tmp_3_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_V_4_fu_404_p3),32));
    tmp_4_fu_318_p2 <= "1" when (new_exp_V_fu_236_p4 = ap_const_lv8_0) else "0";
    tmp_5_fu_324_p2 <= "1" when (unsigned(shift_V_cast_cast_fu_270_p3) < unsigned(new_exp_V_fu_236_p4)) else "0";
    tmp_6_fu_446_p2 <= std_logic_vector(shift_left(unsigned(tmp_s_fu_428_p1),to_integer(unsigned('0' & tmp_3_fu_432_p1(31-1 downto 0)))));
    tmp_7_fu_440_p2 <= std_logic_vector(shift_right(unsigned(xf_V_1_fu_420_p3),to_integer(unsigned('0' & tmp_3_cast_fu_436_p1(24-1 downto 0)))));
    tmp_8_fu_304_p2 <= (tmp_2_fu_284_p2 or tmp_1_fu_278_p2);
    tmp_9_fu_412_p3 <= (ap_const_lv1_1 & new_mant_V_fu_246_p1);
    tmp_fu_254_p4 <= p_Val2_s_fu_224_p1(22 downto 20);
    tmp_s_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xf_V_1_fu_420_p3),32));
    xf_V_1_fu_420_p3 <= 
        xf_V_3_cast_fu_250_p1 when (tmp_4_fu_318_p2(0) = '1') else 
        tmp_9_fu_412_p3;
    xf_V_2_fu_460_p3 <= 
        tmp_10_fu_452_p1 when (icmp4_fu_340_p2(0) = '1') else 
        tmp_13_fu_456_p1;
    xf_V_3_cast_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(new_mant_V_fu_246_p1),24));
    xf_V_fu_468_p2 <= std_logic_vector(unsigned(ap_const_lv28_4) + unsigned(xf_V_2_fu_460_p3));
end behav;
