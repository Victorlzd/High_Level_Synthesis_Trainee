// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _operator_float_div2_HH_
#define _operator_float_div2_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct operator_float_div2 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > in_r;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    operator_float_div2(sc_module_name name);
    SC_HAS_PROCESS(operator_float_div2);

    ~operator_float_div2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > p_Repl2_2_reg_251;
    sc_signal< sc_lv<8> > new_exp_V_fu_70_p4;
    sc_signal< sc_lv<8> > new_exp_V_reg_256;
    sc_signal< sc_lv<23> > new_mant_V_2_fu_80_p1;
    sc_signal< sc_lv<23> > new_mant_V_2_reg_262;
    sc_signal< sc_lv<1> > tmp_1_fu_84_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_269;
    sc_signal< sc_lv<2> > p_0274_2_fu_132_p3;
    sc_signal< sc_lv<2> > p_0274_2_reg_275;
    sc_signal< sc_lv<1> > tmp_8_fu_140_p2;
    sc_signal< sc_lv<1> > tmp_8_reg_281;
    sc_signal< sc_lv<32> > p_Val2_s_fu_58_p1;
    sc_signal< sc_lv<7> > tmp_11_fu_90_p4;
    sc_signal< sc_lv<2> > tmp_6_fu_106_p4;
    sc_signal< sc_lv<1> > icmp_fu_100_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_126_p2;
    sc_signal< sc_lv<2> > p_shift_V_fu_122_p1;
    sc_signal< sc_lv<2> > shift_V_cast_fu_116_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_149_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_167_p2;
    sc_signal< sc_lv<8> > p_new_exp_V_1_fu_159_p3;
    sc_signal< sc_lv<8> > new_exp_V_1_fu_154_p2;
    sc_signal< sc_lv<24> > xf_V_1_cast_fu_146_p1;
    sc_signal< sc_lv<24> > tmp_5_fu_180_p3;
    sc_signal< sc_lv<24> > xf_V_fu_187_p3;
    sc_signal< sc_lv<24> > tmp_cast_fu_201_p1;
    sc_signal< sc_lv<26> > tmp_9_cast2_fu_194_p1;
    sc_signal< sc_lv<26> > tmp_cast1_fu_198_p1;
    sc_signal< sc_lv<24> > tmp_2_fu_204_p2;
    sc_signal< sc_lv<26> > tmp_7_fu_210_p2;
    sc_signal< sc_lv<23> > tmp_12_fu_216_p1;
    sc_signal< sc_lv<23> > tmp_13_fu_220_p1;
    sc_signal< sc_lv<23> > new_mant_V_1_fu_224_p3;
    sc_signal< sc_lv<8> > p_Repl2_1_fu_172_p3;
    sc_signal< sc_lv<23> > new_mant_V_fu_231_p3;
    sc_signal< sc_lv<32> > p_Result_s_fu_238_p4;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_icmp_fu_100_p2();
    void thread_new_exp_V_1_fu_154_p2();
    void thread_new_exp_V_fu_70_p4();
    void thread_new_mant_V_1_fu_224_p3();
    void thread_new_mant_V_2_fu_80_p1();
    void thread_new_mant_V_fu_231_p3();
    void thread_p_0274_2_fu_132_p3();
    void thread_p_Repl2_1_fu_172_p3();
    void thread_p_Result_s_fu_238_p4();
    void thread_p_Val2_s_fu_58_p1();
    void thread_p_new_exp_V_1_fu_159_p3();
    void thread_p_shift_V_fu_122_p1();
    void thread_shift_V_cast_fu_116_p2();
    void thread_tmp_11_fu_90_p4();
    void thread_tmp_12_fu_216_p1();
    void thread_tmp_13_fu_220_p1();
    void thread_tmp_1_fu_84_p2();
    void thread_tmp_2_fu_204_p2();
    void thread_tmp_3_fu_167_p2();
    void thread_tmp_5_fu_180_p3();
    void thread_tmp_6_fu_106_p4();
    void thread_tmp_7_fu_210_p2();
    void thread_tmp_8_fu_140_p2();
    void thread_tmp_9_cast2_fu_194_p1();
    void thread_tmp_9_fu_126_p2();
    void thread_tmp_cast1_fu_198_p1();
    void thread_tmp_cast_fu_201_p1();
    void thread_tmp_fu_149_p2();
    void thread_xf_V_1_cast_fu_146_p1();
    void thread_xf_V_fu_187_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
