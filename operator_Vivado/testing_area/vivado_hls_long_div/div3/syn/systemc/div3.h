// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _div3_HH_
#define _div3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "div3_mul_64s_66nsbkb.h"

namespace ap_rtl {

struct div3 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > a;
    sc_out< sc_lv<64> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    div3(sc_module_name name);
    SC_HAS_PROCESS(div3);

    ~div3();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    div3_mul_64s_66nsbkb<1,2,64,66,129>* div3_mul_64s_66nsbkb_U1;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_4_reg_117;
    sc_signal< sc_lv<66> > grp_fu_44_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_50_p1;
    sc_signal< sc_lv<129> > grp_fu_44_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<129> > neg_mul_fu_58_p2;
    sc_signal< sc_lv<62> > tmp_5_fu_64_p4;
    sc_signal< sc_lv<62> > tmp_6_fu_78_p4;
    sc_signal< sc_lv<64> > tmp_1_fu_74_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_88_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_92_p3;
    sc_signal< sc_lv<64> > neg_ti_fu_99_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<129> ap_const_lv129_lc_1;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<129> ap_const_lv129_lc_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_43;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<64> ap_const_lv64_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_44_p1();
    void thread_neg_mul_fu_58_p2();
    void thread_neg_ti_fu_99_p2();
    void thread_tmp_1_fu_74_p1();
    void thread_tmp_2_fu_88_p1();
    void thread_tmp_3_fu_92_p3();
    void thread_tmp_4_fu_50_p1();
    void thread_tmp_5_fu_64_p4();
    void thread_tmp_6_fu_78_p4();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
