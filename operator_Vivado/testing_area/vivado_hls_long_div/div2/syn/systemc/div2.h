// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _div2_HH_
#define _div2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "div2_sub_63ns_63nbkb.h"

namespace ap_rtl {

struct div2 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > a;
    sc_out< sc_lv<64> > ap_return;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<63> > ap_var_for_const0;


    // Module declarations
    div2(sc_module_name name);
    SC_HAS_PROCESS(div2);

    ~div2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    div2_sub_63ns_63nbkb<1,2,63,63,63>* div2_sub_63ns_63nbkb_U1;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_3_reg_94;
    sc_signal< sc_lv<62> > tmp_2_reg_104;
    sc_signal< sc_lv<64> > p_neg_fu_44_p2;
    sc_signal< sc_lv<62> > tmp_1_fu_50_p4;
    sc_signal< sc_lv<63> > grp_fu_64_p1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<63> > grp_fu_64_p2;
    sc_signal< sc_lv<63> > p_lshr_f_cast_fu_80_p1;
    sc_signal< sc_lv<63> > tmp_fu_83_p3;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<63> ap_const_lv63_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_64_p1();
    void thread_p_lshr_f_cast_fu_80_p1();
    void thread_p_neg_fu_44_p2();
    void thread_tmp_1_fu_50_p4();
    void thread_tmp_fu_83_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
