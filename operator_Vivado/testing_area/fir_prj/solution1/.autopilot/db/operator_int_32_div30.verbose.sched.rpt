

================================================================
== Vivado HLS Report for 'operator_int_32_div30'
================================================================
* Date:           Tue Jul 24 15:30:17 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        fir_prj
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.832|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    5|    5|    5|    5|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.83>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%in_V_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %in_V)"   --->   Operation 7 'read' 'in_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_Result_i = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_V_read, i32 29, i32 31)" [test.cpp:968->test.cpp:1940]   --->   Operation 8 'partselect' 'p_Result_i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%d_chunk_V_2 = zext i3 %p_Result_i to i4" [test.cpp:968->test.cpp:1940]   --->   Operation 9 'zext' 'd_chunk_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_Result_s = call i6 @_ssdm_op_BitConcatenate.i6.i2.i4(i2 0, i4 %d_chunk_V_2)" [test.cpp:29->test.cpp:950->test.cpp:969->test.cpp:1940]   --->   Operation 10 'bitconcatenate' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.95ns)   --->   "%agg_result_V_i_i = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_s)" [test.cpp:29->test.cpp:950->test.cpp:969->test.cpp:1940]   --->   Operation 11 'mux' 'agg_result_V_i_i' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (1.95ns)   --->   "%agg_result_V_i2_i = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_s)" [test.cpp:29->test.cpp:950->test.cpp:969->test.cpp:1940]   --->   Operation 12 'mux' 'agg_result_V_i2_i' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (1.95ns)   --->   "%agg_result_V_i4_i = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_s)" [test.cpp:29->test.cpp:950->test.cpp:969->test.cpp:1940]   --->   Operation 13 'mux' 'agg_result_V_i4_i' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (1.95ns)   --->   "%agg_result_V_i6_i = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_s)" [test.cpp:29->test.cpp:950->test.cpp:969->test.cpp:1940]   --->   Operation 14 'mux' 'agg_result_V_i6_i' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (1.95ns)   --->   "%agg_result_V_i8_i = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_s)" [test.cpp:29->test.cpp:950->test.cpp:969->test.cpp:1940]   --->   Operation 15 'mux' 'agg_result_V_i8_i' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (1.95ns)   --->   "%agg_result_V_i3_i = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_s)" [test.cpp:29->test.cpp:950->test.cpp:969->test.cpp:1940]   --->   Operation 16 'mux' 'agg_result_V_i3_i' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_Repl2_1 = call i4 @_ssdm_op_PartSelect.i4.i32.i32.i32(i32 %in_V_read, i32 25, i32 28)" [test.cpp:974->test.cpp:1940]   --->   Operation 17 'partselect' 'p_Repl2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_Result_1 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i1.i4(i1 %agg_result_V_i2_i, i1 %agg_result_V_i_i, i4 %p_Repl2_1)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 18 'bitconcatenate' 'p_Result_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.95ns)   --->   "%agg_result_V_i_i3 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_1)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 19 'mux' 'agg_result_V_i_i3' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (1.95ns)   --->   "%agg_result_V_i2_i4 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_1)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 20 'mux' 'agg_result_V_i2_i4' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (1.95ns)   --->   "%agg_result_V_i4_i6 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_1)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 21 'mux' 'agg_result_V_i4_i6' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (1.95ns)   --->   "%agg_result_V_i6_i7 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_1)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 22 'mux' 'agg_result_V_i6_i7' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (1.95ns)   --->   "%agg_result_V_i8_i8 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_1)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 23 'mux' 'agg_result_V_i8_i8' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (1.95ns)   --->   "%agg_result_V_i3_i9 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_1)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 24 'mux' 'agg_result_V_i3_i9' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%p_Repl2_2 = call i4 @_ssdm_op_PartSelect.i4.i32.i32.i32(i32 %in_V_read, i32 21, i32 24)" [test.cpp:974->test.cpp:1940]   --->   Operation 25 'partselect' 'p_Repl2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%p_Result_2 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i1.i4(i1 %agg_result_V_i2_i4, i1 %agg_result_V_i_i3, i4 %p_Repl2_2)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 26 'bitconcatenate' 'p_Result_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (1.95ns)   --->   "%agg_result_V_i_i1 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_2)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 27 'mux' 'agg_result_V_i_i1' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (1.95ns)   --->   "%agg_result_V_i2_i1 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_2)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 28 'mux' 'agg_result_V_i2_i1' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (1.95ns)   --->   "%agg_result_V_i4_i1 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_2)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 29 'mux' 'agg_result_V_i4_i1' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (1.95ns)   --->   "%agg_result_V_i6_i1 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_2)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 30 'mux' 'agg_result_V_i6_i1' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.95ns)   --->   "%agg_result_V_i8_i1 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_2)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 31 'mux' 'agg_result_V_i8_i1' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.95ns)   --->   "%agg_result_V_i3_i1 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_2)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 32 'mux' 'agg_result_V_i3_i1' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%p_Repl2_3 = call i4 @_ssdm_op_PartSelect.i4.i32.i32.i32(i32 %in_V_read, i32 17, i32 20)" [test.cpp:974->test.cpp:1940]   --->   Operation 33 'partselect' 'p_Repl2_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%p_Result_3 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i1.i4(i1 %agg_result_V_i2_i1, i1 %agg_result_V_i_i1, i4 %p_Repl2_3)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 34 'bitconcatenate' 'p_Result_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (1.95ns)   --->   "%agg_result_V_i_i2 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_3)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 35 'mux' 'agg_result_V_i_i2' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (1.95ns)   --->   "%agg_result_V_i2_i2 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_3)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 36 'mux' 'agg_result_V_i2_i2' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (1.95ns)   --->   "%agg_result_V_i4_i2 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_3)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 37 'mux' 'agg_result_V_i4_i2' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (1.95ns)   --->   "%agg_result_V_i6_i2 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_3)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 38 'mux' 'agg_result_V_i6_i2' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (1.95ns)   --->   "%agg_result_V_i8_i2 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_3)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 39 'mux' 'agg_result_V_i8_i2' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.95ns)   --->   "%agg_result_V_i3_i2 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_3)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 40 'mux' 'agg_result_V_i3_i2' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%p_Repl2_4 = call i4 @_ssdm_op_PartSelect.i4.i32.i32.i32(i32 %in_V_read, i32 13, i32 16)" [test.cpp:974->test.cpp:1940]   --->   Operation 41 'partselect' 'p_Repl2_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%p_Repl2_5 = call i4 @_ssdm_op_PartSelect.i4.i32.i32.i32(i32 %in_V_read, i32 9, i32 12)" [test.cpp:974->test.cpp:1940]   --->   Operation 42 'partselect' 'p_Repl2_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%p_Repl2_6 = call i4 @_ssdm_op_PartSelect.i4.i32.i32.i32(i32 %in_V_read, i32 5, i32 8)" [test.cpp:974->test.cpp:1940]   --->   Operation 43 'partselect' 'p_Repl2_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%p_Repl2_7 = call i4 @_ssdm_op_PartSelect.i4.i32.i32.i32(i32 %in_V_read, i32 1, i32 4)" [test.cpp:974->test.cpp:1940]   --->   Operation 44 'partselect' 'p_Repl2_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%d_chunk_V = zext i1 %agg_result_V_i8_i to i3" [test.cpp:1925->test.cpp:1940]   --->   Operation 45 'zext' 'd_chunk_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (3.42ns)   --->   "%call_ret_i5 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %d_chunk_V, i3 0)" [test.cpp:1926->test.cpp:1940]   --->   Operation 46 'call' 'call_ret_i5' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%q_chunk_V = extractvalue { i3, i3 } %call_ret_i5, 0" [test.cpp:1926->test.cpp:1940]   --->   Operation 47 'extractvalue' 'q_chunk_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%r_V = extractvalue { i3, i3 } %call_ret_i5, 1" [test.cpp:1926->test.cpp:1940]   --->   Operation 48 'extractvalue' 'r_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%tmp = trunc i3 %q_chunk_V to i1" [test.cpp:1927->test.cpp:1940]   --->   Operation 49 'trunc' 'tmp' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.83>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%p_Result_4 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i1.i4(i1 %agg_result_V_i2_i2, i1 %agg_result_V_i_i2, i4 %p_Repl2_4)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 50 'bitconcatenate' 'p_Result_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (1.95ns)   --->   "%agg_result_V_i_i4 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_4)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 51 'mux' 'agg_result_V_i_i4' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (1.95ns)   --->   "%agg_result_V_i2_i3 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_4)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 52 'mux' 'agg_result_V_i2_i3' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (1.95ns)   --->   "%agg_result_V_i4_i3 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_4)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 53 'mux' 'agg_result_V_i4_i3' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (1.95ns)   --->   "%agg_result_V_i6_i3 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_4)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 54 'mux' 'agg_result_V_i6_i3' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (1.95ns)   --->   "%agg_result_V_i8_i3 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_4)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 55 'mux' 'agg_result_V_i8_i3' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (1.95ns)   --->   "%agg_result_V_i3_i3 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_4)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 56 'mux' 'agg_result_V_i3_i3' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%p_Result_5 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i1.i4(i1 %agg_result_V_i2_i3, i1 %agg_result_V_i_i4, i4 %p_Repl2_5)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 57 'bitconcatenate' 'p_Result_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (1.95ns)   --->   "%agg_result_V_i_i5 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_5)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 58 'mux' 'agg_result_V_i_i5' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (1.95ns)   --->   "%agg_result_V_i2_i5 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_5)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 59 'mux' 'agg_result_V_i2_i5' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (1.95ns)   --->   "%agg_result_V_i4_i4 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_5)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 60 'mux' 'agg_result_V_i4_i4' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (1.95ns)   --->   "%agg_result_V_i6_i4 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_5)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 61 'mux' 'agg_result_V_i6_i4' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (1.95ns)   --->   "%agg_result_V_i8_i4 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_5)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 62 'mux' 'agg_result_V_i8_i4' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (1.95ns)   --->   "%agg_result_V_i3_i4 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_5)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 63 'mux' 'agg_result_V_i3_i4' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%p_Result_6 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i1.i4(i1 %agg_result_V_i2_i5, i1 %agg_result_V_i_i5, i4 %p_Repl2_6)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 64 'bitconcatenate' 'p_Result_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (1.95ns)   --->   "%agg_result_V_i_i6 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_6)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 65 'mux' 'agg_result_V_i_i6' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (1.95ns)   --->   "%agg_result_V_i2_i6 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_6)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 66 'mux' 'agg_result_V_i2_i6' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (1.95ns)   --->   "%agg_result_V_i4_i5 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_6)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 67 'mux' 'agg_result_V_i4_i5' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (1.95ns)   --->   "%agg_result_V_i6_i5 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_6)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 68 'mux' 'agg_result_V_i6_i5' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (1.95ns)   --->   "%agg_result_V_i8_i5 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_6)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 69 'mux' 'agg_result_V_i8_i5' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (1.95ns)   --->   "%agg_result_V_i3_i5 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_6)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 70 'mux' 'agg_result_V_i3_i5' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%p_Result_7 = call i6 @_ssdm_op_BitConcatenate.i6.i1.i1.i4(i1 %agg_result_V_i2_i6, i1 %agg_result_V_i_i6, i4 %p_Repl2_7)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 71 'bitconcatenate' 'p_Result_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (1.95ns)   --->   "%agg_result_V_i_i69 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_7)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 72 'mux' 'agg_result_V_i_i69' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (1.95ns)   --->   "%agg_result_V_i2_i70 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 false, i1 false, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_7)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 73 'mux' 'agg_result_V_i2_i70' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (1.95ns)   --->   "%agg_result_V_i4_i7 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_7)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 74 'mux' 'agg_result_V_i4_i7' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (1.95ns)   --->   "%agg_result_V_i6_i6 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_7)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 75 'mux' 'agg_result_V_i6_i6' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (1.95ns)   --->   "%agg_result_V_i8_i6 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_7)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 76 'mux' 'agg_result_V_i8_i6' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (1.95ns)   --->   "%agg_result_V_i3_i6 = call i1 @_ssdm_op_Mux.ap_auto.64i1.i6(i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i1 undef, i6 %p_Result_7)" [test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940]   --->   Operation 77 'mux' 'agg_result_V_i3_i6' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%p_Result_25_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %agg_result_V_i6_i, i1 %agg_result_V_i4_i, i1 %agg_result_V_i3_i9)" [test.cpp:1931->test.cpp:1940]   --->   Operation 78 'bitconcatenate' 'p_Result_25_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (3.42ns)   --->   "%call_ret4_i9 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_25_i, i3 %r_V)" [test.cpp:1932->test.cpp:1940]   --->   Operation 79 'call' 'call_ret4_i9' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%q_chunk_V_ret1_i1 = extractvalue { i3, i3 } %call_ret4_i9, 0" [test.cpp:1932->test.cpp:1940]   --->   Operation 80 'extractvalue' 'q_chunk_V_ret1_i1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%r_V_ret2_i1 = extractvalue { i3, i3 } %call_ret4_i9, 1" [test.cpp:1932->test.cpp:1940]   --->   Operation 81 'extractvalue' 'r_V_ret2_i1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%p_Result_25_1_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %agg_result_V_i8_i8, i1 %agg_result_V_i6_i7, i1 %agg_result_V_i4_i6)" [test.cpp:1931->test.cpp:1940]   --->   Operation 82 'bitconcatenate' 'p_Result_25_1_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (3.42ns)   --->   "%call_ret4_1_i1 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_25_1_i, i3 %r_V_ret2_i1)" [test.cpp:1932->test.cpp:1940]   --->   Operation 83 'call' 'call_ret4_1_i1' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%q_chunk_V_ret1_1_i1 = extractvalue { i3, i3 } %call_ret4_1_i1, 0" [test.cpp:1932->test.cpp:1940]   --->   Operation 84 'extractvalue' 'q_chunk_V_ret1_1_i1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%r_V_ret2_1_i1 = extractvalue { i3, i3 } %call_ret4_1_i1, 1" [test.cpp:1932->test.cpp:1940]   --->   Operation 85 'extractvalue' 'r_V_ret2_1_i1' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.84>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%p_Result_25_2_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %agg_result_V_i3_i1, i1 %agg_result_V_i8_i1, i1 %agg_result_V_i6_i1)" [test.cpp:1931->test.cpp:1940]   --->   Operation 86 'bitconcatenate' 'p_Result_25_2_i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (3.42ns)   --->   "%call_ret4_2_i1 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_25_2_i, i3 %r_V_ret2_1_i1)" [test.cpp:1932->test.cpp:1940]   --->   Operation 87 'call' 'call_ret4_2_i1' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%q_chunk_V_ret1_2_i1 = extractvalue { i3, i3 } %call_ret4_2_i1, 0" [test.cpp:1932->test.cpp:1940]   --->   Operation 88 'extractvalue' 'q_chunk_V_ret1_2_i1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%r_V_ret2_2_i1 = extractvalue { i3, i3 } %call_ret4_2_i1, 1" [test.cpp:1932->test.cpp:1940]   --->   Operation 89 'extractvalue' 'r_V_ret2_2_i1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%p_Result_25_3_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %agg_result_V_i4_i1, i1 %agg_result_V_i3_i2, i1 %agg_result_V_i8_i2)" [test.cpp:1931->test.cpp:1940]   --->   Operation 90 'bitconcatenate' 'p_Result_25_3_i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (3.42ns)   --->   "%call_ret4_3_i1 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_25_3_i, i3 %r_V_ret2_2_i1)" [test.cpp:1932->test.cpp:1940]   --->   Operation 91 'call' 'call_ret4_3_i1' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%q_chunk_V_ret1_3_i1 = extractvalue { i3, i3 } %call_ret4_3_i1, 0" [test.cpp:1932->test.cpp:1940]   --->   Operation 92 'extractvalue' 'q_chunk_V_ret1_3_i1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%r_V_ret2_3_i1 = extractvalue { i3, i3 } %call_ret4_3_i1, 1" [test.cpp:1932->test.cpp:1940]   --->   Operation 93 'extractvalue' 'r_V_ret2_3_i1' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 6.84>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%p_Result_25_4_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %agg_result_V_i6_i2, i1 %agg_result_V_i4_i2, i1 %agg_result_V_i3_i3)" [test.cpp:1931->test.cpp:1940]   --->   Operation 94 'bitconcatenate' 'p_Result_25_4_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 95 [1/1] (3.42ns)   --->   "%call_ret4_4_i1 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_25_4_i, i3 %r_V_ret2_3_i1)" [test.cpp:1932->test.cpp:1940]   --->   Operation 95 'call' 'call_ret4_4_i1' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%q_chunk_V_ret1_4_i1 = extractvalue { i3, i3 } %call_ret4_4_i1, 0" [test.cpp:1932->test.cpp:1940]   --->   Operation 96 'extractvalue' 'q_chunk_V_ret1_4_i1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%r_V_ret2_4_i1 = extractvalue { i3, i3 } %call_ret4_4_i1, 1" [test.cpp:1932->test.cpp:1940]   --->   Operation 97 'extractvalue' 'r_V_ret2_4_i1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%p_Result_25_5_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %agg_result_V_i8_i3, i1 %agg_result_V_i6_i3, i1 %agg_result_V_i4_i3)" [test.cpp:1931->test.cpp:1940]   --->   Operation 98 'bitconcatenate' 'p_Result_25_5_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (3.42ns)   --->   "%call_ret4_5_i1 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_25_5_i, i3 %r_V_ret2_4_i1)" [test.cpp:1932->test.cpp:1940]   --->   Operation 99 'call' 'call_ret4_5_i1' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "%q_chunk_V_ret1_5_i1 = extractvalue { i3, i3 } %call_ret4_5_i1, 0" [test.cpp:1932->test.cpp:1940]   --->   Operation 100 'extractvalue' 'q_chunk_V_ret1_5_i1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%r_V_ret2_5_i1 = extractvalue { i3, i3 } %call_ret4_5_i1, 1" [test.cpp:1932->test.cpp:1940]   --->   Operation 101 'extractvalue' 'r_V_ret2_5_i1' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 6.84>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%p_Result_25_6_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %agg_result_V_i3_i4, i1 %agg_result_V_i8_i4, i1 %agg_result_V_i6_i4)" [test.cpp:1931->test.cpp:1940]   --->   Operation 102 'bitconcatenate' 'p_Result_25_6_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (3.42ns)   --->   "%call_ret4_6_i1 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_25_6_i, i3 %r_V_ret2_5_i1)" [test.cpp:1932->test.cpp:1940]   --->   Operation 103 'call' 'call_ret4_6_i1' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%q_chunk_V_ret1_6_i1 = extractvalue { i3, i3 } %call_ret4_6_i1, 0" [test.cpp:1932->test.cpp:1940]   --->   Operation 104 'extractvalue' 'q_chunk_V_ret1_6_i1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%r_V_ret2_6_i = extractvalue { i3, i3 } %call_ret4_6_i1, 1" [test.cpp:1932->test.cpp:1940]   --->   Operation 105 'extractvalue' 'r_V_ret2_6_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%p_Result_25_7_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %agg_result_V_i4_i4, i1 %agg_result_V_i3_i5, i1 %agg_result_V_i8_i5)" [test.cpp:1931->test.cpp:1940]   --->   Operation 106 'bitconcatenate' 'p_Result_25_7_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (3.42ns)   --->   "%call_ret4_7_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_25_7_i, i3 %r_V_ret2_6_i)" [test.cpp:1932->test.cpp:1940]   --->   Operation 107 'call' 'call_ret4_7_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%q_chunk_V_ret1_7_i = extractvalue { i3, i3 } %call_ret4_7_i, 0" [test.cpp:1932->test.cpp:1940]   --->   Operation 108 'extractvalue' 'q_chunk_V_ret1_7_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (0.00ns)   --->   "%r_V_ret2_7_i = extractvalue { i3, i3 } %call_ret4_7_i, 1" [test.cpp:1932->test.cpp:1940]   --->   Operation 109 'extractvalue' 'r_V_ret2_7_i' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 6.84>
ST_6 : Operation 110 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0), !map !120"   --->   Operation 110 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 111 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %in_V), !map !126"   --->   Operation 111 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 112 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([22 x i8]* @operator_int_32_div3) nounwind"   --->   Operation 112 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 113 [1/1] (0.00ns)   --->   "%p_Result_25_8_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %agg_result_V_i6_i5, i1 %agg_result_V_i4_i5, i1 %agg_result_V_i3_i6)" [test.cpp:1931->test.cpp:1940]   --->   Operation 113 'bitconcatenate' 'p_Result_25_8_i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 114 [1/1] (3.42ns)   --->   "%call_ret4_8_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_25_8_i, i3 %r_V_ret2_7_i)" [test.cpp:1932->test.cpp:1940]   --->   Operation 114 'call' 'call_ret4_8_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 115 [1/1] (0.00ns)   --->   "%q_chunk_V_ret1_8_i = extractvalue { i3, i3 } %call_ret4_8_i, 0" [test.cpp:1932->test.cpp:1940]   --->   Operation 115 'extractvalue' 'q_chunk_V_ret1_8_i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 116 [1/1] (0.00ns)   --->   "%r_V_ret2_8_i = extractvalue { i3, i3 } %call_ret4_8_i, 1" [test.cpp:1932->test.cpp:1940]   --->   Operation 116 'extractvalue' 'r_V_ret2_8_i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 117 [1/1] (0.00ns)   --->   "%p_Result_25_9_i = call i3 @_ssdm_op_BitConcatenate.i3.i1.i1.i1(i1 %agg_result_V_i8_i6, i1 %agg_result_V_i6_i6, i1 %agg_result_V_i4_i7)" [test.cpp:1931->test.cpp:1940]   --->   Operation 117 'bitconcatenate' 'p_Result_25_9_i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 118 [1/1] (3.42ns)   --->   "%call_ret4_9_i = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_25_9_i, i3 %r_V_ret2_8_i)" [test.cpp:1932->test.cpp:1940]   --->   Operation 118 'call' 'call_ret4_9_i' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "%q_chunk_V_ret1_9_i = extractvalue { i3, i3 } %call_ret4_9_i, 0" [test.cpp:1932->test.cpp:1940]   --->   Operation 119 'extractvalue' 'q_chunk_V_ret1_9_i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_i = call i31 @_ssdm_op_BitConcatenate.i31.i1.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3(i1 %tmp, i3 %q_chunk_V_ret1_i1, i3 %q_chunk_V_ret1_1_i1, i3 %q_chunk_V_ret1_2_i1, i3 %q_chunk_V_ret1_3_i1, i3 %q_chunk_V_ret1_4_i1, i3 %q_chunk_V_ret1_5_i1, i3 %q_chunk_V_ret1_6_i1, i3 %q_chunk_V_ret1_7_i, i3 %q_chunk_V_ret1_8_i, i3 %q_chunk_V_ret1_9_i)" [test.cpp:1933->test.cpp:1940]   --->   Operation 120 'bitconcatenate' 'tmp_i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 121 [1/1] (0.00ns)   --->   "%agg_result_V = zext i31 %tmp_i to i32" [test.cpp:1940]   --->   Operation 121 'zext' 'agg_result_V' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 122 [1/1] (0.00ns)   --->   "ret i32 %agg_result_V" [test.cpp:1940]   --->   Operation 122 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 7.83ns
The critical path consists of the following:
	wire read on port 'in_V' [5]  (0 ns)
	'mux' operation ('agg_result_V_i_i', test.cpp:29->test.cpp:950->test.cpp:969->test.cpp:1940) [9]  (1.96 ns)
	'mux' operation ('agg_result_V_i_i3', test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940) [17]  (1.96 ns)
	'mux' operation ('agg_result_V_i_i1', test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940) [25]  (1.96 ns)
	'mux' operation ('agg_result_V_i_i2', test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940) [33]  (1.96 ns)

 <State 2>: 7.83ns
The critical path consists of the following:
	'mux' operation ('agg_result_V_i_i4', test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940) [41]  (1.96 ns)
	'mux' operation ('agg_result_V_i_i5', test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940) [49]  (1.96 ns)
	'mux' operation ('agg_result_V_i_i6', test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940) [57]  (1.96 ns)
	'mux' operation ('agg_result_V_i_i69', test.cpp:29->test.cpp:950->test.cpp:975->test.cpp:1940) [65]  (1.96 ns)

 <State 3>: 6.85ns
The critical path consists of the following:
	'call' operation ('call_ret4_2_i1', test.cpp:1932->test.cpp:1940) to 'lut_div5_chunk' [85]  (3.42 ns)
	'call' operation ('call_ret4_3_i1', test.cpp:1932->test.cpp:1940) to 'lut_div5_chunk' [89]  (3.42 ns)

 <State 4>: 6.85ns
The critical path consists of the following:
	'call' operation ('call_ret4_4_i1', test.cpp:1932->test.cpp:1940) to 'lut_div5_chunk' [93]  (3.42 ns)
	'call' operation ('call_ret4_5_i1', test.cpp:1932->test.cpp:1940) to 'lut_div5_chunk' [97]  (3.42 ns)

 <State 5>: 6.85ns
The critical path consists of the following:
	'call' operation ('call_ret4_6_i1', test.cpp:1932->test.cpp:1940) to 'lut_div5_chunk' [101]  (3.42 ns)
	'call' operation ('call_ret4_7_i', test.cpp:1932->test.cpp:1940) to 'lut_div5_chunk' [105]  (3.42 ns)

 <State 6>: 6.85ns
The critical path consists of the following:
	'call' operation ('call_ret4_8_i', test.cpp:1932->test.cpp:1940) to 'lut_div5_chunk' [109]  (3.42 ns)
	'call' operation ('call_ret4_9_i', test.cpp:1932->test.cpp:1940) to 'lut_div5_chunk' [113]  (3.42 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
