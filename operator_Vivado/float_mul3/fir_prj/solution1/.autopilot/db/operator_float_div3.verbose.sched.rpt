

================================================================
== Vivado HLS Report for 'operator_float_div3'
================================================================
* Date:           Fri Aug 24 11:07:43 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        fir_prj
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.610|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    1|    1|    1|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.61>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%in_read = call float @_ssdm_op_Read.ap_auto.float(float %in_r) nounwind"   --->   Operation 3 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%p_Val2_s = bitcast float %in_read to i32" [float_mul3.cpp:18->float_mul3.cpp:47]   --->   Operation 4 'bitcast' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%p_Repl2_2 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_s, i32 31)" [float_mul3.cpp:19->float_mul3.cpp:47]   --->   Operation 5 'bitselect' 'p_Repl2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%new_exp_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %p_Val2_s, i32 23, i32 30) nounwind" [float_mul3.cpp:20->float_mul3.cpp:47]   --->   Operation 6 'partselect' 'new_exp_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns) (grouped into LUT with out node newSel2)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_s, i32 23)" [float_mul3.cpp:21->float_mul3.cpp:47]   --->   Operation 7 'bitselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%new_mant_V_1 = trunc i32 %p_Val2_s to i23" [float_mul3.cpp:21->float_mul3.cpp:47]   --->   Operation 8 'trunc' 'new_mant_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%xf_V_3 = zext i23 %new_mant_V_1 to i26" [float_mul3.cpp:52]   --->   Operation 9 'zext' 'xf_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.51ns)   --->   "%tmp = icmp ugt i23 %new_mant_V_1, 2796202" [float_mul3.cpp:53]   --->   Operation 10 'icmp' 'tmp' <Predicate = true> <Delay = 1.51> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node new_exp_V_2)   --->   "%p_cast_cast = select i1 %tmp, i8 2, i8 1" [float_mul3.cpp:53]   --->   Operation 11 'select' 'p_cast_cast' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (1.22ns)   --->   "%tmp_1 = icmp eq i8 %new_exp_V, 0" [float_mul3.cpp:55]   --->   Operation 12 'icmp' 'tmp_1' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_shl = call i25 @_ssdm_op_BitConcatenate.i25.i23.i2(i23 %new_mant_V_1, i2 0)" [float_mul3.cpp:56]   --->   Operation 13 'bitconcatenate' 'p_shl' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i25 %p_shl to i26" [float_mul3.cpp:56]   --->   Operation 14 'zext' 'p_shl_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.65ns)   --->   "%xf_V_4 = sub i26 %p_shl_cast, %xf_V_3" [float_mul3.cpp:56]   --->   Operation 15 'sub' 'xf_V_4' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.39> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_Result_s = call i26 @llvm.part.select.i26(i26 %xf_V_4, i32 25, i32 0) nounwind" [float_mul3.cpp:57]   --->   Operation 16 'partselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_Result_1 = call i32 @_ssdm_op_BitConcatenate.i32.i6.i26(i6 -1, i26 %p_Result_s)" [float_mul3.cpp:57]   --->   Operation 17 'bitconcatenate' 'p_Result_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (2.12ns)   --->   "%val_assign = call i32 @llvm.cttz.i32(i32 %p_Result_1, i1 true) nounwind" [float_mul3.cpp:57]   --->   Operation 18 'cttz' 'val_assign' <Predicate = true> <Delay = 2.12> <Core = "CTTZ">   --->   Core 60 'CTTZ' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'cttz'> <InPorts = 1> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%clz_V = trunc i32 %val_assign to i5" [float_mul3.cpp:57]   --->   Operation 19 'trunc' 'clz_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.11ns)   --->   "%tmp_4 = icmp ult i5 %clz_V, 3" [float_mul3.cpp:58]   --->   Operation 20 'icmp' 'tmp_4' <Predicate = true> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (1.22ns)   --->   "%tmp_5 = icmp eq i8 %new_exp_V, -1" [float_mul3.cpp:64]   --->   Operation 21 'icmp' 'tmp_5' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_6_cast = zext i5 %clz_V to i6" [float_mul3.cpp:59]   --->   Operation 22 'zext' 'tmp_6_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.33ns)   --->   "%new_exp_V_1 = sub i6 3, %tmp_6_cast" [float_mul3.cpp:59]   --->   Operation 23 'sub' 'new_exp_V_1' <Predicate = true> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.39> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node newSel2)   --->   "%new_exp_V_1_cast = sext i6 %new_exp_V_1 to i8" [float_mul3.cpp:59]   --->   Operation 24 'sext' 'new_exp_V_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node tmp_3)   --->   "%r_V_cast_cast = select i1 %tmp, i8 -3, i8 -2" [float_mul3.cpp:53]   --->   Operation 25 'select' 'r_V_cast_cast' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (1.22ns) (out node of the LUT)   --->   "%tmp_3 = icmp ult i8 %new_exp_V, %r_V_cast_cast" [float_mul3.cpp:65]   --->   Operation 26 'icmp' 'tmp_3' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_7 = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %new_mant_V_1)" [float_mul3.cpp:68]   --->   Operation 27 'bitconcatenate' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%p_Result_2 = zext i24 %tmp_7 to i26" [float_mul3.cpp:68]   --->   Operation 28 'zext' 'p_Result_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%p_shl1 = call i26 @_ssdm_op_BitConcatenate.i26.i1.i23.i2(i1 true, i23 %new_mant_V_1, i2 0)" [float_mul3.cpp:69]   --->   Operation 29 'bitconcatenate' 'p_shl1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.67ns)   --->   "%xf_V_2 = sub i26 %p_shl1, %p_Result_2" [float_mul3.cpp:69]   --->   Operation 30 'sub' 'xf_V_2' <Predicate = true> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.39> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_3)   --->   "%tmp_8 = call i23 @_ssdm_op_PartSelect.i23.i26.i32.i32(i26 %xf_V_2, i32 2, i32 24)" [float_mul3.cpp:69]   --->   Operation 31 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_3)   --->   "%tmp_11 = call i23 @_ssdm_op_PartSelect.i23.i26.i32.i32(i26 %xf_V_2, i32 1, i32 23)" [float_mul3.cpp:69]   --->   Operation 32 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_3)   --->   "%new_mant_V_8 = select i1 %tmp, i23 %tmp_8, i23 %tmp_11" [float_mul3.cpp:53]   --->   Operation 33 'select' 'new_mant_V_8' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_3)   --->   "%sel_tmp = xor i1 %tmp_5, true" [float_mul3.cpp:64]   --->   Operation 34 'xor' 'sel_tmp' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_3)   --->   "%sel_tmp1 = and i1 %tmp_3, %sel_tmp" [float_mul3.cpp:65]   --->   Operation 35 'and' 'sel_tmp1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.73ns) (out node of the LUT)   --->   "%new_mant_V_3 = select i1 %sel_tmp1, i23 %new_mant_V_8, i23 0" [float_mul3.cpp:65]   --->   Operation 36 'select' 'new_mant_V_3' <Predicate = true> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.73ns) (out node of the LUT)   --->   "%new_mant_V_4 = select i1 %tmp_5, i23 %new_mant_V_1, i23 %new_mant_V_3" [float_mul3.cpp:64]   --->   Operation 37 'select' 'new_mant_V_4' <Predicate = true> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (1.39ns) (out node of the LUT)   --->   "%new_exp_V_2 = add i8 %new_exp_V, %p_cast_cast" [float_mul3.cpp:76]   --->   Operation 38 'add' 'new_exp_V_2' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.39> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.61ns)   --->   "%sel_tmp5 = and i1 %tmp_1, %tmp_4" [float_mul3.cpp:55]   --->   Operation 39 'and' 'sel_tmp5' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp8)   --->   "%sel_tmp7 = xor i1 %tmp_4, true" [float_mul3.cpp:58]   --->   Operation 40 'xor' 'sel_tmp7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.61ns) (out node of the LUT)   --->   "%sel_tmp8 = and i1 %tmp_1, %sel_tmp7" [float_mul3.cpp:55]   --->   Operation 41 'and' 'sel_tmp8' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp3)   --->   "%sel_tmp2 = xor i1 %tmp_1, true" [float_mul3.cpp:55]   --->   Operation 42 'xor' 'sel_tmp2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.61ns) (out node of the LUT)   --->   "%sel_tmp3 = and i1 %tmp_5, %sel_tmp2" [float_mul3.cpp:64]   --->   Operation 43 'and' 'sel_tmp3' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node newSel2)   --->   "%newSel = and i1 %sel_tmp3, %tmp_10" [float_mul3.cpp:64]   --->   Operation 44 'and' 'newSel' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node newSel2)   --->   "%newSel_cast = select i1 %newSel, i8 -1, i8 0" [float_mul3.cpp:64]   --->   Operation 45 'select' 'newSel_cast' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.61ns)   --->   "%or_cond = or i1 %sel_tmp3, %sel_tmp8" [float_mul3.cpp:29->float_mul3.cpp:78]   --->   Operation 46 'or' 'or_cond' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node newSel2)   --->   "%newSel1 = select i1 %sel_tmp5, i8 %new_exp_V_1_cast, i8 %new_exp_V_2" [float_mul3.cpp:55]   --->   Operation 47 'select' 'newSel1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%or_cond1 = or i1 %sel_tmp5, %tmp_3" [float_mul3.cpp:29->float_mul3.cpp:78]   --->   Operation 48 'or' 'or_cond1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.74ns) (out node of the LUT)   --->   "%newSel2 = select i1 %or_cond, i8 %newSel_cast, i8 %newSel1" [float_mul3.cpp:29->float_mul3.cpp:78]   --->   Operation 49 'select' 'newSel2' <Predicate = true> <Delay = 0.74> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node p_Repl2_1)   --->   "%or_cond2 = or i1 %or_cond, %or_cond1" [float_mul3.cpp:29->float_mul3.cpp:78]   --->   Operation 50 'or' 'or_cond2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.74ns) (out node of the LUT)   --->   "%p_Repl2_1 = select i1 %or_cond2, i8 %newSel2, i8 -1" [float_mul3.cpp:29->float_mul3.cpp:78]   --->   Operation 51 'select' 'p_Repl2_1' <Predicate = true> <Delay = 0.74> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 2 <SV = 1> <Delay = 6.56>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %in_r) nounwind, !map !158"   --->   Operation 52 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float 0.000000e+00) nounwind, !map !164"   --->   Operation 53 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([20 x i8]* @operator_float_div3_s) nounwind"   --->   Operation 54 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (1.33ns)   --->   "%r_V = sub i6 2, %tmp_6_cast" [float_mul3.cpp:60]   --->   Operation 55 'sub' 'r_V' <Predicate = (sel_tmp5 & !sel_tmp8 & !sel_tmp3)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.39> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_5)   --->   "%tmp_15 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %r_V, i32 5)" [float_mul3.cpp:60]   --->   Operation 56 'bitselect' 'tmp_15' <Predicate = (sel_tmp5 & !sel_tmp8 & !sel_tmp3)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_7)   --->   "%new_mant_V_2 = trunc i26 %xf_V_4 to i23" [float_mul3.cpp:62]   --->   Operation 57 'trunc' 'new_mant_V_2' <Predicate = (sel_tmp8 & !sel_tmp3)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_5)   --->   "%tmp_cast = sext i6 %r_V to i26" [float_mul3.cpp:60]   --->   Operation 58 'sext' 'tmp_cast' <Predicate = (sel_tmp5 & !sel_tmp8 & !sel_tmp3)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_5)   --->   "%tmp_s = zext i26 %xf_V_4 to i32" [float_mul3.cpp:60]   --->   Operation 59 'zext' 'tmp_s' <Predicate = (sel_tmp5 & !sel_tmp8 & !sel_tmp3)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (1.35ns)   --->   "%tmp_2 = sub i6 0, %r_V" [float_mul3.cpp:60]   --->   Operation 60 'sub' 'tmp_2' <Predicate = (sel_tmp5 & !sel_tmp8 & !sel_tmp3)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.39> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_5)   --->   "%tmp_11_cast = sext i6 %tmp_2 to i32" [float_mul3.cpp:60]   --->   Operation 61 'sext' 'tmp_11_cast' <Predicate = (sel_tmp5 & !sel_tmp8 & !sel_tmp3)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_5)   --->   "%tmp_6 = shl i32 %tmp_s, %tmp_11_cast" [float_mul3.cpp:60]   --->   Operation 62 'shl' 'tmp_6' <Predicate = (sel_tmp5 & !sel_tmp8 & !sel_tmp3)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.40> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_5)   --->   "%tmp_9 = lshr i26 %xf_V_4, %tmp_cast" [float_mul3.cpp:60]   --->   Operation 63 'lshr' 'tmp_9' <Predicate = (sel_tmp5 & !sel_tmp8 & !sel_tmp3)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.40> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_5)   --->   "%tmp_17 = trunc i32 %tmp_6 to i23" [float_mul3.cpp:60]   --->   Operation 64 'trunc' 'tmp_17' <Predicate = (sel_tmp5 & !sel_tmp8 & !sel_tmp3)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_5)   --->   "%tmp_18 = trunc i26 %tmp_9 to i23" [float_mul3.cpp:60]   --->   Operation 65 'trunc' 'tmp_18' <Predicate = (sel_tmp5 & !sel_tmp8 & !sel_tmp3)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (2.40ns) (out node of the LUT)   --->   "%new_mant_V_5 = select i1 %tmp_15, i23 %tmp_17, i23 %tmp_18" [float_mul3.cpp:60]   --->   Operation 66 'select' 'new_mant_V_5' <Predicate = (sel_tmp5 & !sel_tmp8 & !sel_tmp3)> <Delay = 2.40> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node new_mant_V_7)   --->   "%new_mant_V_6 = select i1 %sel_tmp5, i23 %new_mant_V_5, i23 %new_mant_V_4" [float_mul3.cpp:29->float_mul3.cpp:78]   --->   Operation 67 'select' 'new_mant_V_6' <Predicate = (!sel_tmp8 & !sel_tmp3)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.73ns) (out node of the LUT)   --->   "%new_mant_V_7 = select i1 %sel_tmp8, i23 %new_mant_V_2, i23 %new_mant_V_6" [float_mul3.cpp:29->float_mul3.cpp:78]   --->   Operation 68 'select' 'new_mant_V_7' <Predicate = (!sel_tmp3)> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.73ns) (out node of the LUT)   --->   "%new_mant_V = select i1 %sel_tmp3, i23 %new_mant_V_4, i23 %new_mant_V_7" [float_mul3.cpp:29->float_mul3.cpp:78]   --->   Operation 69 'select' 'new_mant_V' <Predicate = true> <Delay = 0.73> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%p_Result_3 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i23(i1 %p_Repl2_2, i8 %p_Repl2_1, i23 %new_mant_V) nounwind" [float_mul3.cpp:30->float_mul3.cpp:78]   --->   Operation 70 'bitconcatenate' 'p_Result_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%out = bitcast i32 %p_Result_3 to float" [float_mul3.cpp:31->float_mul3.cpp:78]   --->   Operation 71 'bitcast' 'out' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "ret float %out" [float_mul3.cpp:79]   --->   Operation 72 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 7.61ns
The critical path consists of the following:
	wire read on port 'in_r' [5]  (0 ns)
	'sub' operation ('xf.V', float_mul3.cpp:56) [17]  (1.66 ns)
	'cttz' operation ('val', float_mul3.cpp:57) [20]  (2.12 ns)
	'icmp' operation ('tmp_4', float_mul3.cpp:58) [22]  (1.12 ns)
	'xor' operation ('sel_tmp7', float_mul3.cpp:58) [54]  (0 ns)
	'and' operation ('sel_tmp8', float_mul3.cpp:55) [55]  (0.616 ns)
	'or' operation ('or_cond', float_mul3.cpp:29->float_mul3.cpp:78) [60]  (0.616 ns)
	'select' operation ('newSel2', float_mul3.cpp:29->float_mul3.cpp:78) [63]  (0.74 ns)
	'select' operation ('__Repl2__', float_mul3.cpp:29->float_mul3.cpp:78) [65]  (0.74 ns)

 <State 2>: 6.56ns
The critical path consists of the following:
	'sub' operation ('r.V', float_mul3.cpp:60) [27]  (1.34 ns)
	'sub' operation ('tmp_2', float_mul3.cpp:60) [34]  (1.36 ns)
	'shl' operation ('tmp_6', float_mul3.cpp:60) [36]  (0 ns)
	'select' operation ('new_mant.V', float_mul3.cpp:60) [51]  (2.41 ns)
	'select' operation ('new_mant.V', float_mul3.cpp:29->float_mul3.cpp:78) [66]  (0 ns)
	'select' operation ('new_mant.V', float_mul3.cpp:29->float_mul3.cpp:78) [67]  (0.731 ns)
	'select' operation ('new_mant.V', float_mul3.cpp:29->float_mul3.cpp:78) [68]  (0.731 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
