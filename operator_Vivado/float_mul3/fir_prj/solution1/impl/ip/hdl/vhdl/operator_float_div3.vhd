-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity operator_float_div3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of operator_float_div3 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "operator_float_div3,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.610062,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=108,HLS_SYN_LUT=650,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv23_2AAAAA : STD_LOGIC_VECTOR (22 downto 0) := "01010101010101010101010";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_Repl2_2_reg_501 : STD_LOGIC_VECTOR (0 downto 0);
    signal xf_V_4_fu_158_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal xf_V_4_reg_506 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_6_cast_fu_206_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_cast_reg_513 : STD_LOGIC_VECTOR (5 downto 0);
    signal new_mant_V_4_fu_310_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal new_mant_V_4_reg_518 : STD_LOGIC_VECTOR (22 downto 0);
    signal sel_tmp5_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_reg_524 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_reg_529 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_reg_534 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_1_fu_402_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_1_reg_539 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_88_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal new_mant_V_1_fu_118_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_exp_V_fu_100_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_fu_146_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl_cast_fu_154_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal xf_V_3_fu_122_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Result_s_fu_164_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Result_1_fu_174_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_assign_fu_182_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal clz_V_fu_190_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal new_exp_V_1_fu_210_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_cast_cast_fu_220_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_234_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl1_fu_246_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Result_2_fu_242_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal xf_V_2_fu_256_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_8_fu_262_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_11_fu_272_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_5_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_mant_V_8_fu_282_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal new_mant_V_3_fu_302_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_cast_cast_fu_132_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_110_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal new_exp_V_1_cast_fu_216_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal new_exp_V_2_fu_318_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_cast_fu_360_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel1_fu_374_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond1_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel2_fu_388_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal r_V_fu_410_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_433_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_430_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_cast_fu_439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_fu_426_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_6_fu_443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_449_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_15_fu_415_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_454_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_18_fu_458_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal new_mant_V_5_fu_462_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal new_mant_V_2_fu_423_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal new_mant_V_6_fu_470_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal new_mant_V_7_fu_476_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal new_mant_V_fu_483_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_fu_489_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                new_mant_V_4_reg_518 <= new_mant_V_4_fu_310_p3;
                p_Repl2_1_reg_539 <= p_Repl2_1_fu_402_p3;
                p_Repl2_2_reg_501 <= p_Val2_s_fu_88_p1(31 downto 31);
                sel_tmp3_reg_534 <= sel_tmp3_fu_348_p2;
                sel_tmp5_reg_524 <= sel_tmp5_fu_324_p2;
                sel_tmp8_reg_529 <= sel_tmp8_fu_336_p2;
                    tmp_6_cast_reg_513(4 downto 0) <= tmp_6_cast_fu_206_p1(4 downto 0);
                xf_V_4_reg_506 <= xf_V_4_fu_158_p2;
            end if;
        end if;
    end process;
    tmp_6_cast_reg_513(5) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_done_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= p_Result_3_fu_489_p4;
    clz_V_fu_190_p1 <= val_assign_fu_182_p3(5 - 1 downto 0);
    newSel1_fu_374_p3 <= 
        new_exp_V_1_cast_fu_216_p1 when (sel_tmp5_fu_324_p2(0) = '1') else 
        new_exp_V_2_fu_318_p2;
    newSel2_fu_388_p3 <= 
        newSel_cast_fu_360_p3 when (or_cond_fu_368_p2(0) = '1') else 
        newSel1_fu_374_p3;
    newSel_cast_fu_360_p3 <= 
        ap_const_lv8_FF when (newSel_fu_354_p2(0) = '1') else 
        ap_const_lv8_0;
    newSel_fu_354_p2 <= (tmp_10_fu_110_p3 and sel_tmp3_fu_348_p2);
        new_exp_V_1_cast_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(new_exp_V_1_fu_210_p2),8));

    new_exp_V_1_fu_210_p2 <= std_logic_vector(unsigned(ap_const_lv6_3) - unsigned(tmp_6_cast_fu_206_p1));
    new_exp_V_2_fu_318_p2 <= std_logic_vector(unsigned(new_exp_V_fu_100_p4) + unsigned(p_cast_cast_fu_132_p3));
    new_exp_V_fu_100_p4 <= p_Val2_s_fu_88_p1(30 downto 23);
    new_mant_V_1_fu_118_p1 <= p_Val2_s_fu_88_p1(23 - 1 downto 0);
    new_mant_V_2_fu_423_p1 <= xf_V_4_reg_506(23 - 1 downto 0);
    new_mant_V_3_fu_302_p3 <= 
        new_mant_V_8_fu_282_p3 when (sel_tmp1_fu_296_p2(0) = '1') else 
        ap_const_lv23_0;
    new_mant_V_4_fu_310_p3 <= 
        new_mant_V_1_fu_118_p1 when (tmp_5_fu_200_p2(0) = '1') else 
        new_mant_V_3_fu_302_p3;
    new_mant_V_5_fu_462_p3 <= 
        tmp_17_fu_454_p1 when (tmp_15_fu_415_p3(0) = '1') else 
        tmp_18_fu_458_p1;
    new_mant_V_6_fu_470_p3 <= 
        new_mant_V_5_fu_462_p3 when (sel_tmp5_reg_524(0) = '1') else 
        new_mant_V_4_reg_518;
    new_mant_V_7_fu_476_p3 <= 
        new_mant_V_2_fu_423_p1 when (sel_tmp8_reg_529(0) = '1') else 
        new_mant_V_6_fu_470_p3;
    new_mant_V_8_fu_282_p3 <= 
        tmp_8_fu_262_p4 when (tmp_fu_126_p2(0) = '1') else 
        tmp_11_fu_272_p4;
    new_mant_V_fu_483_p3 <= 
        new_mant_V_4_reg_518 when (sel_tmp3_reg_534(0) = '1') else 
        new_mant_V_7_fu_476_p3;
    or_cond1_fu_382_p2 <= (tmp_3_fu_228_p2 or sel_tmp5_fu_324_p2);
    or_cond2_fu_396_p2 <= (or_cond_fu_368_p2 or or_cond1_fu_382_p2);
    or_cond_fu_368_p2 <= (sel_tmp8_fu_336_p2 or sel_tmp3_fu_348_p2);
    p_Repl2_1_fu_402_p3 <= 
        newSel2_fu_388_p3 when (or_cond2_fu_396_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_Result_1_fu_174_p3 <= (ap_const_lv6_3F & p_Result_s_fu_164_p4);
    p_Result_2_fu_242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_234_p3),26));
    p_Result_3_fu_489_p4 <= ((p_Repl2_2_reg_501 & p_Repl2_1_reg_539) & new_mant_V_fu_483_p3);
    
    p_Result_s_fu_164_p4_proc : process(xf_V_4_fu_158_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(26+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(26+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(26 - 1 downto 0);
    variable p_Result_s_fu_164_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(26 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(26 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(26 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_19(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := xf_V_4_fu_158_p2;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(26-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(26-1-unsigned(ap_const_lv32_19(5-1 downto 0)));
            for p_Result_s_fu_164_p4_i in 0 to 26-1 loop
                v0_cpy(p_Result_s_fu_164_p4_i) := xf_V_4_fu_158_p2(26-1-p_Result_s_fu_164_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(26-1 downto 0)))));
        res_mask := res_mask(26-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_164_p4 <= resvalue(26-1 downto 0);
    end process;

    p_Val2_s_fu_88_p1 <= in_r;
    p_cast_cast_fu_132_p3 <= 
        ap_const_lv8_2 when (tmp_fu_126_p2(0) = '1') else 
        ap_const_lv8_1;
    p_shl1_fu_246_p4 <= ((ap_const_lv1_1 & new_mant_V_1_fu_118_p1) & ap_const_lv2_0);
    p_shl_cast_fu_154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_146_p3),26));
    p_shl_fu_146_p3 <= (new_mant_V_1_fu_118_p1 & ap_const_lv2_0);
    r_V_cast_cast_fu_220_p3 <= 
        ap_const_lv8_FD when (tmp_fu_126_p2(0) = '1') else 
        ap_const_lv8_FE;
    r_V_fu_410_p2 <= std_logic_vector(unsigned(ap_const_lv6_2) - unsigned(tmp_6_cast_reg_513));
    sel_tmp1_fu_296_p2 <= (tmp_3_fu_228_p2 and sel_tmp_fu_290_p2);
    sel_tmp2_fu_342_p2 <= (tmp_1_fu_140_p2 xor ap_const_lv1_1);
    sel_tmp3_fu_348_p2 <= (tmp_5_fu_200_p2 and sel_tmp2_fu_342_p2);
    sel_tmp5_fu_324_p2 <= (tmp_4_fu_194_p2 and tmp_1_fu_140_p2);
    sel_tmp7_fu_330_p2 <= (tmp_4_fu_194_p2 xor ap_const_lv1_1);
    sel_tmp8_fu_336_p2 <= (tmp_1_fu_140_p2 and sel_tmp7_fu_330_p2);
    sel_tmp_fu_290_p2 <= (tmp_5_fu_200_p2 xor ap_const_lv1_1);
    tmp_10_fu_110_p3 <= p_Val2_s_fu_88_p1(23 downto 23);
        tmp_11_cast_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_433_p2),32));

    tmp_11_fu_272_p4 <= xf_V_2_fu_256_p2(23 downto 1);
    tmp_15_fu_415_p3 <= r_V_fu_410_p2(5 downto 5);
    tmp_17_fu_454_p1 <= tmp_6_fu_443_p2(23 - 1 downto 0);
    tmp_18_fu_458_p1 <= tmp_9_fu_449_p2(23 - 1 downto 0);
    tmp_1_fu_140_p2 <= "1" when (new_exp_V_fu_100_p4 = ap_const_lv8_0) else "0";
    tmp_2_fu_433_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(r_V_fu_410_p2));
    tmp_3_fu_228_p2 <= "1" when (unsigned(new_exp_V_fu_100_p4) < unsigned(r_V_cast_cast_fu_220_p3)) else "0";
    tmp_4_fu_194_p2 <= "1" when (unsigned(clz_V_fu_190_p1) < unsigned(ap_const_lv5_3)) else "0";
    tmp_5_fu_200_p2 <= "1" when (new_exp_V_fu_100_p4 = ap_const_lv8_FF) else "0";
    tmp_6_cast_fu_206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(clz_V_fu_190_p1),6));
    tmp_6_fu_443_p2 <= std_logic_vector(shift_left(unsigned(tmp_s_fu_430_p1),to_integer(unsigned('0' & tmp_11_cast_fu_439_p1(31-1 downto 0)))));
    tmp_7_fu_234_p3 <= (ap_const_lv1_1 & new_mant_V_1_fu_118_p1);
    tmp_8_fu_262_p4 <= xf_V_2_fu_256_p2(24 downto 2);
    tmp_9_fu_449_p2 <= std_logic_vector(shift_right(unsigned(xf_V_4_reg_506),to_integer(unsigned('0' & tmp_cast_fu_426_p1(26-1 downto 0)))));
        tmp_cast_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_410_p2),26));

    tmp_fu_126_p2 <= "1" when (unsigned(new_mant_V_1_fu_118_p1) > unsigned(ap_const_lv23_2AAAAA)) else "0";
    tmp_s_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xf_V_4_reg_506),32));
    
    val_assign_fu_182_p3_proc : process(p_Result_1_fu_174_p3)
    begin
        val_assign_fu_182_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_1_fu_174_p3(i) = '1' then
                val_assign_fu_182_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    xf_V_2_fu_256_p2 <= std_logic_vector(unsigned(p_shl1_fu_246_p4) - unsigned(p_Result_2_fu_242_p1));
    xf_V_3_fu_122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(new_mant_V_1_fu_118_p1),26));
    xf_V_4_fu_158_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_154_p1) - unsigned(xf_V_3_fu_122_p1));
end behav;
