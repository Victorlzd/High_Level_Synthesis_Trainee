// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="operator_float_div3,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.610062,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=108,HLS_SYN_LUT=650,HLS_VERSION=2018_2}" *)

module operator_float_div3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_r;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] p_Repl2_2_reg_501;
wire   [25:0] xf_V_4_fu_158_p2;
reg   [25:0] xf_V_4_reg_506;
wire   [5:0] tmp_6_cast_fu_206_p1;
reg   [5:0] tmp_6_cast_reg_513;
wire   [22:0] new_mant_V_4_fu_310_p3;
reg   [22:0] new_mant_V_4_reg_518;
wire   [0:0] sel_tmp5_fu_324_p2;
reg   [0:0] sel_tmp5_reg_524;
wire   [0:0] sel_tmp8_fu_336_p2;
reg   [0:0] sel_tmp8_reg_529;
wire   [0:0] sel_tmp3_fu_348_p2;
reg   [0:0] sel_tmp3_reg_534;
wire   [7:0] p_Repl2_1_fu_402_p3;
reg   [7:0] p_Repl2_1_reg_539;
wire   [31:0] p_Val2_s_fu_88_p1;
wire   [22:0] new_mant_V_1_fu_118_p1;
wire   [0:0] tmp_fu_126_p2;
wire   [7:0] new_exp_V_fu_100_p4;
wire   [24:0] p_shl_fu_146_p3;
wire   [25:0] p_shl_cast_fu_154_p1;
wire   [25:0] xf_V_3_fu_122_p1;
reg   [25:0] p_Result_s_fu_164_p4;
wire   [31:0] p_Result_1_fu_174_p3;
reg   [31:0] val_assign_fu_182_p3;
wire   [4:0] clz_V_fu_190_p1;
wire   [5:0] new_exp_V_1_fu_210_p2;
wire   [7:0] r_V_cast_cast_fu_220_p3;
wire   [23:0] tmp_7_fu_234_p3;
wire   [25:0] p_shl1_fu_246_p4;
wire   [25:0] p_Result_2_fu_242_p1;
wire   [25:0] xf_V_2_fu_256_p2;
wire   [22:0] tmp_8_fu_262_p4;
wire   [22:0] tmp_11_fu_272_p4;
wire   [0:0] tmp_5_fu_200_p2;
wire   [0:0] tmp_3_fu_228_p2;
wire   [0:0] sel_tmp_fu_290_p2;
wire   [0:0] sel_tmp1_fu_296_p2;
wire   [22:0] new_mant_V_8_fu_282_p3;
wire   [22:0] new_mant_V_3_fu_302_p3;
wire   [7:0] p_cast_cast_fu_132_p3;
wire   [0:0] tmp_1_fu_140_p2;
wire   [0:0] tmp_4_fu_194_p2;
wire   [0:0] sel_tmp7_fu_330_p2;
wire   [0:0] sel_tmp2_fu_342_p2;
wire   [0:0] tmp_10_fu_110_p3;
wire   [0:0] newSel_fu_354_p2;
wire  signed [7:0] new_exp_V_1_cast_fu_216_p1;
wire   [7:0] new_exp_V_2_fu_318_p2;
wire   [0:0] or_cond_fu_368_p2;
wire   [7:0] newSel_cast_fu_360_p3;
wire   [7:0] newSel1_fu_374_p3;
wire   [0:0] or_cond1_fu_382_p2;
wire   [0:0] or_cond2_fu_396_p2;
wire   [7:0] newSel2_fu_388_p3;
wire    ap_CS_fsm_state2;
wire  signed [5:0] r_V_fu_410_p2;
wire   [5:0] tmp_2_fu_433_p2;
wire   [31:0] tmp_s_fu_430_p1;
wire  signed [31:0] tmp_11_cast_fu_439_p1;
wire  signed [25:0] tmp_cast_fu_426_p1;
wire   [31:0] tmp_6_fu_443_p2;
wire   [25:0] tmp_9_fu_449_p2;
wire   [0:0] tmp_15_fu_415_p3;
wire   [22:0] tmp_17_fu_454_p1;
wire   [22:0] tmp_18_fu_458_p1;
wire   [22:0] new_mant_V_5_fu_462_p3;
wire   [22:0] new_mant_V_2_fu_423_p1;
wire   [22:0] new_mant_V_6_fu_470_p3;
wire   [22:0] new_mant_V_7_fu_476_p3;
wire   [22:0] new_mant_V_fu_483_p3;
wire   [31:0] p_Result_3_fu_489_p4;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        new_mant_V_4_reg_518 <= new_mant_V_4_fu_310_p3;
        p_Repl2_1_reg_539 <= p_Repl2_1_fu_402_p3;
        p_Repl2_2_reg_501 <= p_Val2_s_fu_88_p1[32'd31];
        sel_tmp3_reg_534 <= sel_tmp3_fu_348_p2;
        sel_tmp5_reg_524 <= sel_tmp5_fu_324_p2;
        sel_tmp8_reg_529 <= sel_tmp8_fu_336_p2;
        tmp_6_cast_reg_513[4 : 0] <= tmp_6_cast_fu_206_p1[4 : 0];
        xf_V_4_reg_506 <= xf_V_4_fu_158_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_return = p_Result_3_fu_489_p4;

assign clz_V_fu_190_p1 = val_assign_fu_182_p3[4:0];

assign newSel1_fu_374_p3 = ((sel_tmp5_fu_324_p2[0:0] === 1'b1) ? new_exp_V_1_cast_fu_216_p1 : new_exp_V_2_fu_318_p2);

assign newSel2_fu_388_p3 = ((or_cond_fu_368_p2[0:0] === 1'b1) ? newSel_cast_fu_360_p3 : newSel1_fu_374_p3);

assign newSel_cast_fu_360_p3 = ((newSel_fu_354_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign newSel_fu_354_p2 = (tmp_10_fu_110_p3 & sel_tmp3_fu_348_p2);

assign new_exp_V_1_cast_fu_216_p1 = $signed(new_exp_V_1_fu_210_p2);

assign new_exp_V_1_fu_210_p2 = (6'd3 - tmp_6_cast_fu_206_p1);

assign new_exp_V_2_fu_318_p2 = (new_exp_V_fu_100_p4 + p_cast_cast_fu_132_p3);

assign new_exp_V_fu_100_p4 = {{p_Val2_s_fu_88_p1[30:23]}};

assign new_mant_V_1_fu_118_p1 = p_Val2_s_fu_88_p1[22:0];

assign new_mant_V_2_fu_423_p1 = xf_V_4_reg_506[22:0];

assign new_mant_V_3_fu_302_p3 = ((sel_tmp1_fu_296_p2[0:0] === 1'b1) ? new_mant_V_8_fu_282_p3 : 23'd0);

assign new_mant_V_4_fu_310_p3 = ((tmp_5_fu_200_p2[0:0] === 1'b1) ? new_mant_V_1_fu_118_p1 : new_mant_V_3_fu_302_p3);

assign new_mant_V_5_fu_462_p3 = ((tmp_15_fu_415_p3[0:0] === 1'b1) ? tmp_17_fu_454_p1 : tmp_18_fu_458_p1);

assign new_mant_V_6_fu_470_p3 = ((sel_tmp5_reg_524[0:0] === 1'b1) ? new_mant_V_5_fu_462_p3 : new_mant_V_4_reg_518);

assign new_mant_V_7_fu_476_p3 = ((sel_tmp8_reg_529[0:0] === 1'b1) ? new_mant_V_2_fu_423_p1 : new_mant_V_6_fu_470_p3);

assign new_mant_V_8_fu_282_p3 = ((tmp_fu_126_p2[0:0] === 1'b1) ? tmp_8_fu_262_p4 : tmp_11_fu_272_p4);

assign new_mant_V_fu_483_p3 = ((sel_tmp3_reg_534[0:0] === 1'b1) ? new_mant_V_4_reg_518 : new_mant_V_7_fu_476_p3);

assign or_cond1_fu_382_p2 = (tmp_3_fu_228_p2 | sel_tmp5_fu_324_p2);

assign or_cond2_fu_396_p2 = (or_cond_fu_368_p2 | or_cond1_fu_382_p2);

assign or_cond_fu_368_p2 = (sel_tmp8_fu_336_p2 | sel_tmp3_fu_348_p2);

assign p_Repl2_1_fu_402_p3 = ((or_cond2_fu_396_p2[0:0] === 1'b1) ? newSel2_fu_388_p3 : 8'd255);

assign p_Result_1_fu_174_p3 = {{6'd63}, {p_Result_s_fu_164_p4}};

assign p_Result_2_fu_242_p1 = tmp_7_fu_234_p3;

assign p_Result_3_fu_489_p4 = {{{p_Repl2_2_reg_501}, {p_Repl2_1_reg_539}}, {new_mant_V_fu_483_p3}};

integer ap_tvar_int_0;

always @ (xf_V_4_fu_158_p2) begin
    for (ap_tvar_int_0 = 26 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 25 - 0) begin
            p_Result_s_fu_164_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_164_p4[ap_tvar_int_0] = xf_V_4_fu_158_p2[25 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_s_fu_88_p1 = in_r;

assign p_cast_cast_fu_132_p3 = ((tmp_fu_126_p2[0:0] === 1'b1) ? 8'd2 : 8'd1);

assign p_shl1_fu_246_p4 = {{{{1'd1}, {new_mant_V_1_fu_118_p1}}}, {2'd0}};

assign p_shl_cast_fu_154_p1 = p_shl_fu_146_p3;

assign p_shl_fu_146_p3 = {{new_mant_V_1_fu_118_p1}, {2'd0}};

assign r_V_cast_cast_fu_220_p3 = ((tmp_fu_126_p2[0:0] === 1'b1) ? 8'd253 : 8'd254);

assign r_V_fu_410_p2 = (6'd2 - tmp_6_cast_reg_513);

assign sel_tmp1_fu_296_p2 = (tmp_3_fu_228_p2 & sel_tmp_fu_290_p2);

assign sel_tmp2_fu_342_p2 = (tmp_1_fu_140_p2 ^ 1'd1);

assign sel_tmp3_fu_348_p2 = (tmp_5_fu_200_p2 & sel_tmp2_fu_342_p2);

assign sel_tmp5_fu_324_p2 = (tmp_4_fu_194_p2 & tmp_1_fu_140_p2);

assign sel_tmp7_fu_330_p2 = (tmp_4_fu_194_p2 ^ 1'd1);

assign sel_tmp8_fu_336_p2 = (tmp_1_fu_140_p2 & sel_tmp7_fu_330_p2);

assign sel_tmp_fu_290_p2 = (tmp_5_fu_200_p2 ^ 1'd1);

assign tmp_10_fu_110_p3 = p_Val2_s_fu_88_p1[32'd23];

assign tmp_11_cast_fu_439_p1 = $signed(tmp_2_fu_433_p2);

assign tmp_11_fu_272_p4 = {{xf_V_2_fu_256_p2[23:1]}};

assign tmp_15_fu_415_p3 = r_V_fu_410_p2[32'd5];

assign tmp_17_fu_454_p1 = tmp_6_fu_443_p2[22:0];

assign tmp_18_fu_458_p1 = tmp_9_fu_449_p2[22:0];

assign tmp_1_fu_140_p2 = ((new_exp_V_fu_100_p4 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_2_fu_433_p2 = ($signed(6'd0) - $signed(r_V_fu_410_p2));

assign tmp_3_fu_228_p2 = ((new_exp_V_fu_100_p4 < r_V_cast_cast_fu_220_p3) ? 1'b1 : 1'b0);

assign tmp_4_fu_194_p2 = ((clz_V_fu_190_p1 < 5'd3) ? 1'b1 : 1'b0);

assign tmp_5_fu_200_p2 = ((new_exp_V_fu_100_p4 == 8'd255) ? 1'b1 : 1'b0);

assign tmp_6_cast_fu_206_p1 = clz_V_fu_190_p1;

assign tmp_6_fu_443_p2 = tmp_s_fu_430_p1 << tmp_11_cast_fu_439_p1;

assign tmp_7_fu_234_p3 = {{1'd1}, {new_mant_V_1_fu_118_p1}};

assign tmp_8_fu_262_p4 = {{xf_V_2_fu_256_p2[24:2]}};

assign tmp_9_fu_449_p2 = xf_V_4_reg_506 >> tmp_cast_fu_426_p1;

assign tmp_cast_fu_426_p1 = r_V_fu_410_p2;

assign tmp_fu_126_p2 = ((new_mant_V_1_fu_118_p1 > 23'd2796202) ? 1'b1 : 1'b0);

assign tmp_s_fu_430_p1 = xf_V_4_reg_506;


always @ (p_Result_1_fu_174_p3) begin
    if (p_Result_1_fu_174_p3[0] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd0;
    end else if (p_Result_1_fu_174_p3[1] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd1;
    end else if (p_Result_1_fu_174_p3[2] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd2;
    end else if (p_Result_1_fu_174_p3[3] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd3;
    end else if (p_Result_1_fu_174_p3[4] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd4;
    end else if (p_Result_1_fu_174_p3[5] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd5;
    end else if (p_Result_1_fu_174_p3[6] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd6;
    end else if (p_Result_1_fu_174_p3[7] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd7;
    end else if (p_Result_1_fu_174_p3[8] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd8;
    end else if (p_Result_1_fu_174_p3[9] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd9;
    end else if (p_Result_1_fu_174_p3[10] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd10;
    end else if (p_Result_1_fu_174_p3[11] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd11;
    end else if (p_Result_1_fu_174_p3[12] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd12;
    end else if (p_Result_1_fu_174_p3[13] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd13;
    end else if (p_Result_1_fu_174_p3[14] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd14;
    end else if (p_Result_1_fu_174_p3[15] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd15;
    end else if (p_Result_1_fu_174_p3[16] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd16;
    end else if (p_Result_1_fu_174_p3[17] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd17;
    end else if (p_Result_1_fu_174_p3[18] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd18;
    end else if (p_Result_1_fu_174_p3[19] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd19;
    end else if (p_Result_1_fu_174_p3[20] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd20;
    end else if (p_Result_1_fu_174_p3[21] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd21;
    end else if (p_Result_1_fu_174_p3[22] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd22;
    end else if (p_Result_1_fu_174_p3[23] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd23;
    end else if (p_Result_1_fu_174_p3[24] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd24;
    end else if (p_Result_1_fu_174_p3[25] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd25;
    end else if (p_Result_1_fu_174_p3[26] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd26;
    end else if (p_Result_1_fu_174_p3[27] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd27;
    end else if (p_Result_1_fu_174_p3[28] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd28;
    end else if (p_Result_1_fu_174_p3[29] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd29;
    end else if (p_Result_1_fu_174_p3[30] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd30;
    end else if (p_Result_1_fu_174_p3[31] == 1'b1) begin
        val_assign_fu_182_p3 = 32'd31;
    end else begin
        val_assign_fu_182_p3 = 32'd32;
    end
end

assign xf_V_2_fu_256_p2 = (p_shl1_fu_246_p4 - p_Result_2_fu_242_p1);

assign xf_V_3_fu_122_p1 = new_mant_V_1_fu_118_p1;

assign xf_V_4_fu_158_p2 = (p_shl_cast_fu_154_p1 - xf_V_3_fu_122_p1);

always @ (posedge ap_clk) begin
    tmp_6_cast_reg_513[5] <= 1'b0;
end

endmodule //operator_float_div3
