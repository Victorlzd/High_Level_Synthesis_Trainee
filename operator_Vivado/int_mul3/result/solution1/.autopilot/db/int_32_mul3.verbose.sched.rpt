

================================================================
== Vivado HLS Report for 'int_32_mul3'
================================================================
* Date:           Thu Aug 23 12:23:50 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        result
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.216|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    2|    2|    2|    2|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.33>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%in_V_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %in_V)"   --->   Operation 3 'read' 'in_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%p_Result_s = call i2 @_ssdm_op_PartSelect.i2.i32.i32.i32(i32 %in_V_read, i32 30, i32 31)" [int_mul3.cpp:30]   --->   Operation 4 'partselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%this_assign = zext i2 %p_Result_s to i6" [int_mul3.cpp:30]   --->   Operation 5 'zext' 'this_assign' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [2/2] (1.33ns)   --->   "%op_V_assign = call fastcc i8 @lut_mul3_chunk(i6 %this_assign)" [int_mul3.cpp:30]   --->   Operation 6 'call' 'op_V_assign' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%tmp = trunc i32 %in_V_read to i6" [int_mul3.cpp:30]   --->   Operation 7 'trunc' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [2/2] (1.33ns)   --->   "%op_V_assign_1 = call fastcc i8 @lut_mul3_chunk(i6 %tmp)" [int_mul3.cpp:30]   --->   Operation 8 'call' 'op_V_assign_1' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_Result_1 = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %in_V_read, i32 6, i32 11)" [int_mul3.cpp:30]   --->   Operation 9 'partselect' 'p_Result_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [2/2] (1.33ns)   --->   "%op_V_assign_2 = call fastcc i8 @lut_mul3_chunk(i6 %p_Result_1)" [int_mul3.cpp:30]   --->   Operation 10 'call' 'op_V_assign_2' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_Result_2 = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %in_V_read, i32 12, i32 17)" [int_mul3.cpp:30]   --->   Operation 11 'partselect' 'p_Result_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [2/2] (1.33ns)   --->   "%op_V_assign_3 = call fastcc i8 @lut_mul3_chunk(i6 %p_Result_2)" [int_mul3.cpp:30]   --->   Operation 12 'call' 'op_V_assign_3' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_Result_3 = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %in_V_read, i32 18, i32 23)" [int_mul3.cpp:30]   --->   Operation 13 'partselect' 'p_Result_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [2/2] (1.33ns)   --->   "%op_V_assign_4 = call fastcc i8 @lut_mul3_chunk(i6 %p_Result_3)" [int_mul3.cpp:30]   --->   Operation 14 'call' 'op_V_assign_4' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_Result_4 = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %in_V_read, i32 24, i32 29)" [int_mul3.cpp:30]   --->   Operation 15 'partselect' 'p_Result_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [2/2] (1.33ns)   --->   "%op_V_assign_5 = call fastcc i8 @lut_mul3_chunk(i6 %p_Result_4)" [int_mul3.cpp:30]   --->   Operation 16 'call' 'op_V_assign_5' <Predicate = true> <Delay = 1.33> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 8.21>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0), !map !78"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %in_V), !map !84"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @int_32_mul3_str) nounwind"   --->   Operation 19 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/2] (2.66ns)   --->   "%op_V_assign = call fastcc i8 @lut_mul3_chunk(i6 %this_assign)" [int_mul3.cpp:30]   --->   Operation 20 'call' 'op_V_assign' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 21 [1/2] (2.66ns)   --->   "%op_V_assign_1 = call fastcc i8 @lut_mul3_chunk(i6 %tmp)" [int_mul3.cpp:30]   --->   Operation 21 'call' 'op_V_assign_1' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_1 = trunc i8 %op_V_assign to i2" [int_mul3.cpp:30]   --->   Operation 22 'trunc' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i22.i8(i2 %tmp_1, i22 0, i8 %op_V_assign_1)" [int_mul3.cpp:30]   --->   Operation 23 'bitconcatenate' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/2] (2.66ns)   --->   "%op_V_assign_2 = call fastcc i8 @lut_mul3_chunk(i6 %p_Result_1)" [int_mul3.cpp:30]   --->   Operation 24 'call' 'op_V_assign_2' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%r_V = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %op_V_assign_2, i6 0)" [int_mul3.cpp:30]   --->   Operation 25 'bitconcatenate' 'r_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%r_V_cast = zext i14 %r_V to i32" [int_mul3.cpp:30]   --->   Operation 26 'zext' 'r_V_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/2] (2.66ns)   --->   "%op_V_assign_3 = call fastcc i8 @lut_mul3_chunk(i6 %p_Result_2)" [int_mul3.cpp:30]   --->   Operation 27 'call' 'op_V_assign_3' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%r_V_1 = call i20 @_ssdm_op_BitConcatenate.i20.i8.i12(i8 %op_V_assign_3, i12 0)" [int_mul3.cpp:30]   --->   Operation 28 'bitconcatenate' 'r_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%r_V_1_cast = zext i20 %r_V_1 to i32" [int_mul3.cpp:30]   --->   Operation 29 'zext' 'r_V_1_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/2] (2.66ns)   --->   "%op_V_assign_4 = call fastcc i8 @lut_mul3_chunk(i6 %p_Result_3)" [int_mul3.cpp:30]   --->   Operation 30 'call' 'op_V_assign_4' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%r_V_2 = call i26 @_ssdm_op_BitConcatenate.i26.i8.i18(i8 %op_V_assign_4, i18 0)" [int_mul3.cpp:30]   --->   Operation 31 'bitconcatenate' 'r_V_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%r_V_2_cast = zext i26 %r_V_2 to i32" [int_mul3.cpp:30]   --->   Operation 32 'zext' 'r_V_2_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/2] (2.66ns)   --->   "%op_V_assign_5 = call fastcc i8 @lut_mul3_chunk(i6 %p_Result_4)" [int_mul3.cpp:30]   --->   Operation 33 'call' 'op_V_assign_5' <Predicate = true> <Delay = 2.66> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%r_V_3 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i24(i8 %op_V_assign_5, i24 0)" [int_mul3.cpp:30]   --->   Operation 34 'bitconcatenate' 'r_V_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp1 = add i32 %tmp_4, %r_V_cast" [int_mul3.cpp:30]   --->   Operation 35 'add' 'tmp1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp3 = add i32 %r_V_2_cast, %r_V_3" [int_mul3.cpp:30]   --->   Operation 36 'add' 'tmp3' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 37 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%tmp2 = add i32 %tmp3, %r_V_1_cast" [int_mul3.cpp:30]   --->   Operation 37 'add' 'tmp2' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 38 [1/1] (2.77ns) (root node of TernaryAdder)   --->   "%agg_result_V = add i32 %tmp2, %tmp1" [int_mul3.cpp:30]   --->   Operation 38 'add' 'agg_result_V' <Predicate = true> <Delay = 2.77> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "ret i32 %agg_result_V" [int_mul3.cpp:30]   --->   Operation 39 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.33ns
The critical path consists of the following:
	wire read on port 'in_V' [13]  (0 ns)
	'call' operation ('op_V_assign', int_mul3.cpp:30) to 'lut_mul3_chunk' [16]  (1.33 ns)

 <State 2>: 8.22ns
The critical path consists of the following:
	'call' operation ('op_V_assign_3', int_mul3.cpp:30) to 'lut_mul3_chunk' [26]  (2.66 ns)
	'add' operation ('tmp2', int_mul3.cpp:30) [38]  (2.78 ns)
	'add' operation ('agg_result_V', int_mul3.cpp:30) [39]  (2.78 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
