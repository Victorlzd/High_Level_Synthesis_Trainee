// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _float_div3_HH_
#define _float_div3_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct float_div3 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > in_r;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    float_div3(sc_module_name name);
    SC_HAS_PROCESS(float_div3);

    ~float_div3();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > p_Repl2_2_reg_285;
    sc_signal< sc_lv<23> > new_mant_V_fu_97_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_129_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_295;
    sc_signal< sc_lv<8> > p_Repl2_1_fu_161_p3;
    sc_signal< sc_lv<8> > p_Repl2_1_reg_299;
    sc_signal< sc_lv<32> > xf_V_2_fu_247_p2;
    sc_signal< sc_lv<32> > xf_V_2_reg_304;
    sc_signal< sc_lv<23> > ap_phi_mux_p_Repl2_s_phi_fu_69_p4;
    sc_signal< sc_lv<23> > p_Repl2_s_reg_66;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > p_Val2_s_fu_75_p1;
    sc_signal< sc_lv<1> > tmp_fu_105_p3;
    sc_signal< sc_lv<8> > new_exp_V_fu_87_p4;
    sc_signal< sc_lv<8> > decal_subnorm_V_cast_1_fu_121_p3;
    sc_signal< sc_lv<1> > tmp_2_fu_135_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_155_p2;
    sc_signal< sc_lv<8> > p_new_exp_V_1_fu_147_p3;
    sc_signal< sc_lv<8> > new_exp_V_1_fu_141_p2;
    sc_signal< sc_lv<3> > tmp_8_fu_181_p4;
    sc_signal< sc_lv<1> > tmp_5_fu_175_p2;
    sc_signal< sc_lv<3> > decal_subnorm_V_cast_fu_113_p3;
    sc_signal< sc_lv<3> > decal_subnorm_V_1_ca_fu_191_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_169_p2;
    sc_signal< sc_lv<3> > decal_subnorm_V_deca_fu_197_p3;
    sc_signal< sc_lv<3> > p_0201_1_fu_205_p3;
    sc_signal< sc_lv<24> > xf_V_3_cast_fu_101_p1;
    sc_signal< sc_lv<24> > tmp_3_fu_217_p3;
    sc_signal< sc_lv<24> > xf_V_fu_225_p3;
    sc_signal< sc_lv<8> > p_0201_1_cast_fu_213_p1;
    sc_signal< sc_lv<32> > p_cast_fu_233_p1;
    sc_signal< sc_lv<32> > tmp_7_fu_237_p1;
    sc_signal< sc_lv<32> > r_V_fu_241_p2;
    sc_signal< sc_lv<32> > mul_fu_256_p0;
    sc_signal< sc_lv<65> > mul_fu_256_p2;
    sc_signal< sc_lv<32> > p_Result_s_fu_273_p4;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_lv<65> > mul_fu_256_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<65> ap_const_lv65_155555556;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_38;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_p_Repl2_s_phi_fu_69_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_decal_subnorm_V_1_ca_fu_191_p2();
    void thread_decal_subnorm_V_cast_1_fu_121_p3();
    void thread_decal_subnorm_V_cast_fu_113_p3();
    void thread_decal_subnorm_V_deca_fu_197_p3();
    void thread_mul_fu_256_p0();
    void thread_mul_fu_256_p00();
    void thread_mul_fu_256_p2();
    void thread_new_exp_V_1_fu_141_p2();
    void thread_new_exp_V_fu_87_p4();
    void thread_new_mant_V_fu_97_p1();
    void thread_p_0201_1_cast_fu_213_p1();
    void thread_p_0201_1_fu_205_p3();
    void thread_p_Repl2_1_fu_161_p3();
    void thread_p_Result_s_fu_273_p4();
    void thread_p_Val2_s_fu_75_p1();
    void thread_p_cast_fu_233_p1();
    void thread_p_new_exp_V_1_fu_147_p3();
    void thread_r_V_fu_241_p2();
    void thread_tmp_1_fu_129_p2();
    void thread_tmp_2_fu_135_p2();
    void thread_tmp_3_fu_217_p3();
    void thread_tmp_4_fu_169_p2();
    void thread_tmp_5_fu_175_p2();
    void thread_tmp_6_fu_155_p2();
    void thread_tmp_7_fu_237_p1();
    void thread_tmp_8_fu_181_p4();
    void thread_tmp_fu_105_p3();
    void thread_xf_V_2_fu_247_p2();
    void thread_xf_V_3_cast_fu_101_p1();
    void thread_xf_V_fu_225_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
