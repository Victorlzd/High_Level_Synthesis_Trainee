// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="float_div3,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.651000,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=4,HLS_SYN_FF=67,HLS_SYN_LUT=300,HLS_VERSION=2018_2}" *)

module float_div3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_r;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] p_Repl2_2_reg_285;
wire   [22:0] new_mant_V_fu_97_p1;
wire   [0:0] tmp_1_fu_129_p2;
reg   [0:0] tmp_1_reg_295;
wire   [7:0] p_Repl2_1_fu_161_p3;
reg   [7:0] p_Repl2_1_reg_299;
wire   [31:0] xf_V_2_fu_247_p2;
reg   [31:0] xf_V_2_reg_304;
reg   [22:0] ap_phi_mux_p_Repl2_s_phi_fu_69_p4;
reg   [22:0] p_Repl2_s_reg_66;
wire    ap_CS_fsm_state2;
wire   [31:0] p_Val2_s_fu_75_p1;
wire   [0:0] tmp_fu_105_p3;
wire   [7:0] new_exp_V_fu_87_p4;
wire   [7:0] decal_subnorm_V_cast_1_fu_121_p3;
wire   [0:0] tmp_2_fu_135_p2;
wire   [0:0] tmp_6_fu_155_p2;
wire   [7:0] p_new_exp_V_1_fu_147_p3;
wire   [7:0] new_exp_V_1_fu_141_p2;
wire   [2:0] tmp_8_fu_181_p4;
wire   [0:0] tmp_5_fu_175_p2;
wire   [2:0] decal_subnorm_V_cast_fu_113_p3;
wire   [2:0] decal_subnorm_V_1_ca_fu_191_p2;
wire   [0:0] tmp_4_fu_169_p2;
wire   [2:0] decal_subnorm_V_deca_fu_197_p3;
wire   [2:0] p_0201_1_fu_205_p3;
wire   [23:0] xf_V_3_cast_fu_101_p1;
wire   [23:0] tmp_3_fu_217_p3;
wire   [23:0] xf_V_fu_225_p3;
wire  signed [7:0] p_0201_1_cast_fu_213_p1;
wire   [31:0] p_cast_fu_233_p1;
wire   [31:0] tmp_7_fu_237_p1;
wire   [31:0] r_V_fu_241_p2;
wire   [31:0] mul_fu_256_p0;
wire   [64:0] mul_fu_256_p2;
wire   [31:0] p_Result_s_fu_273_p4;
reg   [1:0] ap_NS_fsm;
wire   [64:0] mul_fu_256_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (tmp_1_fu_129_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Repl2_s_reg_66 <= new_mant_V_fu_97_p1;
    end else if (((tmp_1_reg_295 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Repl2_s_reg_66 <= {{mul_fu_256_p2[56:34]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Repl2_1_reg_299 <= p_Repl2_1_fu_161_p3;
        p_Repl2_2_reg_285 <= p_Val2_s_fu_75_p1[32'd31];
        tmp_1_reg_295 <= tmp_1_fu_129_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (tmp_1_fu_129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        xf_V_2_reg_304 <= xf_V_2_fu_247_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_reg_295 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_p_Repl2_s_phi_fu_69_p4 = {{mul_fu_256_p2[56:34]}};
    end else begin
        ap_phi_mux_p_Repl2_s_phi_fu_69_p4 = p_Repl2_s_reg_66;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_return = p_Result_s_fu_273_p4;

assign decal_subnorm_V_1_ca_fu_191_p2 = ($signed(tmp_8_fu_181_p4) + $signed(3'd7));

assign decal_subnorm_V_cast_1_fu_121_p3 = ((tmp_fu_105_p3[0:0] === 1'b1) ? 8'd1 : 8'd2);

assign decal_subnorm_V_cast_fu_113_p3 = ((tmp_fu_105_p3[0:0] === 1'b1) ? 3'd1 : 3'd2);

assign decal_subnorm_V_deca_fu_197_p3 = ((tmp_5_fu_175_p2[0:0] === 1'b1) ? decal_subnorm_V_cast_fu_113_p3 : decal_subnorm_V_1_ca_fu_191_p2);

assign mul_fu_256_p0 = mul_fu_256_p00;

assign mul_fu_256_p00 = xf_V_2_reg_304;

assign mul_fu_256_p2 = (mul_fu_256_p0 * $signed(65'h155555556));

assign new_exp_V_1_fu_141_p2 = (new_exp_V_fu_87_p4 - decal_subnorm_V_cast_1_fu_121_p3);

assign new_exp_V_fu_87_p4 = {{p_Val2_s_fu_75_p1[30:23]}};

assign new_mant_V_fu_97_p1 = p_Val2_s_fu_75_p1[22:0];

assign p_0201_1_cast_fu_213_p1 = $signed(p_0201_1_fu_205_p3);

assign p_0201_1_fu_205_p3 = ((tmp_4_fu_169_p2[0:0] === 1'b1) ? 3'd0 : decal_subnorm_V_deca_fu_197_p3);

assign p_Repl2_1_fu_161_p3 = ((tmp_6_fu_155_p2[0:0] === 1'b1) ? p_new_exp_V_1_fu_147_p3 : new_exp_V_1_fu_141_p2);

assign p_Result_s_fu_273_p4 = {{{p_Repl2_2_reg_285}, {p_Repl2_1_reg_299}}, {ap_phi_mux_p_Repl2_s_phi_fu_69_p4}};

assign p_Val2_s_fu_75_p1 = in_r;

assign p_cast_fu_233_p1 = xf_V_fu_225_p3;

assign p_new_exp_V_1_fu_147_p3 = ((tmp_1_fu_129_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign r_V_fu_241_p2 = p_cast_fu_233_p1 << tmp_7_fu_237_p1;

assign tmp_1_fu_129_p2 = ((new_exp_V_fu_87_p4 == 8'd255) ? 1'b1 : 1'b0);

assign tmp_2_fu_135_p2 = ((decal_subnorm_V_cast_1_fu_121_p3 > new_exp_V_fu_87_p4) ? 1'b1 : 1'b0);

assign tmp_3_fu_217_p3 = {{1'd1}, {new_mant_V_fu_97_p1}};

assign tmp_4_fu_169_p2 = ((new_exp_V_fu_87_p4 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_5_fu_175_p2 = ((decal_subnorm_V_cast_1_fu_121_p3 < new_exp_V_fu_87_p4) ? 1'b1 : 1'b0);

assign tmp_6_fu_155_p2 = (tmp_2_fu_135_p2 | tmp_1_fu_129_p2);

assign tmp_7_fu_237_p1 = $unsigned(p_0201_1_cast_fu_213_p1);

assign tmp_8_fu_181_p4 = {{p_Val2_s_fu_75_p1[25:23]}};

assign tmp_fu_105_p3 = p_Val2_s_fu_75_p1[32'd22];

assign xf_V_2_fu_247_p2 = (r_V_fu_241_p2 + 32'd1);

assign xf_V_3_cast_fu_101_p1 = new_mant_V_fu_97_p1;

assign xf_V_fu_225_p3 = ((tmp_4_fu_169_p2[0:0] === 1'b1) ? xf_V_3_cast_fu_101_p1 : tmp_3_fu_217_p3);

endmodule //float_div3
