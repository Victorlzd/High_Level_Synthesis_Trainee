

================================================================
== Vivado HLS Report for 'int_div5'
================================================================
* Date:           Mon Jul 23 16:31:35 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        fir_prj
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     6.846|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    5|    5|    5|    5|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.42>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%in_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %in_r) nounwind"   --->   Operation 7 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_Result_s = call i2 @_ssdm_op_PartSelect.i2.i32.i32.i32(i32 %in_read, i32 30, i32 31)" [int_div5.cpp:957]   --->   Operation 8 'partselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%d_chunk_V = zext i2 %p_Result_s to i3" [int_div5.cpp:957]   --->   Operation 9 'zext' 'd_chunk_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (3.42ns)   --->   "%call_ret = call fastcc { i3, i3 } @lut_div5_chunk(i3 %d_chunk_V, i3 0) nounwind" [int_div5.cpp:958]   --->   Operation 10 'call' 'call_ret' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%r_V = extractvalue { i3, i3 } %call_ret, 1" [int_div5.cpp:958]   --->   Operation 11 'extractvalue' 'r_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_Result_s_4 = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 27, i32 29)" [int_div5.cpp:963]   --->   Operation 12 'partselect' 'p_Result_s_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_Result_14_1 = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 24, i32 26)" [int_div5.cpp:963]   --->   Operation 13 'partselect' 'p_Result_14_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_Result_14_2 = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 21, i32 23)" [int_div5.cpp:963]   --->   Operation 14 'partselect' 'p_Result_14_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_Result_14_3 = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 18, i32 20)" [int_div5.cpp:963]   --->   Operation 15 'partselect' 'p_Result_14_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_Result_14_4 = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 15, i32 17)" [int_div5.cpp:963]   --->   Operation 16 'partselect' 'p_Result_14_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_Result_14_5 = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 12, i32 14)" [int_div5.cpp:963]   --->   Operation 17 'partselect' 'p_Result_14_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_Result_14_6 = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 9, i32 11)" [int_div5.cpp:963]   --->   Operation 18 'partselect' 'p_Result_14_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%p_Result_14_7 = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 6, i32 8)" [int_div5.cpp:963]   --->   Operation 19 'partselect' 'p_Result_14_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%p_Result_14_8 = call i3 @_ssdm_op_PartSelect.i3.i32.i32.i32(i32 %in_read, i32 3, i32 5)" [int_div5.cpp:963]   --->   Operation 20 'partselect' 'p_Result_14_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%tmp = trunc i32 %in_read to i3" [int_div5.cpp:963]   --->   Operation 21 'trunc' 'tmp' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.84>
ST_2 : Operation 22 [1/1] (3.42ns)   --->   "%call_ret1 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_s_4, i3 %r_V) nounwind" [int_div5.cpp:964]   --->   Operation 22 'call' 'call_ret1' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%q_chunk_V_ret7 = extractvalue { i3, i3 } %call_ret1, 0" [int_div5.cpp:964]   --->   Operation 23 'extractvalue' 'q_chunk_V_ret7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%r_V_ret8 = extractvalue { i3, i3 } %call_ret1, 1" [int_div5.cpp:964]   --->   Operation 24 'extractvalue' 'r_V_ret8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (3.42ns)   --->   "%call_ret12_1 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_14_1, i3 %r_V_ret8) nounwind" [int_div5.cpp:964]   --->   Operation 25 'call' 'call_ret12_1' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%q_chunk_V_ret7_1 = extractvalue { i3, i3 } %call_ret12_1, 0" [int_div5.cpp:964]   --->   Operation 26 'extractvalue' 'q_chunk_V_ret7_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%r_V_ret8_1 = extractvalue { i3, i3 } %call_ret12_1, 1" [int_div5.cpp:964]   --->   Operation 27 'extractvalue' 'r_V_ret8_1' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.84>
ST_3 : Operation 28 [1/1] (3.42ns)   --->   "%call_ret12_2 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_14_2, i3 %r_V_ret8_1) nounwind" [int_div5.cpp:964]   --->   Operation 28 'call' 'call_ret12_2' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%q_chunk_V_ret7_2 = extractvalue { i3, i3 } %call_ret12_2, 0" [int_div5.cpp:964]   --->   Operation 29 'extractvalue' 'q_chunk_V_ret7_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%r_V_ret8_2 = extractvalue { i3, i3 } %call_ret12_2, 1" [int_div5.cpp:964]   --->   Operation 30 'extractvalue' 'r_V_ret8_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (3.42ns)   --->   "%call_ret12_3 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_14_3, i3 %r_V_ret8_2) nounwind" [int_div5.cpp:964]   --->   Operation 31 'call' 'call_ret12_3' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%q_chunk_V_ret7_3 = extractvalue { i3, i3 } %call_ret12_3, 0" [int_div5.cpp:964]   --->   Operation 32 'extractvalue' 'q_chunk_V_ret7_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%r_V_ret8_3 = extractvalue { i3, i3 } %call_ret12_3, 1" [int_div5.cpp:964]   --->   Operation 33 'extractvalue' 'r_V_ret8_3' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 6.84>
ST_4 : Operation 34 [1/1] (3.42ns)   --->   "%call_ret12_4 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_14_4, i3 %r_V_ret8_3) nounwind" [int_div5.cpp:964]   --->   Operation 34 'call' 'call_ret12_4' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%q_chunk_V_ret7_4 = extractvalue { i3, i3 } %call_ret12_4, 0" [int_div5.cpp:964]   --->   Operation 35 'extractvalue' 'q_chunk_V_ret7_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%r_V_ret8_4 = extractvalue { i3, i3 } %call_ret12_4, 1" [int_div5.cpp:964]   --->   Operation 36 'extractvalue' 'r_V_ret8_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (3.42ns)   --->   "%call_ret12_5 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_14_5, i3 %r_V_ret8_4) nounwind" [int_div5.cpp:964]   --->   Operation 37 'call' 'call_ret12_5' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%q_chunk_V_ret7_5 = extractvalue { i3, i3 } %call_ret12_5, 0" [int_div5.cpp:964]   --->   Operation 38 'extractvalue' 'q_chunk_V_ret7_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%r_V_ret8_5 = extractvalue { i3, i3 } %call_ret12_5, 1" [int_div5.cpp:964]   --->   Operation 39 'extractvalue' 'r_V_ret8_5' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 6.84>
ST_5 : Operation 40 [1/1] (3.42ns)   --->   "%call_ret12_6 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_14_6, i3 %r_V_ret8_5) nounwind" [int_div5.cpp:964]   --->   Operation 40 'call' 'call_ret12_6' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%q_chunk_V_ret7_6 = extractvalue { i3, i3 } %call_ret12_6, 0" [int_div5.cpp:964]   --->   Operation 41 'extractvalue' 'q_chunk_V_ret7_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%r_V_ret8_6 = extractvalue { i3, i3 } %call_ret12_6, 1" [int_div5.cpp:964]   --->   Operation 42 'extractvalue' 'r_V_ret8_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (3.42ns)   --->   "%call_ret12_7 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_14_7, i3 %r_V_ret8_6) nounwind" [int_div5.cpp:964]   --->   Operation 43 'call' 'call_ret12_7' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%q_chunk_V_ret7_7 = extractvalue { i3, i3 } %call_ret12_7, 0" [int_div5.cpp:964]   --->   Operation 44 'extractvalue' 'q_chunk_V_ret7_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%r_V_ret8_7 = extractvalue { i3, i3 } %call_ret12_7, 1" [int_div5.cpp:964]   --->   Operation 45 'extractvalue' 'r_V_ret8_7' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 6.84>
ST_6 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %in_r) nounwind, !map !81"   --->   Operation 46 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !87"   --->   Operation 47 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @int_div5_str) nounwind"   --->   Operation 48 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 49 [1/1] (3.42ns)   --->   "%call_ret12_8 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %p_Result_14_8, i3 %r_V_ret8_7) nounwind" [int_div5.cpp:964]   --->   Operation 49 'call' 'call_ret12_8' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 50 [1/1] (0.00ns)   --->   "%q_chunk_V_ret7_8 = extractvalue { i3, i3 } %call_ret12_8, 0" [int_div5.cpp:964]   --->   Operation 50 'extractvalue' 'q_chunk_V_ret7_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 51 [1/1] (0.00ns)   --->   "%r_V_ret8_8 = extractvalue { i3, i3 } %call_ret12_8, 1" [int_div5.cpp:964]   --->   Operation 51 'extractvalue' 'r_V_ret8_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 52 [1/1] (3.42ns)   --->   "%call_ret12_9 = call fastcc { i3, i3 } @lut_div5_chunk(i3 %tmp, i3 %r_V_ret8_8) nounwind" [int_div5.cpp:964]   --->   Operation 52 'call' 'call_ret12_9' <Predicate = true> <Delay = 3.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 53 [1/1] (0.00ns)   --->   "%q_chunk_V_ret7_9 = extractvalue { i3, i3 } %call_ret12_9, 0" [int_div5.cpp:964]   --->   Operation 53 'extractvalue' 'q_chunk_V_ret7_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "%p_Result_15_9 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i3.i3.i3.i3.i3.i3.i3.i3.i3.i3(i2 undef, i3 %q_chunk_V_ret7, i3 %q_chunk_V_ret7_1, i3 %q_chunk_V_ret7_2, i3 %q_chunk_V_ret7_3, i3 %q_chunk_V_ret7_4, i3 %q_chunk_V_ret7_5, i3 %q_chunk_V_ret7_6, i3 %q_chunk_V_ret7_7, i3 %q_chunk_V_ret7_8, i3 %q_chunk_V_ret7_9)" [int_div5.cpp:965]   --->   Operation 54 'bitconcatenate' 'p_Result_15_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 55 [1/1] (0.00ns)   --->   "ret i32 %p_Result_15_9" [int_div5.cpp:968]   --->   Operation 55 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.42ns
The critical path consists of the following:
	wire read on port 'in_r' [5]  (0 ns)
	'call' operation ('call_ret', int_div5.cpp:958) to 'lut_div5_chunk' [8]  (3.42 ns)

 <State 2>: 6.85ns
The critical path consists of the following:
	'call' operation ('call_ret1', int_div5.cpp:964) to 'lut_div5_chunk' [11]  (3.42 ns)
	'call' operation ('call_ret12_1', int_div5.cpp:964) to 'lut_div5_chunk' [15]  (3.42 ns)

 <State 3>: 6.85ns
The critical path consists of the following:
	'call' operation ('call_ret12_2', int_div5.cpp:964) to 'lut_div5_chunk' [19]  (3.42 ns)
	'call' operation ('call_ret12_3', int_div5.cpp:964) to 'lut_div5_chunk' [23]  (3.42 ns)

 <State 4>: 6.85ns
The critical path consists of the following:
	'call' operation ('call_ret12_4', int_div5.cpp:964) to 'lut_div5_chunk' [27]  (3.42 ns)
	'call' operation ('call_ret12_5', int_div5.cpp:964) to 'lut_div5_chunk' [31]  (3.42 ns)

 <State 5>: 6.85ns
The critical path consists of the following:
	'call' operation ('call_ret12_6', int_div5.cpp:964) to 'lut_div5_chunk' [35]  (3.42 ns)
	'call' operation ('call_ret12_7', int_div5.cpp:964) to 'lut_div5_chunk' [39]  (3.42 ns)

 <State 6>: 6.85ns
The critical path consists of the following:
	'call' operation ('call_ret12_8', int_div5.cpp:964) to 'lut_div5_chunk' [43]  (3.42 ns)
	'call' operation ('call_ret12_9', int_div5.cpp:964) to 'lut_div5_chunk' [47]  (3.42 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
