// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _int_32_div29_HH_
#define _int_32_div29_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lut_div29_chunk.h"

namespace ap_rtl {

struct int_32_div29 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > in_V;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    int_32_div29(sc_module_name name);
    SC_HAS_PROCESS(int_32_div29);

    ~int_32_div29();

    sc_trace_file* mVcdFile;

    lut_div29_chunk* grp_lut_div29_chunk_fu_80;
    lut_div29_chunk* grp_lut_div29_chunk_fu_87;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > reg_110;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<1> > q_chunk_V_reg_407;
    sc_signal< sc_lv<1> > q_chunk_V_1_reg_412;
    sc_signal< sc_lv<1> > tmp_2_reg_417;
    sc_signal< sc_lv<1> > tmp_3_reg_422;
    sc_signal< sc_lv<1> > tmp_4_reg_427;
    sc_signal< sc_lv<1> > tmp_5_reg_432;
    sc_signal< sc_lv<1> > tmp_6_reg_437;
    sc_signal< sc_lv<1> > tmp_7_reg_442;
    sc_signal< sc_lv<1> > tmp_8_reg_447;
    sc_signal< sc_lv<1> > tmp_9_reg_452;
    sc_signal< sc_lv<1> > tmp_10_reg_457;
    sc_signal< sc_lv<1> > tmp_11_reg_462;
    sc_signal< sc_lv<1> > tmp_12_reg_467;
    sc_signal< sc_lv<1> > tmp_13_reg_472;
    sc_signal< sc_lv<1> > tmp_14_reg_477;
    sc_signal< sc_lv<1> > tmp_15_reg_482;
    sc_signal< sc_lv<1> > tmp_16_reg_487;
    sc_signal< sc_lv<1> > tmp_17_reg_492;
    sc_signal< sc_lv<1> > tmp_18_reg_497;
    sc_signal< sc_lv<1> > tmp_19_reg_502;
    sc_signal< sc_lv<1> > tmp_20_reg_507;
    sc_signal< sc_lv<1> > tmp_21_reg_512;
    sc_signal< sc_lv<1> > tmp_22_reg_517;
    sc_signal< sc_lv<1> > tmp_23_reg_522;
    sc_signal< sc_lv<1> > tmp_24_reg_527;
    sc_signal< sc_lv<1> > tmp_25_reg_532;
    sc_signal< sc_lv<1> > tmp_26_reg_537;
    sc_signal< sc_lv<1> > tmp_27_reg_542;
    sc_signal< sc_lv<1> > tmp_28_reg_547;
    sc_signal< sc_lv<1> > tmp_29_reg_552;
    sc_signal< sc_lv<1> > tmp_30_reg_557;
    sc_signal< sc_lv<1> > tmp_31_fu_365_p1;
    sc_signal< sc_lv<1> > tmp_31_reg_562;
    sc_signal< sc_lv<1> > q_chunk_V_2_reg_567;
    sc_signal< sc_lv<1> > q_chunk_V_3_reg_572;
    sc_signal< sc_lv<1> > q_chunk_V_4_reg_577;
    sc_signal< sc_lv<1> > q_chunk_V_5_reg_582;
    sc_signal< sc_lv<1> > q_chunk_V_6_reg_587;
    sc_signal< sc_lv<1> > q_chunk_V_7_reg_592;
    sc_signal< sc_lv<1> > q_chunk_V_8_reg_597;
    sc_signal< sc_lv<1> > q_chunk_V_9_reg_602;
    sc_signal< sc_lv<1> > q_chunk_V_10_reg_607;
    sc_signal< sc_lv<1> > q_chunk_V_11_reg_612;
    sc_signal< sc_lv<1> > q_chunk_V_12_reg_617;
    sc_signal< sc_lv<1> > q_chunk_V_13_reg_622;
    sc_signal< sc_lv<1> > q_chunk_V_14_reg_627;
    sc_signal< sc_lv<1> > q_chunk_V_15_reg_632;
    sc_signal< sc_lv<1> > q_chunk_V_16_reg_637;
    sc_signal< sc_lv<1> > q_chunk_V_17_reg_642;
    sc_signal< sc_lv<1> > q_chunk_V_18_reg_647;
    sc_signal< sc_lv<1> > q_chunk_V_19_reg_652;
    sc_signal< sc_lv<1> > q_chunk_V_20_reg_657;
    sc_signal< sc_lv<1> > q_chunk_V_21_reg_662;
    sc_signal< sc_lv<1> > q_chunk_V_22_reg_667;
    sc_signal< sc_lv<1> > q_chunk_V_23_reg_672;
    sc_signal< sc_lv<1> > q_chunk_V_24_reg_677;
    sc_signal< sc_lv<1> > q_chunk_V_25_reg_682;
    sc_signal< sc_lv<1> > q_chunk_V_26_reg_687;
    sc_signal< sc_lv<1> > q_chunk_V_27_reg_692;
    sc_signal< sc_lv<1> > q_chunk_V_28_reg_697;
    sc_signal< sc_lv<1> > q_chunk_V_29_reg_702;
    sc_signal< sc_logic > grp_lut_div29_chunk_fu_80_ap_ready;
    sc_signal< sc_lv<1> > grp_lut_div29_chunk_fu_80_d_V;
    sc_signal< sc_lv<5> > grp_lut_div29_chunk_fu_80_r_in_V;
    sc_signal< sc_lv<5> > grp_lut_div29_chunk_fu_80_ap_return_0;
    sc_signal< sc_lv<1> > grp_lut_div29_chunk_fu_80_ap_return_1;
    sc_signal< sc_logic > grp_lut_div29_chunk_fu_87_ap_ready;
    sc_signal< sc_lv<1> > grp_lut_div29_chunk_fu_87_d_V;
    sc_signal< sc_lv<5> > grp_lut_div29_chunk_fu_87_ap_return_0;
    sc_signal< sc_lv<1> > grp_lut_div29_chunk_fu_87_ap_return_1;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_10;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_lut_div29_chunk_fu_80_d_V();
    void thread_grp_lut_div29_chunk_fu_80_r_in_V();
    void thread_grp_lut_div29_chunk_fu_87_d_V();
    void thread_tmp_31_fu_365_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
