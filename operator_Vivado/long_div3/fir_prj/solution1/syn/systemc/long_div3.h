// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _long_div3_HH_
#define _long_div3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lut_div3_chunk.h"

namespace ap_rtl {

struct long_div3 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > in_r;
    sc_out< sc_lv<64> > ap_return;


    // Module declarations
    long_div3(sc_module_name name);
    SC_HAS_PROCESS(long_div3);

    ~long_div3();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    lut_div3_chunk* grp_lut_div3_chunk_fu_86;
    lut_div3_chunk* grp_lut_div3_chunk_fu_93;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > reg_116;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<4> > q_chunk_V_reg_299;
    sc_signal< sc_lv<4> > q_chunk_V_0_1_reg_304;
    sc_signal< sc_lv<4> > p_Result_2_reg_309;
    sc_signal< sc_lv<4> > p_Result_3_reg_314;
    sc_signal< sc_lv<4> > p_Result_4_reg_319;
    sc_signal< sc_lv<4> > p_Result_5_reg_324;
    sc_signal< sc_lv<4> > p_Result_6_reg_329;
    sc_signal< sc_lv<4> > p_Result_7_reg_334;
    sc_signal< sc_lv<4> > p_Result_8_reg_339;
    sc_signal< sc_lv<4> > p_Result_9_reg_344;
    sc_signal< sc_lv<4> > p_Result_s_4_reg_349;
    sc_signal< sc_lv<4> > p_Result_10_reg_354;
    sc_signal< sc_lv<4> > p_Result_11_reg_359;
    sc_signal< sc_lv<4> > p_Result_12_reg_364;
    sc_signal< sc_lv<4> > p_Result_13_reg_369;
    sc_signal< sc_lv<4> > tmp_fu_273_p1;
    sc_signal< sc_lv<4> > tmp_reg_374;
    sc_signal< sc_lv<4> > q_chunk_V_0_2_reg_379;
    sc_signal< sc_lv<4> > q_chunk_V_0_3_reg_384;
    sc_signal< sc_lv<4> > q_chunk_V_0_4_reg_389;
    sc_signal< sc_lv<4> > q_chunk_V_0_5_reg_394;
    sc_signal< sc_lv<4> > q_chunk_V_0_6_reg_399;
    sc_signal< sc_lv<4> > q_chunk_V_0_7_reg_404;
    sc_signal< sc_lv<4> > q_chunk_V_0_8_reg_409;
    sc_signal< sc_lv<4> > q_chunk_V_0_9_reg_414;
    sc_signal< sc_lv<4> > q_chunk_V_0_s_reg_419;
    sc_signal< sc_lv<4> > q_chunk_V_0_10_reg_424;
    sc_signal< sc_lv<4> > q_chunk_V_0_11_reg_429;
    sc_signal< sc_lv<4> > q_chunk_V_0_12_reg_434;
    sc_signal< sc_logic > grp_lut_div3_chunk_fu_86_ap_ready;
    sc_signal< sc_lv<4> > grp_lut_div3_chunk_fu_86_d_V;
    sc_signal< sc_lv<2> > grp_lut_div3_chunk_fu_86_r_in_V;
    sc_signal< sc_lv<4> > grp_lut_div3_chunk_fu_86_ap_return_0;
    sc_signal< sc_lv<2> > grp_lut_div3_chunk_fu_86_ap_return_1;
    sc_signal< sc_logic > grp_lut_div3_chunk_fu_93_ap_ready;
    sc_signal< sc_lv<4> > grp_lut_div3_chunk_fu_93_d_V;
    sc_signal< sc_lv<4> > grp_lut_div3_chunk_fu_93_ap_return_0;
    sc_signal< sc_lv<2> > grp_lut_div3_chunk_fu_93_ap_return_1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_lut_div3_chunk_fu_86_d_V();
    void thread_grp_lut_div3_chunk_fu_86_r_in_V();
    void thread_grp_lut_div3_chunk_fu_93_d_V();
    void thread_tmp_fu_273_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
